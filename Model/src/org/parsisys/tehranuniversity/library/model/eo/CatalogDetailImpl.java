package org.parsisys.tehranuniversity.library.model.eo;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Dec 23 17:28:21 GMT+03:30 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CatalogDetailImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Labcol {
            public Object get(CatalogDetailImpl obj) {
                return obj.getLabcol();
            }

            public void put(CatalogDetailImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        Value {
            public Object get(CatalogDetailImpl obj) {
                return obj.getValue();
            }

            public void put(CatalogDetailImpl obj, Object value) {
                obj.setValue((Number)value);
            }
        }
        ,
        EnglishText {
            public Object get(CatalogDetailImpl obj) {
                return obj.getEnglishText();
            }

            public void put(CatalogDetailImpl obj, Object value) {
                obj.setEnglishText((String)value);
            }
        }
        ,
        Active {
            public Object get(CatalogDetailImpl obj) {
                return obj.getActive();
            }

            public void put(CatalogDetailImpl obj, Object value) {
                obj.setActive((Number)value);
            }
        }
        ,
        Text {
            public Object get(CatalogDetailImpl obj) {
                return obj.getText();
            }

            public void put(CatalogDetailImpl obj, Object value) {
                obj.setText((String)value);
            }
        }
        ,
        CatArtId {
            public Object get(CatalogDetailImpl obj) {
                return obj.getCatArtId();
            }

            public void put(CatalogDetailImpl obj, Object value) {
                obj.setCatArtId((Number)value);
            }
        }
        ,
        MemberSetup {
            public Object get(CatalogDetailImpl obj) {
                return obj.getMemberSetup();
            }

            public void put(CatalogDetailImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CatalogDetailImpl object);

        public abstract void put(CatalogDetailImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int VALUE = AttributesEnum.Value.index();
    public static final int ENGLISHTEXT = AttributesEnum.EnglishText.index();
    public static final int ACTIVE = AttributesEnum.Active.index();
    public static final int TEXT = AttributesEnum.Text.index();
    public static final int CATARTID = AttributesEnum.CatArtId.index();
    public static final int MEMBERSETUP = AttributesEnum.MemberSetup.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CatalogDetailImpl() {
    }

    /**
     * Gets the attribute value for Labcol, using the alias name Labcol.
     * @return the Labcol
     */
    public Number getLabcol() {
        return (Number)getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Labcol.
     * @param value value to set the Labcol
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for Value, using the alias name Value.
     * @return the Value
     */
    public Number getValue() {
        return (Number)getAttributeInternal(VALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Value.
     * @param value value to set the Value
     */
    public void setValue(Number value) {
        setAttributeInternal(VALUE, value);
    }

    /**
     * Gets the attribute value for EnglishText, using the alias name EnglishText.
     * @return the EnglishText
     */
    public String getEnglishText() {
        return (String)getAttributeInternal(ENGLISHTEXT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnglishText.
     * @param value value to set the EnglishText
     */
    public void setEnglishText(String value) {
        setAttributeInternal(ENGLISHTEXT, value);
    }

    /**
     * Gets the attribute value for Active, using the alias name Active.
     * @return the Active
     */
    public Number getActive() {
        return (Number)getAttributeInternal(ACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Active.
     * @param value value to set the Active
     */
    public void setActive(Number value) {
        setAttributeInternal(ACTIVE, value);
    }

    /**
     * Gets the attribute value for Text, using the alias name Text.
     * @return the Text
     */
    public String getText() {
        return (String)getAttributeInternal(TEXT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Text.
     * @param value value to set the Text
     */
    public void setText(String value) {
        setAttributeInternal(TEXT, value);
    }

    /**
     * Gets the attribute value for CatArtId, using the alias name CatArtId.
     * @return the CatArtId
     */
    public Number getCatArtId() {
        return (Number)getAttributeInternal(CATARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CatArtId.
     * @param value value to set the CatArtId
     */
    public void setCatArtId(Number value) {
        setAttributeInternal(CATARTID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMemberSetup() {
        return (RowIterator)getAttributeInternal(MEMBERSETUP);
    }

    /**
     * @param labcol key constituent
     * @param value key constituent
     * @param catArtId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number labcol, Number value,
                                       Number catArtId) {
        return new Key(new Object[]{labcol, value, catArtId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("org.parsisys.tehranuniversity.library.model.eo.CatalogDetail");
        }
        return mDefinitionObject;
    }
}
