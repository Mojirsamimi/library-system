package org.parsisys.tehranuniversity.library.model.eo;

import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 13 14:57:02 GMT+03:30 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PublicNonCashPenaltyImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Labcol {
            public Object get(PublicNonCashPenaltyImpl obj) {
                return obj.getLabcol();
            }

            public void put(PublicNonCashPenaltyImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        PenaltyDesc {
            public Object get(PublicNonCashPenaltyImpl obj) {
                return obj.getPenaltyDesc();
            }

            public void put(PublicNonCashPenaltyImpl obj, Object value) {
                obj.setPenaltyDesc((String)value);
            }
        }
        ,
        PenaltyDate {
            public Object get(PublicNonCashPenaltyImpl obj) {
                return obj.getPenaltyDate();
            }

            public void put(PublicNonCashPenaltyImpl obj, Object value) {
                obj.setPenaltyDate((Number)value);
            }
        }
        ,
        ActionDesc {
            public Object get(PublicNonCashPenaltyImpl obj) {
                return obj.getActionDesc();
            }

            public void put(PublicNonCashPenaltyImpl obj, Object value) {
                obj.setActionDesc((String)value);
            }
        }
        ,
        ActionDate {
            public Object get(PublicNonCashPenaltyImpl obj) {
                return obj.getActionDate();
            }

            public void put(PublicNonCashPenaltyImpl obj, Object value) {
                obj.setActionDate((Number)value);
            }
        }
        ,
        Active {
            public Object get(PublicNonCashPenaltyImpl obj) {
                return obj.getActive();
            }

            public void put(PublicNonCashPenaltyImpl obj, Object value) {
                obj.setActive((Number)value);
            }
        }
        ,
        ArtId {
            public Object get(PublicNonCashPenaltyImpl obj) {
                return obj.getArtId();
            }

            public void put(PublicNonCashPenaltyImpl obj, Object value) {
                obj.setArtId((DBSequence)value);
            }
        }
        ,
        MemArtId {
            public Object get(PublicNonCashPenaltyImpl obj) {
                return obj.getMemArtId();
            }

            public void put(PublicNonCashPenaltyImpl obj, Object value) {
                obj.setMemArtId((Number)value);
            }
        }
        ,
        RegisterUser {
            public Object get(PublicNonCashPenaltyImpl obj) {
                return obj.getRegisterUser();
            }

            public void put(PublicNonCashPenaltyImpl obj, Object value) {
                obj.setRegisterUser((String)value);
            }
        }
        ,
        ActionUser {
            public Object get(PublicNonCashPenaltyImpl obj) {
                return obj.getActionUser();
            }

            public void put(PublicNonCashPenaltyImpl obj, Object value) {
                obj.setActionUser((String)value);
            }
        }
        ,
        Member {
            public Object get(PublicNonCashPenaltyImpl obj) {
                return obj.getMember();
            }

            public void put(PublicNonCashPenaltyImpl obj, Object value) {
                obj.setMember((EntityImpl)value);
            }
        }
        ,
        InitMember {
            public Object get(PublicNonCashPenaltyImpl obj) {
                return obj.getInitMember();
            }

            public void put(PublicNonCashPenaltyImpl obj, Object value) {
                obj.setInitMember((InitMemberImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PublicNonCashPenaltyImpl object);

        public abstract void put(PublicNonCashPenaltyImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int PENALTYDESC = AttributesEnum.PenaltyDesc.index();
    public static final int PENALTYDATE = AttributesEnum.PenaltyDate.index();
    public static final int ACTIONDESC = AttributesEnum.ActionDesc.index();
    public static final int ACTIONDATE = AttributesEnum.ActionDate.index();
    public static final int ACTIVE = AttributesEnum.Active.index();
    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int MEMARTID = AttributesEnum.MemArtId.index();
    public static final int REGISTERUSER = AttributesEnum.RegisterUser.index();
    public static final int ACTIONUSER = AttributesEnum.ActionUser.index();
    public static final int MEMBER = AttributesEnum.Member.index();
    public static final int INITMEMBER = AttributesEnum.InitMember.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PublicNonCashPenaltyImpl() {
    }

    /**
     * Gets the attribute value for Labcol, using the alias name Labcol.
     * @return the Labcol
     */
    public Number getLabcol() {
        return (Number)getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Labcol.
     * @param value value to set the Labcol
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for PenaltyDesc, using the alias name PenaltyDesc.
     * @return the PenaltyDesc
     */
    public String getPenaltyDesc() {
        return (String)getAttributeInternal(PENALTYDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for PenaltyDesc.
     * @param value value to set the PenaltyDesc
     */
    public void setPenaltyDesc(String value) {
        setAttributeInternal(PENALTYDESC, value);
    }

    /**
     * Gets the attribute value for PenaltyDate, using the alias name PenaltyDate.
     * @return the PenaltyDate
     */
    public Number getPenaltyDate() {
        return (Number)getAttributeInternal(PENALTYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PenaltyDate.
     * @param value value to set the PenaltyDate
     */
    public void setPenaltyDate(Number value) {
        setAttributeInternal(PENALTYDATE, value);
    }

    /**
     * Gets the attribute value for ActionDesc, using the alias name ActionDesc.
     * @return the ActionDesc
     */
    public String getActionDesc() {
        return (String)getAttributeInternal(ACTIONDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActionDesc.
     * @param value value to set the ActionDesc
     */
    public void setActionDesc(String value) {
        setAttributeInternal(ACTIONDESC, value);
    }

    /**
     * Gets the attribute value for ActionDate, using the alias name ActionDate.
     * @return the ActionDate
     */
    public Number getActionDate() {
        return (Number)getAttributeInternal(ACTIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActionDate.
     * @param value value to set the ActionDate
     */
    public void setActionDate(Number value) {
        setAttributeInternal(ACTIONDATE, value);
    }

    /**
     * Gets the attribute value for Active, using the alias name Active.
     * @return the Active
     */
    public Number getActive() {
        return (Number)getAttributeInternal(ACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Active.
     * @param value value to set the Active
     */
    public void setActive(Number value) {
        setAttributeInternal(ACTIVE, value);
    }

    /**
     * Gets the attribute value for ArtId, using the alias name ArtId.
     * @return the ArtId
     */
    public DBSequence getArtId() {
        return (DBSequence)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArtId.
     * @param value value to set the ArtId
     */
    public void setArtId(DBSequence value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for MemArtId, using the alias name MemArtId.
     * @return the MemArtId
     */
    public Number getMemArtId() {
        return (Number)getAttributeInternal(MEMARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MemArtId.
     * @param value value to set the MemArtId
     */
    public void setMemArtId(Number value) {
        setAttributeInternal(MEMARTID, value);
    }

    /**
     * Gets the attribute value for RegisterUser, using the alias name RegisterUser.
     * @return the RegisterUser
     */
    public String getRegisterUser() {
        return (String)getAttributeInternal(REGISTERUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for RegisterUser.
     * @param value value to set the RegisterUser
     */
    public void setRegisterUser(String value) {
        setAttributeInternal(REGISTERUSER, value);
    }

    /**
     * Gets the attribute value for ActionUser, using the alias name ActionUser.
     * @return the ActionUser
     */
    public String getActionUser() {
        return (String)getAttributeInternal(ACTIONUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActionUser.
     * @param value value to set the ActionUser
     */
    public void setActionUser(String value) {
        setAttributeInternal(ACTIONUSER, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getMember() {
        return (EntityImpl)getAttributeInternal(MEMBER);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setMember(EntityImpl value) {
        setAttributeInternal(MEMBER, value);
    }

    /**
     * @return the associated entity InitMemberImpl.
     */
    public InitMemberImpl getInitMember() {
        return (InitMemberImpl)getAttributeInternal(INITMEMBER);
    }

    /**
     * Sets <code>value</code> as the associated entity InitMemberImpl.
     */
    public void setInitMember(InitMemberImpl value) {
        setAttributeInternal(INITMEMBER, value);
    }

    /**
     * @param labcol key constituent
     * @param artId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number labcol, DBSequence artId) {
        return new Key(new Object[]{labcol, artId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("org.parsisys.tehranuniversity.library.model.eo.PublicNonCashPenalty");
        }
        return mDefinitionObject;
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
      if(operation==DML_INSERT){
        SequenceImpl si = new SequenceImpl("seq_pub_n_cash_penalty_art_id",getDBTransaction());
        setArtId(new DBSequence( si.getSequenceNumber()));
      }
      
        super.doDML(operation, e);
    }
}
