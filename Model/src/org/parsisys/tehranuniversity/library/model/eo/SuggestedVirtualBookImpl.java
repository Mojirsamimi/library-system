package org.parsisys.tehranuniversity.library.model.eo;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;

import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;

import org.parsisys.tehranuniversity.library.util.ParsiUtil;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 16 13:42:19 IRST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SuggestedVirtualBookImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        
      if(operation==DML_INSERT) {
        SequenceImpl si =
            new SequenceImpl("BOOK.SEQ_SUGGESTED_VBOOK", getDBTransaction());
        setArtId(new DBSequence( si.getSequenceNumber()));
      }
      if(operation==DML_UPDATE) {
          setModifiedDate(ParsiUtil.DateToNumber());
          }
        super.doDML(operation, e);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ArtId {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getArtId();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setArtId((DBSequence)value);
            }
        }
        ,
        Labcol {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getLabcol();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        Title {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getTitle();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setTitle((String)value);
            }
        }
        ,
        OrigTitle {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getOrigTitle();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setOrigTitle((String)value);
            }
        }
        ,
        UniformTitle {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getUniformTitle();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setUniformTitle((String)value);
            }
        }
        ,
        Edition {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getEdition();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setEdition((String)value);
            }
        }
        ,
        PhysicalDesc {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getPhysicalDesc();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setPhysicalDesc((String)value);
            }
        }
        ,
        Reference {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getReference();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setReference((Number)value);
            }
        }
        ,
        VolumeCount {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getVolumeCount();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setVolumeCount((Number)value);
            }
        }
        ,
        PubDate {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getPubDate();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setPubDate((String)value);
            }
        }
        ,
        InsertDate {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getInsertDate();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setInsertDate((Number)value);
            }
        }
        ,
        ActiveStatus {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getActiveStatus();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setActiveStatus((Number)value);
            }
        }
        ,
        ActiveChangeDate {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getActiveChangeDate();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setActiveChangeDate((Number)value);
            }
        }
        ,
        ActiveChangeUser {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getActiveChangeUser();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setActiveChangeUser((String)value);
            }
        }
        ,
        UserName {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getUserName();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setUserName((String)value);
            }
        }
        ,
        ModifiedDate {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getModifiedDate();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setModifiedDate((Number)value);
            }
        }
        ,
        SuggestedBookLanguage {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getSuggestedBookLanguage();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SuggestedProvider {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getSuggestedProvider();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SuggestedPublisher {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getSuggestedPublisher();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SuggestedSubject {
            public Object get(SuggestedVirtualBookImpl obj) {
                return obj.getSuggestedSubject();
            }

            public void put(SuggestedVirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SuggestedVirtualBookImpl object);

        public abstract void put(SuggestedVirtualBookImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int ORIGTITLE = AttributesEnum.OrigTitle.index();
    public static final int UNIFORMTITLE = AttributesEnum.UniformTitle.index();
    public static final int EDITION = AttributesEnum.Edition.index();
    public static final int PHYSICALDESC = AttributesEnum.PhysicalDesc.index();
    public static final int REFERENCE = AttributesEnum.Reference.index();
    public static final int VOLUMECOUNT = AttributesEnum.VolumeCount.index();
    public static final int PUBDATE = AttributesEnum.PubDate.index();
    public static final int INSERTDATE = AttributesEnum.InsertDate.index();
    public static final int ACTIVESTATUS = AttributesEnum.ActiveStatus.index();
    public static final int ACTIVECHANGEDATE = AttributesEnum.ActiveChangeDate.index();
    public static final int ACTIVECHANGEUSER = AttributesEnum.ActiveChangeUser.index();
    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int SUGGESTEDBOOKLANGUAGE = AttributesEnum.SuggestedBookLanguage.index();
    public static final int SUGGESTEDPROVIDER = AttributesEnum.SuggestedProvider.index();
    public static final int SUGGESTEDPUBLISHER = AttributesEnum.SuggestedPublisher.index();
    public static final int SUGGESTEDSUBJECT = AttributesEnum.SuggestedSubject.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SuggestedVirtualBookImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("org.parsisys.tehranuniversity.library.model.eo.SuggestedVirtualBook");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for ArtId, using the alias name ArtId.
     * @return the ArtId
     */
    public DBSequence getArtId() {
        return (DBSequence)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArtId.
     * @param value value to set the ArtId
     */
    public void setArtId(DBSequence value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for Labcol, using the alias name Labcol.
     * @return the Labcol
     */
    public Number getLabcol() {
        return (Number)getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Labcol.
     * @param value value to set the Labcol
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for Title, using the alias name Title.
     * @return the Title
     */
    public String getTitle() {
        return (String)getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Title.
     * @param value value to set the Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for OrigTitle, using the alias name OrigTitle.
     * @return the OrigTitle
     */
    public String getOrigTitle() {
        return (String)getAttributeInternal(ORIGTITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrigTitle.
     * @param value value to set the OrigTitle
     */
    public void setOrigTitle(String value) {
        setAttributeInternal(ORIGTITLE, value);
    }

    /**
     * Gets the attribute value for UniformTitle, using the alias name UniformTitle.
     * @return the UniformTitle
     */
    public String getUniformTitle() {
        return (String)getAttributeInternal(UNIFORMTITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UniformTitle.
     * @param value value to set the UniformTitle
     */
    public void setUniformTitle(String value) {
        setAttributeInternal(UNIFORMTITLE, value);
    }

    /**
     * Gets the attribute value for Edition, using the alias name Edition.
     * @return the Edition
     */
    public String getEdition() {
        return (String)getAttributeInternal(EDITION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Edition.
     * @param value value to set the Edition
     */
    public void setEdition(String value) {
        setAttributeInternal(EDITION, value);
    }

    /**
     * Gets the attribute value for PhysicalDesc, using the alias name PhysicalDesc.
     * @return the PhysicalDesc
     */
    public String getPhysicalDesc() {
        return (String)getAttributeInternal(PHYSICALDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for PhysicalDesc.
     * @param value value to set the PhysicalDesc
     */
    public void setPhysicalDesc(String value) {
        setAttributeInternal(PHYSICALDESC, value);
    }

    /**
     * Gets the attribute value for Reference, using the alias name Reference.
     * @return the Reference
     */
    public Number getReference() {
        return (Number)getAttributeInternal(REFERENCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Reference.
     * @param value value to set the Reference
     */
    public void setReference(Number value) {
        setAttributeInternal(REFERENCE, value);
    }

    /**
     * Gets the attribute value for VolumeCount, using the alias name VolumeCount.
     * @return the VolumeCount
     */
    public Number getVolumeCount() {
        return (Number)getAttributeInternal(VOLUMECOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for VolumeCount.
     * @param value value to set the VolumeCount
     */
    public void setVolumeCount(Number value) {
        setAttributeInternal(VOLUMECOUNT, value);
    }

    /**
     * Gets the attribute value for PubDate, using the alias name PubDate.
     * @return the PubDate
     */
    public String getPubDate() {
        return (String)getAttributeInternal(PUBDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PubDate.
     * @param value value to set the PubDate
     */
    public void setPubDate(String value) {
        setAttributeInternal(PUBDATE, value);
    }

    /**
     * Gets the attribute value for InsertDate, using the alias name InsertDate.
     * @return the InsertDate
     */
    public Number getInsertDate() {
        return (Number)getAttributeInternal(INSERTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsertDate.
     * @param value value to set the InsertDate
     */
    public void setInsertDate(Number value) {
        setAttributeInternal(INSERTDATE, value);
    }

    /**
     * Gets the attribute value for ActiveStatus, using the alias name ActiveStatus.
     * @return the ActiveStatus
     */
    public Number getActiveStatus() {
        return (Number)getAttributeInternal(ACTIVESTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveStatus.
     * @param value value to set the ActiveStatus
     */
    public void setActiveStatus(Number value) {
        setAttributeInternal(ACTIVESTATUS, value);
    }

    /**
     * Gets the attribute value for ActiveChangeDate, using the alias name ActiveChangeDate.
     * @return the ActiveChangeDate
     */
    public Number getActiveChangeDate() {
        return (Number)getAttributeInternal(ACTIVECHANGEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveChangeDate.
     * @param value value to set the ActiveChangeDate
     */
    public void setActiveChangeDate(Number value) {
        setAttributeInternal(ACTIVECHANGEDATE, value);
    }

    /**
     * Gets the attribute value for ActiveChangeUser, using the alias name ActiveChangeUser.
     * @return the ActiveChangeUser
     */
    public String getActiveChangeUser() {
        return (String)getAttributeInternal(ACTIVECHANGEUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveChangeUser.
     * @param value value to set the ActiveChangeUser
     */
    public void setActiveChangeUser(String value) {
        setAttributeInternal(ACTIVECHANGEUSER, value);
    }

    /**
     * Gets the attribute value for UserName, using the alias name UserName.
     * @return the UserName
     */
    public String getUserName() {
        return (String)getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserName.
     * @param value value to set the UserName
     */
    public void setUserName(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the ModifiedDate
     */
    public Number getModifiedDate() {
        return (Number)getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Number value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSuggestedBookLanguage() {
        return (RowIterator)getAttributeInternal(SUGGESTEDBOOKLANGUAGE);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSuggestedProvider() {
        return (RowIterator)getAttributeInternal(SUGGESTEDPROVIDER);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSuggestedPublisher() {
        return (RowIterator)getAttributeInternal(SUGGESTEDPUBLISHER);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSuggestedSubject() {
        return (RowIterator)getAttributeInternal(SUGGESTEDSUBJECT);
    }


    /**
     * @param artId key constituent
     * @param labcol key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence artId, Number labcol) {
        return new Key(new Object[]{artId, labcol});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setInsertDate(ParsiUtil.DateToNumber());
        super.create(attributeList);
    }
}
