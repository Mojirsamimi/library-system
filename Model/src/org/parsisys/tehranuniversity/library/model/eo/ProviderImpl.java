package org.parsisys.tehranuniversity.library.model.eo;

import fadak.base.TemplateEntityObject;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;

import org.parsisys.tehranuniversity.library.model.vo.RO.DummyVOImpl;
import org.parsisys.tehranuniversity.library.util.ParsiException;
import org.parsisys.tehranuniversity.library.util.ParsiUtil;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Jan 22 16:01:56 IRST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProviderImpl extends TemplateEntityObject {
    private static EntityDefImpl mDefinitionObject;

   

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Labcol {
            public Object get(ProviderImpl obj) {
                return obj.getLabcol();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        ArtId {
            public Object get(ProviderImpl obj) {
                return obj.getArtId();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setArtId((DBSequence)value);
            }
        }
        ,
        Provider {
            public Object get(ProviderImpl obj) {
                return obj.getProvider();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setProvider((String)value);
            }
        }
        ,
        ForeignName {
            public Object get(ProviderImpl obj) {
                return obj.getForeignName();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setForeignName((String)value);
            }
        }
        ,
        BDDate {
            public Object get(ProviderImpl obj) {
                return obj.getBDDate();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setBDDate((String)value);
            }
        }
        ,
        ReadingOrder {
            public Object get(ProviderImpl obj) {
                return obj.getReadingOrder();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setReadingOrder((Number)value);
            }
        }
        ,
        ProviderKind {
            public Object get(ProviderImpl obj) {
                return obj.getProviderKind();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setProviderKind((Number)value);
            }
        }
        ,
        ReferenceType {
            public Object get(ProviderImpl obj) {
                return obj.getReferenceType();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setReferenceType((Number)value);
            }
        }
        ,
        VbookProvider {
            public Object get(ProviderImpl obj) {
                return obj.getVbookProvider();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SeeProvider1 {
            public Object get(ProviderImpl obj) {
                return obj.getSeeProvider1();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SeeAlsoProvider1 {
            public Object get(ProviderImpl obj) {
                return obj.getSeeAlsoProvider1();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SeeProvider {
            public Object get(ProviderImpl obj) {
                return obj.getSeeProvider();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setSeeProvider((SeeProviderImpl)value);
            }
        }
        ,
        SeeAlsoProvider {
            public Object get(ProviderImpl obj) {
                return obj.getSeeAlsoProvider();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setSeeAlsoProvider((SeeAlsoProviderImpl)value);
            }
        }
        ,
        VbookProvider1 {
            public Object get(ProviderImpl obj) {
                return obj.getVbookProvider1();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VirtualBook {
            public Object get(ProviderImpl obj) {
                return obj.getVirtualBook();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DummyVO1 {
            public Object get(ProviderImpl obj) {
                return obj.getDummyVO1();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MessageVO1 {
            public Object get(ProviderImpl obj) {
                return obj.getMessageVO1();
            }

            public void put(ProviderImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ProviderImpl object);

        public abstract void put(ProviderImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int PROVIDER = AttributesEnum.Provider.index();
    public static final int FOREIGNNAME = AttributesEnum.ForeignName.index();
    public static final int BDDATE = AttributesEnum.BDDate.index();
    public static final int READINGORDER = AttributesEnum.ReadingOrder.index();
    public static final int PROVIDERKIND = AttributesEnum.ProviderKind.index();
    public static final int REFERENCETYPE = AttributesEnum.ReferenceType.index();
    public static final int VBOOKPROVIDER = AttributesEnum.VbookProvider.index();
    public static final int SEEPROVIDER1 = AttributesEnum.SeeProvider1.index();
    public static final int SEEALSOPROVIDER1 = AttributesEnum.SeeAlsoProvider1.index();
    public static final int SEEPROVIDER = AttributesEnum.SeeProvider.index();
    public static final int SEEALSOPROVIDER = AttributesEnum.SeeAlsoProvider.index();
    public static final int VBOOKPROVIDER1 = AttributesEnum.VbookProvider1.index();
    public static final int VIRTUALBOOK = AttributesEnum.VirtualBook.index();
    public static final int DUMMYVO1 = AttributesEnum.DummyVO1.index();
    public static final int MESSAGEVO1 = AttributesEnum.MessageVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProviderImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("org.parsisys.tehranuniversity.library.model.eo.Provider");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Labcol, using the alias name Labcol.
     * @return the Labcol
     */
    public Number getLabcol() {
        return (Number)getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Labcol.
     * @param value value to set the Labcol
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for ArtId, using the alias name ArtId.
     * @return the ArtId
     */
    public DBSequence getArtId() {
        return (DBSequence)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArtId.
     * @param value value to set the ArtId
     */
    public void setArtId(DBSequence value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for Provider, using the alias name Provider.
     * @return the Provider
     */
    public String getProvider() {
        return (String)getAttributeInternal(PROVIDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Provider.
     * @param value value to set the Provider
     */
    public void setProvider(String value) {
        setAttributeInternal(PROVIDER, value);
    }

    /**
     * Gets the attribute value for ForeignName, using the alias name ForeignName.
     * @return the ForeignName
     */
    public String getForeignName() {
        return (String)getAttributeInternal(FOREIGNNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ForeignName.
     * @param value value to set the ForeignName
     */
    public void setForeignName(String value) {
        setAttributeInternal(FOREIGNNAME, value);
    }

    /**
     * Gets the attribute value for BDDate, using the alias name BDDate.
     * @return the BDDate
     */
    public String getBDDate() {
        return (String)getAttributeInternal(BDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BDDate.
     * @param value value to set the BDDate
     */
    public void setBDDate(String value) {
        setAttributeInternal(BDDATE, value);
    }

    /**
     * Gets the attribute value for ReadingOrder, using the alias name ReadingOrder.
     * @return the ReadingOrder
     */
    public Number getReadingOrder() {
        return (Number)getAttributeInternal(READINGORDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReadingOrder.
     * @param value value to set the ReadingOrder
     */
    public void setReadingOrder(Number value) {
        setAttributeInternal(READINGORDER, value);
    }

    /**
     * Gets the attribute value for ProviderKind, using the alias name ProviderKind.
     * @return the ProviderKind
     */
    public Number getProviderKind() {
        return (Number)getAttributeInternal(PROVIDERKIND);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProviderKind.
     * @param value value to set the ProviderKind
     */
    public void setProviderKind(Number value) {
        setAttributeInternal(PROVIDERKIND, value);
    }

    /**
     * Gets the attribute value for ReferenceType, using the alias name ReferenceType.
     * @return the ReferenceType
     */
    public Number getReferenceType() {
        return (Number)getAttributeInternal(REFERENCETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReferenceType.
     * @param value value to set the ReferenceType
     */
    public void setReferenceType(Number value) {
        setAttributeInternal(REFERENCETYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getVbookProvider() {
        return (RowIterator)getAttributeInternal(VBOOKPROVIDER);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSeeProvider1() {
        return (RowIterator)getAttributeInternal(SEEPROVIDER1);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSeeAlsoProvider1() {
        return (RowIterator)getAttributeInternal(SEEALSOPROVIDER1);
    }


    /**
     * @return the associated entity SeeProviderImpl.
     */
    public SeeProviderImpl getSeeProvider() {
        return (SeeProviderImpl)getAttributeInternal(SEEPROVIDER);
    }

    /**
     * Sets <code>value</code> as the associated entity SeeProviderImpl.
     */
    public void setSeeProvider(SeeProviderImpl value) {
        setAttributeInternal(SEEPROVIDER, value);
    }


    /**
     * @return the associated entity SeeAlsoProviderImpl.
     */
    public SeeAlsoProviderImpl getSeeAlsoProvider() {
        return (SeeAlsoProviderImpl)getAttributeInternal(SEEALSOPROVIDER);
    }

    /**
     * Sets <code>value</code> as the associated entity SeeAlsoProviderImpl.
     */
    public void setSeeAlsoProvider(SeeAlsoProviderImpl value) {
        setAttributeInternal(SEEALSOPROVIDER, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getVbookProvider1() {
        return (RowIterator)getAttributeInternal(VBOOKPROVIDER1);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getVirtualBook() {
        return (RowIterator)getAttributeInternal(VIRTUALBOOK);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DummyVO1.
     */
    public RowSet getDummyVO1() {
        return (RowSet)getAttributeInternal(DUMMYVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MessageVO1.
     */
    public RowSet getMessageVO1() {
        return (RowSet)getAttributeInternal(MESSAGEVO1);
    }


    /**
     * @param labcol key constituent
     * @param artId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number labcol, DBSequence artId) {
        return new Key(new Object[]{labcol, artId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
       
    }
  @Override
  protected void doDML(int i, TransactionEvent transactionEvent) {
      try{
          if(i!=DML_DELETE) {
            setProvider(ParsiUtil.clearString(getProvider()));
            setForeignName(ParsiUtil.clearString(getForeignName()));
            setBDDate(ParsiUtil.clearString(getBDDate()));
            if(getProvider()==null && getForeignName()==null && getBDDate()==null)
                throw new ParsiException((String)getMessageVO1().findByKey(new Key(new Object[] { "ins_prov_fields".toUpperCase() }),
                                         -1)[0].getAttribute("Message"));
          }
      if(i==DML_INSERT)
      {
    if(chkDup())
      throw new ParsiException((String)getMessageVO1().findByKey(new Key(new Object[] { "dup_prv".toUpperCase() }),
                               -1)[0].getAttribute("Message"));
      SequenceImpl si = new SequenceImpl("LIBRARY.SEQ_PROVIDER_ART_ID",getDBTransaction());
      setArtId(new DBSequence( si.getSequenceNumber()));
    }else if(i==DML_UPDATE) {
          if(!ParsiUtil.stringToZeroValue(getProvider()).equalsIgnoreCase(ParsiUtil.stringToZeroValue((String)getPostedAttribute(PROVIDER))) || !ParsiUtil.stringToZeroValue(getForeignName()).equalsIgnoreCase((String)getPostedAttribute(FOREIGNNAME)) || !ParsiUtil.stringToZeroValue(getBDDate()).equalsIgnoreCase((String)getPostedAttribute(BDDATE))) {
            if(chkDup()) {
              throw new ParsiException((String)getMessageVO1().findByKey(new Key(new Object[] { "dup_prv".toUpperCase() }),
                                       -1)[0].getAttribute("Message"));
            }
          }
        if(new Number(3).equals(getProviderKind()) || new Number(4).equals(getProviderKind())) {
                RowIterator iterator = getVbookProvider();
                while(iterator.hasNext()) {
                  VbookProviderImpl currVbookPrv = (VbookProviderImpl)iterator.next();
                    currVbookPrv.setPrvroleArtId(null);
                }
            }
      
      }
      super.doDML(i, transactionEvent);
      }catch (Exception e) {
          if(e instanceof ParsiException)
              throw new JboException(((ParsiException)e).getMessage());
          else
              throw new JboException("خطا در ذخیره کردن رکورد پدیدآور");
      }
      
  }  
  public boolean chkDup() {
   DummyVOImpl dummy = (DummyVOImpl)getDummyVO1().getViewObject();
   dummy.setQuery("SELECT art_id FROM PROVIDER" + 
   "   WHERE nvl(UPPER(PROVIDER),'0')='" +ParsiUtil.stringToZeroValue(getProvider()).toUpperCase()+"'"+ 
   "   AND nvl(UPPER(FOREIGN_NAME),'0')='" +ParsiUtil.stringToZeroValue(getForeignName()).toUpperCase()+"'"+ 
   "   AND nvl(UPPER(B_D_DATE),'0')='" +ParsiUtil.stringToZeroValue(getBDDate()).toUpperCase()+"' and labcol="+getDBTransaction().getSession().getUserData().get("labcolno"));
   dummy.executeQuery();
   return dummy.hasNext();
   
  }
}
