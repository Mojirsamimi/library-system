package org.parsisys.tehranuniversity.library.model.eo;

import fadak.base.TemplateEntityObject;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;

import org.parsisys.tehranuniversity.library.util.ParsiUtil;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jan 18 17:58:49 GMT+04:00 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LoanImpl extends TemplateEntityObject {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Labcol {
            public Object get(LoanImpl obj) {
                return obj.getLabcol();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        LoanDate {
            public Object get(LoanImpl obj) {
                return obj.getLoanDate();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setLoanDate((Number)value);
            }
        }
        ,
        RetDate {
            public Object get(LoanImpl obj) {
                return obj.getRetDate();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setRetDate((Number)value);
            }
        }
        ,
        RealRetDate {
            public Object get(LoanImpl obj) {
                return obj.getRealRetDate();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setRealRetDate((Number)value);
            }
        }
        ,
        ArtId {
            public Object get(LoanImpl obj) {
                return obj.getArtId();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setArtId((DBSequence)value);
            }
        }
        ,
        MemArtId {
            public Object get(LoanImpl obj) {
                return obj.getMemArtId();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setMemArtId((Number)value);
            }
        }
        ,
        PhbookArtId {
            public Object get(LoanImpl obj) {
                return obj.getPhbookArtId();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setPhbookArtId((Number)value);
            }
        }
        ,
        ReturnUser {
            public Object get(LoanImpl obj) {
                return obj.getReturnUser();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setReturnUser((String)value);
            }
        }
        ,
        LoanUser {
            public Object get(LoanImpl obj) {
                return obj.getLoanUser();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setLoanUser((String)value);
            }
        }
        ,
        LoanType {
            public Object get(LoanImpl obj) {
                return obj.getLoanType();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setLoanType((Number)value);
            }
        }
        ,
        ReturnType {
            public Object get(LoanImpl obj) {
                return obj.getReturnType();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setReturnType((Number)value);
            }
        }
        ,
        NextRetDate {
            public Object get(LoanImpl obj) {
                return obj.getNextRetDate();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setNextRetDate((String)value);
            }
        }
        ,
        PhysicalBook {
            public Object get(LoanImpl obj) {
                return obj.getPhysicalBook();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setPhysicalBook((PhysicalBookImpl)value);
            }
        }
        ,
        Member {
            public Object get(LoanImpl obj) {
                return obj.getMember();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setMember((MemberImpl)value);
            }
        }
        ,
        PhysicalBook1 {
            public Object get(LoanImpl obj) {
                return obj.getPhysicalBook1();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setPhysicalBook1((PhysicalBookImpl)value);
            }
        }
        ,
        InitMember {
            public Object get(LoanImpl obj) {
                return obj.getInitMember();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setInitMember((InitMemberImpl)value);
            }
        }
        ,
        PhysicalBook_Spc {
            public Object get(LoanImpl obj) {
                return obj.getPhysicalBook_Spc();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setPhysicalBook_Spc((PhysicalBookImpl)value);
            }
        }
        ,
        PhysicalBook2 {
            public Object get(LoanImpl obj) {
                return obj.getPhysicalBook2();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setPhysicalBook2((PhysicalBookImpl)value);
            }
        }
        ,
        InitMember1 {
            public Object get(LoanImpl obj) {
                return obj.getInitMember1();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setInitMember1((InitMemberImpl)value);
            }
        }
        ,
        LoanCashPenalty {
            public Object get(LoanImpl obj) {
                return obj.getLoanCashPenalty();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setLoanCashPenalty((LoanCashPenaltyImpl)value);
            }
        }
        ,
        LoanCashPenalty1 {
            public Object get(LoanImpl obj) {
                return obj.getLoanCashPenalty1();
            }

            public void put(LoanImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(LoanImpl object);

        public abstract void put(LoanImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int LOANDATE = AttributesEnum.LoanDate.index();
    public static final int RETDATE = AttributesEnum.RetDate.index();
    public static final int REALRETDATE = AttributesEnum.RealRetDate.index();
    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int MEMARTID = AttributesEnum.MemArtId.index();
    public static final int PHBOOKARTID = AttributesEnum.PhbookArtId.index();
    public static final int RETURNUSER = AttributesEnum.ReturnUser.index();
    public static final int LOANUSER = AttributesEnum.LoanUser.index();
    public static final int LOANTYPE = AttributesEnum.LoanType.index();
    public static final int RETURNTYPE = AttributesEnum.ReturnType.index();
    public static final int NEXTRETDATE = AttributesEnum.NextRetDate.index();
    public static final int PHYSICALBOOK = AttributesEnum.PhysicalBook.index();
    public static final int MEMBER = AttributesEnum.Member.index();
    public static final int PHYSICALBOOK1 = AttributesEnum.PhysicalBook1.index();
    public static final int INITMEMBER = AttributesEnum.InitMember.index();
    public static final int PHYSICALBOOK_SPC = AttributesEnum.PhysicalBook_Spc.index();
    public static final int PHYSICALBOOK2 = AttributesEnum.PhysicalBook2.index();
    public static final int INITMEMBER1 = AttributesEnum.InitMember1.index();
    public static final int LOANCASHPENALTY = AttributesEnum.LoanCashPenalty.index();
    public static final int LOANCASHPENALTY1 = AttributesEnum.LoanCashPenalty1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LoanImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("org.parsisys.tehranuniversity.library.model.eo.Loan");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Labcol, using the alias name Labcol.
     * @return the Labcol
     */
    public Number getLabcol() {
        return (Number)getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Labcol.
     * @param value value to set the Labcol
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for LoanDate, using the alias name LoanDate.
     * @return the LoanDate
     */
    public Number getLoanDate() {
        return (Number)getAttributeInternal(LOANDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanDate.
     * @param value value to set the LoanDate
     */
    public void setLoanDate(Number value) {
        setAttributeInternal(LOANDATE, value);
    }

    /**
     * Gets the attribute value for RetDate, using the alias name RetDate.
     * @return the RetDate
     */
    public Number getRetDate() {
        return (Number)getAttributeInternal(RETDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RetDate.
     * @param value value to set the RetDate
     */
    public void setRetDate(Number value) {
        setAttributeInternal(RETDATE, value);
    }

    /**
     * Gets the attribute value for RealRetDate, using the alias name RealRetDate.
     * @return the RealRetDate
     */
    public Number getRealRetDate() {
        return (Number)getAttributeInternal(REALRETDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RealRetDate.
     * @param value value to set the RealRetDate
     */
    public void setRealRetDate(Number value) {
        setAttributeInternal(REALRETDATE, value);
    }

    /**
     * Gets the attribute value for ArtId, using the alias name ArtId.
     * @return the ArtId
     */
    public DBSequence getArtId() {
        return (DBSequence)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArtId.
     * @param value value to set the ArtId
     */
    public void setArtId(DBSequence value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for MemArtId, using the alias name MemArtId.
     * @return the MemArtId
     */
    public Number getMemArtId() {
        return (Number)getAttributeInternal(MEMARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MemArtId.
     * @param value value to set the MemArtId
     */
    public void setMemArtId(Number value) {
        setAttributeInternal(MEMARTID, value);
    }

    /**
     * Gets the attribute value for PhbookArtId, using the alias name PhbookArtId.
     * @return the PhbookArtId
     */
    public Number getPhbookArtId() {
        return (Number)getAttributeInternal(PHBOOKARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PhbookArtId.
     * @param value value to set the PhbookArtId
     */
    public void setPhbookArtId(Number value) {
        setAttributeInternal(PHBOOKARTID, value);
    }

    /**
     * Gets the attribute value for ReturnUser, using the alias name ReturnUser.
     * @return the ReturnUser
     */
    public String getReturnUser() {
        return (String)getAttributeInternal(RETURNUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReturnUser.
     * @param value value to set the ReturnUser
     */
    public void setReturnUser(String value) {
        setAttributeInternal(RETURNUSER, value);
    }

    /**
     * Gets the attribute value for LoanUser, using the alias name LoanUser.
     * @return the LoanUser
     */
    public String getLoanUser() {
        return (String)getAttributeInternal(LOANUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanUser.
     * @param value value to set the LoanUser
     */
    public void setLoanUser(String value) {
        setAttributeInternal(LOANUSER, value);
    }

    /**
     * Gets the attribute value for LoanType, using the alias name LoanType.
     * @return the LoanType
     */
    public Number getLoanType() {
        return (Number)getAttributeInternal(LOANTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanType.
     * @param value value to set the LoanType
     */
    public void setLoanType(Number value) {
        setAttributeInternal(LOANTYPE, value);
    }

    /**
     * Gets the attribute value for ReturnType, using the alias name ReturnType.
     * @return the ReturnType
     */
    public Number getReturnType() {
        return (Number)getAttributeInternal(RETURNTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReturnType.
     * @param value value to set the ReturnType
     */
    public void setReturnType(Number value) {
        setAttributeInternal(RETURNTYPE, value);
    }


    /**
     * Gets the attribute value for NextRetDate, using the alias name NextRetDate.
     * @return the NextRetDate
     */
    public String getNextRetDate() {
        String nextRetDate= (String)getAttributeInternal(NEXTRETDATE);
        if(nextRetDate==null){
         String PersBarcode= ((InitMemberImpl)getInitMember()).getPerson().getBarcode(); 
          //TODO: call DB function parsi_pkg_library.mem_loan_durity(:person.BARCODE,:PERSON.LIB_ART_ID);
          //and use the return value as parameter of addDayToDate
         //Util.addDayToPersianDate(date, day);
        }
      return nextRetDate;
        
    }

    /**
     * Sets <code>value</code> as the attribute value for NextRetDate.
     * @param value value to set the NextRetDate
     */
    public void setNextRetDate(String value) {
        setAttributeInternal(NEXTRETDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity fadak.base.TemplateEntityObject.
     */
    public PhysicalBookImpl getPhysicalBook() {
        return (PhysicalBookImpl)getAttributeInternal(PHYSICALBOOK);
    }

    /**
     * Sets <code>value</code> as the associated entity fadak.base.TemplateEntityObject.
     */
    public void setPhysicalBook(PhysicalBookImpl value) {
        setAttributeInternal(PHYSICALBOOK, value);
    }

    /**
     * @return the associated entity fadak.base.TemplateEntityObject.
     */
    public MemberImpl getMember() {
        return (MemberImpl)getAttributeInternal(MEMBER);
    }

    /**
     * Sets <code>value</code> as the associated entity fadak.base.TemplateEntityObject.
     */
    public void setMember(MemberImpl value) {
        setAttributeInternal(MEMBER, value);
    }

    /**
     * @return the associated entity fadak.base.TemplateEntityObject.
     */
    public PhysicalBookImpl getPhysicalBook1() {
        return (PhysicalBookImpl)getAttributeInternal(PHYSICALBOOK1);
    }

    /**
     * Sets <code>value</code> as the associated entity fadak.base.TemplateEntityObject.
     */
    public void setPhysicalBook1(PhysicalBookImpl value) {
        setAttributeInternal(PHYSICALBOOK1, value);
    }

    /**
     * @return the associated entity fadak.base.TemplateEntityObject.
     */
    public InitMemberImpl getInitMember() {
        return (InitMemberImpl)getAttributeInternal(INITMEMBER);
    }

    /**
     * Sets <code>value</code> as the associated entity fadak.base.TemplateEntityObject.
     */
    public void setInitMember(InitMemberImpl value) {
        setAttributeInternal(INITMEMBER, value);
    }


    /**
     * @return the associated entity PhysicalBookImpl.
     */
    public PhysicalBookImpl getPhysicalBook_Spc() {
        return (PhysicalBookImpl)getAttributeInternal(PHYSICALBOOK_SPC);
    }

    /**
     * Sets <code>value</code> as the associated entity PhysicalBookImpl.
     */
    public void setPhysicalBook_Spc(PhysicalBookImpl value) {
        setAttributeInternal(PHYSICALBOOK_SPC, value);
    }

    /**
     * @return the associated entity PhysicalBookImpl.
     */
    public PhysicalBookImpl getPhysicalBook2() {
        return (PhysicalBookImpl)getAttributeInternal(PHYSICALBOOK2);
    }

    /**
     * Sets <code>value</code> as the associated entity PhysicalBookImpl.
     */
    public void setPhysicalBook2(PhysicalBookImpl value) {
        setAttributeInternal(PHYSICALBOOK2, value);
    }


    /**
     * @return the associated entity InitMemberImpl.
     */
    public InitMemberImpl getInitMember1() {
        return (InitMemberImpl)getAttributeInternal(INITMEMBER1);
    }

    /**
     * Sets <code>value</code> as the associated entity InitMemberImpl.
     */
    public void setInitMember1(InitMemberImpl value) {
        setAttributeInternal(INITMEMBER1, value);
    }


    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public LoanCashPenaltyImpl getLoanCashPenalty() {
        return (LoanCashPenaltyImpl)getAttributeInternal(LOANCASHPENALTY);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setLoanCashPenalty(LoanCashPenaltyImpl value) {
        setAttributeInternal(LOANCASHPENALTY, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getLoanCashPenalty1() {
        return (RowIterator)getAttributeInternal(LOANCASHPENALTY1);
    }


    /**
     * @param labcol key constituent
     * @param artId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number labcol, DBSequence artId) {
        return new Key(new Object[]{labcol, artId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        
     
        super.doDML(operation, e);
    }
}
