package org.parsisys.tehranuniversity.library.model.eo;

import fadak.base.TemplateEntityObject;

import java.math.BigDecimal;

import java.sql.SQLException;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;

import oracle.jheadstart.util.DatabaseProcedure;

import org.parsisys.tehranuniversity.library.model.vo.PersonVORowImpl;
import org.parsisys.tehranuniversity.library.util.ParsiUtil;

import testAM.TestAppModImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jan 18 18:02:54 GMT+04:00 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InitMemberImpl extends TemplateEntityObject {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ArtId {
            public Object get(InitMemberImpl obj) {
                return obj.getArtId();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setArtId((Number)value);
            }
        }
        ,
        LibArtId {
            public Object get(InitMemberImpl obj) {
                return obj.getLibArtId();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setLibArtId((Number)value);
            }
        }
        ,
        PersArtId {
            public Object get(InitMemberImpl obj) {
                return obj.getPersArtId();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setPersArtId((Number)value);
            }
        }
        ,
        LoanedCount {
            public Object get(InitMemberImpl obj) {
                return obj.getLoanedCount();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setLoanedCount((Number)value);
            }
        }
        ,
        ReservedCount {
            public Object get(InitMemberImpl obj) {
                return obj.getReservedCount();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setReservedCount((Number)value);
            }
        }
        ,
        RecalledCount {
            public Object get(InitMemberImpl obj) {
                return obj.getRecalledCount();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setRecalledCount((Number)value);
            }
        }
        ,
        MemshipCategory {
            public Object get(InitMemberImpl obj) {
                return obj.getMemshipCategory();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setMemshipCategory((Number)value);
            }
        }
        ,
        MemshipStatus {
            public Object get(InitMemberImpl obj) {
                return obj.getMemshipStatus();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setMemshipStatus((Number)value);
            }
        }
        ,
        DebitSum {
            public Object get(InitMemberImpl obj) {
                return obj.getDebitSum();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setDebitSum((Number)value);
            }
        }
        ,
        DebitNonCash {
            public Object get(InitMemberImpl obj) {
                return obj.getDebitNonCash();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setDebitNonCash((Number)value);
            }
        }
        ,
        StatusEndDate {
            public Object get(InitMemberImpl obj) {
                return obj.getStatusEndDate();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setStatusEndDate((Number)value);
            }
        }
        ,
        LoanedInPlaceCount {
            public Object get(InitMemberImpl obj) {
                return obj.getLoanedInPlaceCount();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setLoanedInPlaceCount((Number)value);
            }
        }
        ,
        IntroductionLetterCount {
            public Object get(InitMemberImpl obj) {
                return obj.getIntroductionLetterCount();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setIntroductionLetterCount((Number)value);
            }
        }
        ,
        StartDate {
            public Object get(InitMemberImpl obj) {
                return obj.getStartDate();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setStartDate((String)value);
            }
        }
        ,
        EndDate {
            public Object get(InitMemberImpl obj) {
                return obj.getEndDate();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setEndDate((String)value);
            }
        }
        ,
        NewEndDate {
            public Object get(InitMemberImpl obj) {
                return obj.getNewEndDate();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setNewEndDate((String)value);
            }
        }
        ,
        Person {
            public Object get(InitMemberImpl obj) {
                return obj.getPerson();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setPerson((PersonImpl)value);
            }
        }
        ,
        MemberExtentionHistory {
            public Object get(InitMemberImpl obj) {
                return obj.getMemberExtentionHistory();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Member {
            public Object get(InitMemberImpl obj) {
                return obj.getMember();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setMember((MemberImpl)value);
            }
        }
        ,
        IntroductionLetter {
            public Object get(InitMemberImpl obj) {
                return obj.getIntroductionLetter();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Person1 {
            public Object get(InitMemberImpl obj) {
                return obj.getPerson1();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setPerson1((PersonImpl)value);
            }
        }
        ,
        MemberStatusHistory {
            public Object get(InitMemberImpl obj) {
                return obj.getMemberStatusHistory();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MemberStatusHistory1 {
            public Object get(InitMemberImpl obj) {
                return obj.getMemberStatusHistory1();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Loan1 {
            public Object get(InitMemberImpl obj) {
                return obj.getLoan1();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Person2 {
            public Object get(InitMemberImpl obj) {
                return obj.getPerson2();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setPerson2((PersonImpl)value);
            }
        }
        ,
        PublicCashPenalty {
            public Object get(InitMemberImpl obj) {
                return obj.getPublicCashPenalty();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PublicNonCashPenalty {
            public Object get(InitMemberImpl obj) {
                return obj.getPublicNonCashPenalty();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PenaltyPayment {
            public Object get(InitMemberImpl obj) {
                return obj.getPenaltyPayment();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Person3 {
            public Object get(InitMemberImpl obj) {
                return obj.getPerson3();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setPerson3((PersonImpl)value);
            }
        }
        ,
        Reserve {
            public Object get(InitMemberImpl obj) {
                return obj.getReserve();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Loan {
            public Object get(InitMemberImpl obj) {
                return obj.getLoan();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Cashier {
            public Object get(InitMemberImpl obj) {
                return obj.getCashier();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setCashier((CashierImpl)value);
            }
        }
        ,
        Library {
            public Object get(InitMemberImpl obj) {
                return obj.getLibrary();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setLibrary((EntityImpl)value);
            }
        }
        ,
        ExtraChargeEo {
            public Object get(InitMemberImpl obj) {
                return obj.getExtraChargeEo();
            }

            public void put(InitMemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(InitMemberImpl object);

        public abstract void put(InitMemberImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int LIBARTID = AttributesEnum.LibArtId.index();
    public static final int PERSARTID = AttributesEnum.PersArtId.index();
    public static final int LOANEDCOUNT = AttributesEnum.LoanedCount.index();
    public static final int RESERVEDCOUNT = AttributesEnum.ReservedCount.index();
    public static final int RECALLEDCOUNT = AttributesEnum.RecalledCount.index();
    public static final int MEMSHIPCATEGORY = AttributesEnum.MemshipCategory.index();
    public static final int MEMSHIPSTATUS = AttributesEnum.MemshipStatus.index();
    public static final int DEBITSUM = AttributesEnum.DebitSum.index();
    public static final int DEBITNONCASH = AttributesEnum.DebitNonCash.index();
    public static final int STATUSENDDATE = AttributesEnum.StatusEndDate.index();
    public static final int LOANEDINPLACECOUNT = AttributesEnum.LoanedInPlaceCount.index();
    public static final int INTRODUCTIONLETTERCOUNT = AttributesEnum.IntroductionLetterCount.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int NEWENDDATE = AttributesEnum.NewEndDate.index();
    public static final int PERSON = AttributesEnum.Person.index();
    public static final int MEMBEREXTENTIONHISTORY = AttributesEnum.MemberExtentionHistory.index();
    public static final int MEMBER = AttributesEnum.Member.index();
    public static final int INTRODUCTIONLETTER = AttributesEnum.IntroductionLetter.index();
    public static final int PERSON1 = AttributesEnum.Person1.index();
    public static final int MEMBERSTATUSHISTORY = AttributesEnum.MemberStatusHistory.index();
    public static final int MEMBERSTATUSHISTORY1 = AttributesEnum.MemberStatusHistory1.index();
    public static final int LOAN1 = AttributesEnum.Loan1.index();
    public static final int PERSON2 = AttributesEnum.Person2.index();
    public static final int PUBLICCASHPENALTY = AttributesEnum.PublicCashPenalty.index();
    public static final int PUBLICNONCASHPENALTY = AttributesEnum.PublicNonCashPenalty.index();
    public static final int PENALTYPAYMENT = AttributesEnum.PenaltyPayment.index();
    public static final int PERSON3 = AttributesEnum.Person3.index();
    public static final int RESERVE = AttributesEnum.Reserve.index();
    public static final int LOAN = AttributesEnum.Loan.index();
    public static final int CASHIER = AttributesEnum.Cashier.index();
    public static final int LIBRARY = AttributesEnum.Library.index();
    public static final int EXTRACHARGEEO = AttributesEnum.ExtraChargeEo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InitMemberImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("org.parsisys.tehranuniversity.library.model.eo.InitMember");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for ArtId, using the alias name ArtId.
     * @return the ArtId
     */
    public Number getArtId() {
        return (Number)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArtId.
     * @param value value to set the ArtId
     */
    public void setArtId(Number value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for LibArtId, using the alias name LibArtId.
     * @return the LibArtId
     */
    public Number getLibArtId() {
        return (Number)getAttributeInternal(LIBARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LibArtId.
     * @param value value to set the LibArtId
     */
    public void setLibArtId(Number value) {
        setAttributeInternal(LIBARTID, value);
    }

    /**
     * Gets the attribute value for PersArtId, using the alias name PersArtId.
     * @return the PersArtId
     */
    public Number getPersArtId() {
        return (Number)getAttributeInternal(PERSARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersArtId.
     * @param value value to set the PersArtId
     */
    public void setPersArtId(Number value) {
        setAttributeInternal(PERSARTID, value);
    }

    /**
     * Gets the attribute value for LoanedCount, using the alias name LoanedCount.
     * @return the LoanedCount
     */
    public Number getLoanedCount() {
        return (Number)getAttributeInternal(LOANEDCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanedCount.
     * @param value value to set the LoanedCount
     */
    public void setLoanedCount(Number value) {
        setAttributeInternal(LOANEDCOUNT, value);
    }

    /**
     * Gets the attribute value for ReservedCount, using the alias name ReservedCount.
     * @return the ReservedCount
     */
    public Number getReservedCount() {
        return (Number)getAttributeInternal(RESERVEDCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReservedCount.
     * @param value value to set the ReservedCount
     */
    public void setReservedCount(Number value) {
        setAttributeInternal(RESERVEDCOUNT, value);
    }

    /**
     * Gets the attribute value for RecalledCount, using the alias name RecalledCount.
     * @return the RecalledCount
     */
    public Number getRecalledCount() {
        return (Number)getAttributeInternal(RECALLEDCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecalledCount.
     * @param value value to set the RecalledCount
     */
    public void setRecalledCount(Number value) {
        setAttributeInternal(RECALLEDCOUNT, value);
    }

    /**
     * Gets the attribute value for MemshipCategory, using the alias name MemshipCategory.
     * @return the MemshipCategory
     */
    public Number getMemshipCategory() {
        return (Number)getAttributeInternal(MEMSHIPCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MemshipCategory.
     * @param value value to set the MemshipCategory
     */
    public void setMemshipCategory(Number value) {
        setAttributeInternal(MEMSHIPCATEGORY, value);
    }

    /**
     * Gets the attribute value for MemshipStatus, using the alias name MemshipStatus.
     * @return the MemshipStatus
     */
    public Number getMemshipStatus() {
        return (Number)getAttributeInternal(MEMSHIPSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for MemshipStatus.
     * @param value value to set the MemshipStatus
     */
    public void setMemshipStatus(Number value) {
        setAttributeInternal(MEMSHIPSTATUS, value);
    }

    /**
     * Gets the attribute value for DebitSum, using the alias name DebitSum.
     * @return the DebitSum
     */
    public Number getDebitSum() {
        Number debitSum= (Number)getAttributeInternal(DEBITSUM);
        
        return ParsiUtil.NVL(debitSum);
    }

    /**
     * Sets <code>value</code> as the attribute value for DebitSum.
     * @param value value to set the DebitSum
     */
    public void setDebitSum(Number value) {
        setAttributeInternal(DEBITSUM, value);
    }

    /**
     * Gets the attribute value for DebitNonCash, using the alias name DebitNonCash.
     * @return the DebitNonCash
     */
    public Number getDebitNonCash() {
        return (Number)getAttributeInternal(DEBITNONCASH);
    }

    /**
     * Sets <code>value</code> as the attribute value for DebitNonCash.
     * @param value value to set the DebitNonCash
     */
    public void setDebitNonCash(Number value) {
        setAttributeInternal(DEBITNONCASH, value);
    }

    /**
     * Gets the attribute value for StatusEndDate, using the alias name StatusEndDate.
     * @return the StatusEndDate
     */
    public Number getStatusEndDate() {
        return (Number)getAttributeInternal(STATUSENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StatusEndDate.
     * @param value value to set the StatusEndDate
     */
    public void setStatusEndDate(Number value) {
        setAttributeInternal(STATUSENDDATE, value);
    }

    /**
     * Gets the attribute value for LoanedInPlaceCount, using the alias name LoanedInPlaceCount.
     * @return the LoanedInPlaceCount
     */
    public Number getLoanedInPlaceCount() {
        return (Number)getAttributeInternal(LOANEDINPLACECOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanedInPlaceCount.
     * @param value value to set the LoanedInPlaceCount
     */
    public void setLoanedInPlaceCount(Number value) {
        setAttributeInternal(LOANEDINPLACECOUNT, value);
    }

    /**
     * Gets the attribute value for IntroductionLetterCount, using the alias name IntroductionLetterCount.
     * @return the IntroductionLetterCount
     */
    public Number getIntroductionLetterCount() {
        return (Number)getAttributeInternal(INTRODUCTIONLETTERCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for IntroductionLetterCount.
     * @param value value to set the IntroductionLetterCount
     */
    public void setIntroductionLetterCount(Number value) {
        setAttributeInternal(INTRODUCTIONLETTERCOUNT, value);
    }


    /**
     * Gets the attribute value for StartDate, using the alias name StartDate.
     * @return the StartDate
     */
    public String getStartDate() {
      String startDate = (String)getAttributeInternal(STARTDATE);

        byte entityState = getEntityState();
        if (entityState!=STATUS_NEW ){
            
                                   
                  //PersonVORowImpl person = (PersonVORowImpl)getPersonVO();
                  PersonImpl person = getPerson();
                  
                  String persBarcode = person.getBarcode();
                  
            DBTransaction dbTransaction = getDBTransaction();

            DatabaseProcedure mem_start_date =
                             DatabaseProcedure.define("FUNCTION parsi_pkg_library.MEM_START_DATE(P_BARCODE VARCHAR2,CUR_LIB_ART_ID NUMBER,labcol1 number) RETURN NUMBER;");
                      
                       BigDecimal result = (BigDecimal) mem_start_date.call(dbTransaction, persBarcode,dbTransaction.getSession().getUserData().get("libartid"),dbTransaction.getSession().getUserData().get("labcolno")).getReturnValue();
                    if(result!=null)
                    startDate=result.toString();
                
                  
              }
        
      return startDate;
       
    
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDate.
     * @param value value to set the StartDate
     */
    public void setStartDate(String value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for EndDate, using the alias name EndDate.
     * @return the EndDate
     */
    public String getEndDate() {
       
      String endDate = (String)getAttributeInternal(ENDDATE);
    
      byte entityState = getEntityState();
      if (entityState!=STATUS_NEW ){
              
                  
                  //PersonVORowImpl person = (PersonVORowImpl)getPersonVO();
                  PersonImpl person = getPerson();

                  String persBarcode = person.getBarcode();
                 // Number currentLibId=getLibArtId();
                  Number duration = null;
            DBTransaction dbTransaction = getDBTransaction();

            DatabaseProcedure mem_post_duration =
                             DatabaseProcedure.define("  FUNCTION parsi_pkg_library.MEM_POST_DURATION(P_BARCODE VARCHAR2,CUR_LIB_ART_ID NUMBER,labcol1 number)RETURN NUMBER;");
                      
                       BigDecimal result = (BigDecimal) mem_post_duration .call(dbTransaction, persBarcode,dbTransaction.getSession().getUserData().get("libartid"),dbTransaction.getSession().getUserData().get("labcolno")).getReturnValue();
                    if(result!=null)
                    duration=new Number (result.intValue());
                  
                 if (duration == null) {
                      
                    DatabaseProcedure mem_exp_date=
                                 DatabaseProcedure.define("FUNCTION parsi_pkg_library.MEM_EXP_DATE(P_BARCODE VARCHAR2,CUR_LIB_ART_ID NUMBER,labcol1 number)RETURN NUMBER;");
                          
                           BigDecimal result1 = (BigDecimal) mem_exp_date.call(dbTransaction, persBarcode,dbTransaction.getSession().getUserData().get("libartid"),dbTransaction.getSession().getUserData().get("labcolno")).getReturnValue();
                       if(result1!=null)
                        endDate=result1.toString();
                          
                  } else {
                                              
                          endDate = ParsiUtil.addDayToPersianDate(ParsiUtil.stringDateToNumber(getStartDate()), duration.intValue() *
                                                           31);
                     }
                  
                  
          

     }
      return endDate;

       
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDate.
     * @param value value to set the EndDate
     */
    public void setEndDate(String value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for NewEndDate, using the alias name NewEndDate.
     * @return the NewEndDate
     */
    public String getNewEndDate() {
        return (String)getAttributeInternal(NEWENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NewEndDate.
     * @param value value to set the NewEndDate
     */
    public void setNewEndDate(String value) {
        setAttributeInternal(NEWENDDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity PersonImpl.
     */
    public PersonImpl getPerson() {
        return (PersonImpl)getAttributeInternal(PERSON);
    }

    /**
     * Sets <code>value</code> as the associated entity PersonImpl.
     */
    public void setPerson(PersonImpl value) {
        setAttributeInternal(PERSON, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMemberExtentionHistory() {
        return (RowIterator)getAttributeInternal(MEMBEREXTENTIONHISTORY);
    }


    /**
     * @return the associated entity fadak.base.TemplateEntityObject.
     */
    public MemberImpl getMember() {
        return (MemberImpl)getAttributeInternal(MEMBER);
    }

    /**
     * Sets <code>value</code> as the associated entity fadak.base.TemplateEntityObject.
     */
    public void setMember(MemberImpl value) {
        setAttributeInternal(MEMBER, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getIntroductionLetter() {
        return (RowIterator)getAttributeInternal(INTRODUCTIONLETTER);
    }


    /**
     * @return the associated entity PersonImpl.
     */
    public PersonImpl getPerson1() {
        return (PersonImpl)getAttributeInternal(PERSON1);
    }

    /**
     * Sets <code>value</code> as the associated entity PersonImpl.
     */
    public void setPerson1(PersonImpl value) {
        setAttributeInternal(PERSON1, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMemberStatusHistory() {
        return (RowIterator)getAttributeInternal(MEMBERSTATUSHISTORY);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMemberStatusHistory1() {
        return (RowIterator)getAttributeInternal(MEMBERSTATUSHISTORY1);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getLoan1() {
        return (RowIterator)getAttributeInternal(LOAN1);
    }


    /**
     * @return the associated entity PersonImpl.
     */
    public PersonImpl getPerson2() {
        return (PersonImpl)getAttributeInternal(PERSON2);
    }

    /**
     * Sets <code>value</code> as the associated entity PersonImpl.
     */
    public void setPerson2(PersonImpl value) {
        setAttributeInternal(PERSON2, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPublicCashPenalty() {
        return (RowIterator)getAttributeInternal(PUBLICCASHPENALTY);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPublicNonCashPenalty() {
        return (RowIterator)getAttributeInternal(PUBLICNONCASHPENALTY);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPenaltyPayment() {
        return (RowIterator)getAttributeInternal(PENALTYPAYMENT);
    }


    /**
     * @return the associated entity PersonImpl.
     */
    public PersonImpl getPerson3() {
        return (PersonImpl)getAttributeInternal(PERSON3);
    }

    /**
     * Sets <code>value</code> as the associated entity PersonImpl.
     */
    public void setPerson3(PersonImpl value) {
        setAttributeInternal(PERSON3, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getReserve() {
        return (RowIterator)getAttributeInternal(RESERVE);
    }


    /**
     * @return the associated entity LoanImpl.
     */
    public RowIterator getLoan() {
        return (RowIterator)getAttributeInternal(LOAN);
    }


    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public CashierImpl getCashier() {
        return (CashierImpl)getAttributeInternal(CASHIER);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setCashier(CashierImpl value) {
        setAttributeInternal(CASHIER, value);
    }


    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getLibrary() {
        return (EntityImpl)getAttributeInternal(LIBRARY);
    }

    /**

     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setLibrary(EntityImpl value) {
        setAttributeInternal(LIBRARY, value);
    }


    /**

     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getExtraChargeEo() {
        return (RowIterator)getAttributeInternal(EXTRACHARGEEO);
    }


    /**
     * @param artId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number artId) {
        return new Key(new Object[]{artId});
    }

    /**
     * Sets <code>value</code> as the associated entity LoanImpl.
     */
    public void setLoan(LoanImpl value) {
        setAttributeInternal(LOAN, value);
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_INSERT) {
          SequenceImpl si =
              new SequenceImpl("SEQ_INIT_MEMBER_ART_ID", getDBTransaction());
          setArtId( si.getSequenceNumber());
        }
        super.doDML(operation, e);
    }
}
