package org.parsisys.tehranuniversity.library.model.eo;


import fadak.base.TemplateEntityObject;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.StructureDef;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;

import oracle.jbo.server.ViewObjectImpl;

import org.parsisys.tehranuniversity.library.util.ParsiUtil;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Dec 17 16:28:13 GMT+04:00 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VirtualBookImpl extends TemplateEntityObject {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ArtId {
            public Object get(VirtualBookImpl obj) {
                return obj.getArtId();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setArtId((Number)value);
            }
        }
        ,
        Labcol {
            public Object get(VirtualBookImpl obj) {
                return obj.getLabcol();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        CallNo {
            public Object get(VirtualBookImpl obj) {
                return obj.getCallNo();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setCallNo((String)value);
            }
        }
        ,
        Title {
            public Object get(VirtualBookImpl obj) {
                return obj.getTitle();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setTitle((String)value);
            }
        }
        ,
        RepAuthor {
            public Object get(VirtualBookImpl obj) {
                return obj.getRepAuthor();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setRepAuthor((String)value);
            }
        }
        ,
        Edition {
            public Object get(VirtualBookImpl obj) {
                return obj.getEdition();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setEdition((String)value);
            }
        }
        ,
        PhysicalDesc {
            public Object get(VirtualBookImpl obj) {
                return obj.getPhysicalDesc();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setPhysicalDesc((String)value);
            }
        }
        ,
        Contents {
            public Object get(VirtualBookImpl obj) {
                return obj.getContents();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setContents((String)value);
            }
        }
        ,
        Reference {
            public Object get(VirtualBookImpl obj) {
                return obj.getReference();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setReference((Number)value);
            }
        }
        ,
        VolumeCount {
            public Object get(VirtualBookImpl obj) {
                return obj.getVolumeCount();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setVolumeCount((Number)value);
            }
        }
        ,
        PubDate {
            public Object get(VirtualBookImpl obj) {
                return obj.getPubDate();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setPubDate((String)value);
            }
        }
        ,
        InsertDate {
            public Object get(VirtualBookImpl obj) {
                return obj.getInsertDate();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setInsertDate((Number)value);
            }
        }
        ,
        BiblioNote {
            public Object get(VirtualBookImpl obj) {
                return obj.getBiblioNote();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setBiblioNote((String)value);
            }
        }
        ,
        IndexNote {
            public Object get(VirtualBookImpl obj) {
                return obj.getIndexNote();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setIndexNote((String)value);
            }
        }
        ,
        OrigTitle {
            public Object get(VirtualBookImpl obj) {
                return obj.getOrigTitle();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setOrigTitle((String)value);
            }
        }
        ,
        Cutter {
            public Object get(VirtualBookImpl obj) {
                return obj.getCutter();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setCutter((Number)value);
            }
        }
        ,
        TitlePrintable {
            public Object get(VirtualBookImpl obj) {
                return obj.getTitlePrintable();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setTitlePrintable((Number)value);
            }
        }
        ,
        ReadingOrder {
            public Object get(VirtualBookImpl obj) {
                return obj.getReadingOrder();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setReadingOrder((Number)value);
            }
        }
        ,
        ActiveStatus {
            public Object get(VirtualBookImpl obj) {
                return obj.getActiveStatus();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setActiveStatus((Number)value);
            }
        }
        ,
        ActiveChangeDate {
            public Object get(VirtualBookImpl obj) {
                return obj.getActiveChangeDate();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setActiveChangeDate((Number)value);
            }
        }
        ,
        ActiveChangeUser {
            public Object get(VirtualBookImpl obj) {
                return obj.getActiveChangeUser();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setActiveChangeUser((String)value);
            }
        }
        ,
        UniformTitle {
            public Object get(VirtualBookImpl obj) {
                return obj.getUniformTitle();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setUniformTitle((Number)value);
            }
        }
        ,
        UserName {
            public Object get(VirtualBookImpl obj) {
                return obj.getUserName();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setUserName((String)value);
            }
        }
        ,
        UniformTitlePrintable {
            public Object get(VirtualBookImpl obj) {
                return obj.getUniformTitlePrintable();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setUniformTitlePrintable((Number)value);
            }
        }
        ,
        Abstract1 {
            public Object get(VirtualBookImpl obj) {
                return obj.getAbstract1();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAbstract1((String)value);
            }
        }
        ,
        CallNoType {
            public Object get(VirtualBookImpl obj) {
                return obj.getCallNoType();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setCallNoType((Number)value);
            }
        }
        ,
        CatalogSource {
            public Object get(VirtualBookImpl obj) {
                return obj.getCatalogSource();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setCatalogSource((String)value);
            }
        }
        ,
        GeoAreaCode {
            public Object get(VirtualBookImpl obj) {
                return obj.getGeoAreaCode();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setGeoAreaCode((String)value);
            }
        }
        ,
        NbibNo {
            public Object get(VirtualBookImpl obj) {
                return obj.getNbibNo();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setNbibNo((String)value);
            }
        }
        ,
        Manufacturer {
            public Object get(VirtualBookImpl obj) {
                return obj.getManufacturer();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setManufacturer((String)value);
            }
        }
        ,
        IsoLog {
            public Object get(VirtualBookImpl obj) {
                return obj.getIsoLog();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setIsoLog((String)value);
            }
        }
        ,
        ModifiedDate {
            public Object get(VirtualBookImpl obj) {
                return obj.getModifiedDate();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MainPrv {
            public Object get(VirtualBookImpl obj) {
                return obj.getMainPrv();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setMainPrv((Number)value);
            }
        }
        ,
        PhysicalBook {
            public Object get(VirtualBookImpl obj) {
                return obj.getPhysicalBook();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VbookSubject {
            public Object get(VirtualBookImpl obj) {
                return obj.getVbookSubject();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OtherTitle {
            public Object get(VirtualBookImpl obj) {
                return obj.getOtherTitle();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VbookPublisher {
            public Object get(VirtualBookImpl obj) {
                return obj.getVbookPublisher();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Series {
            public Object get(VirtualBookImpl obj) {
                return obj.getSeries();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VbookUniformTitle {
            public Object get(VirtualBookImpl obj) {
                return obj.getVbookUniformTitle();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        BookIsbn {
            public Object get(VirtualBookImpl obj) {
                return obj.getBookIsbn();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Note {
            public Object get(VirtualBookImpl obj) {
                return obj.getNote();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VbookLanguage {
            public Object get(VirtualBookImpl obj) {
                return obj.getVbookLanguage();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VbookProvider {
            public Object get(VirtualBookImpl obj) {
                return obj.getVbookProvider();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Card {
            public Object get(VirtualBookImpl obj) {
                return obj.getCard();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Reserve {
            public Object get(VirtualBookImpl obj) {
                return obj.getReserve();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VbookProvider1 {
            public Object get(VirtualBookImpl obj) {
                return obj.getVbookProvider1();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setVbookProvider1((VbookProviderImpl)value);
            }
        }
        ,
        PhysicalBook1 {
            public Object get(VirtualBookImpl obj) {
                return obj.getPhysicalBook1();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UniformTitle2 {
            public Object get(VirtualBookImpl obj) {
                return obj.getUniformTitle2();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setUniformTitle2((UniformTitleImpl)value);
            }
        }
        ,
        UniformTitle1 {
            public Object get(VirtualBookImpl obj) {
                return obj.getUniformTitle1();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setUniformTitle1((UniformTitleImpl)value);
            }
        }
        ,
        OrigineTitle {
            public Object get(VirtualBookImpl obj) {
                return obj.getOrigineTitle();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setOrigineTitle((EntityImpl)value);
            }
        }
        ,
        Provider {
            public Object get(VirtualBookImpl obj) {
                return obj.getProvider();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Publisher {
            public Object get(VirtualBookImpl obj) {
                return obj.getPublisher();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Subject {
            public Object get(VirtualBookImpl obj) {
                return obj.getSubject();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MessageVO1 {
            public Object get(VirtualBookImpl obj) {
                return obj.getMessageVO1();
            }

            public void put(VirtualBookImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(VirtualBookImpl object);

        public abstract void put(VirtualBookImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


  //  public static final int UNIFORMTITLE11 = AttributesEnum.UniformTitle11.index();


    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int CALLNO = AttributesEnum.CallNo.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int REPAUTHOR = AttributesEnum.RepAuthor.index();
    public static final int EDITION = AttributesEnum.Edition.index();
    public static final int PHYSICALDESC = AttributesEnum.PhysicalDesc.index();
    public static final int CONTENTS = AttributesEnum.Contents.index();
    public static final int REFERENCE = AttributesEnum.Reference.index();
    public static final int VOLUMECOUNT = AttributesEnum.VolumeCount.index();
    public static final int PUBDATE = AttributesEnum.PubDate.index();
    public static final int INSERTDATE = AttributesEnum.InsertDate.index();
    public static final int BIBLIONOTE = AttributesEnum.BiblioNote.index();
    public static final int INDEXNOTE = AttributesEnum.IndexNote.index();
    public static final int ORIGTITLE = AttributesEnum.OrigTitle.index();
    public static final int CUTTER = AttributesEnum.Cutter.index();
    public static final int TITLEPRINTABLE = AttributesEnum.TitlePrintable.index();
    public static final int READINGORDER = AttributesEnum.ReadingOrder.index();
    public static final int ACTIVESTATUS = AttributesEnum.ActiveStatus.index();
    public static final int ACTIVECHANGEDATE = AttributesEnum.ActiveChangeDate.index();
    public static final int ACTIVECHANGEUSER = AttributesEnum.ActiveChangeUser.index();
    public static final int UNIFORMTITLE = AttributesEnum.UniformTitle.index();
    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int UNIFORMTITLEPRINTABLE = AttributesEnum.UniformTitlePrintable.index();
    public static final int ABSTRACT1 = AttributesEnum.Abstract1.index();
    public static final int CALLNOTYPE = AttributesEnum.CallNoType.index();
    public static final int CATALOGSOURCE = AttributesEnum.CatalogSource.index();
    public static final int GEOAREACODE = AttributesEnum.GeoAreaCode.index();
    public static final int NBIBNO = AttributesEnum.NbibNo.index();
    public static final int MANUFACTURER = AttributesEnum.Manufacturer.index();
    public static final int ISOLOG = AttributesEnum.IsoLog.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int MAINPRV = AttributesEnum.MainPrv.index();
    public static final int PHYSICALBOOK = AttributesEnum.PhysicalBook.index();
    public static final int VBOOKSUBJECT = AttributesEnum.VbookSubject.index();
    public static final int OTHERTITLE = AttributesEnum.OtherTitle.index();
    public static final int VBOOKPUBLISHER = AttributesEnum.VbookPublisher.index();
    public static final int SERIES = AttributesEnum.Series.index();
    public static final int VBOOKUNIFORMTITLE = AttributesEnum.VbookUniformTitle.index();
    public static final int BOOKISBN = AttributesEnum.BookIsbn.index();
    public static final int NOTE = AttributesEnum.Note.index();
    public static final int VBOOKLANGUAGE = AttributesEnum.VbookLanguage.index();
    public static final int VBOOKPROVIDER = AttributesEnum.VbookProvider.index();
    public static final int CARD = AttributesEnum.Card.index();
    public static final int RESERVE = AttributesEnum.Reserve.index();
    public static final int VBOOKPROVIDER1 = AttributesEnum.VbookProvider1.index();
    public static final int PHYSICALBOOK1 = AttributesEnum.PhysicalBook1.index();
    public static final int UNIFORMTITLE2 = AttributesEnum.UniformTitle2.index();
    public static final int UNIFORMTITLE1 = AttributesEnum.UniformTitle1.index();
    public static final int ORIGINETITLE = AttributesEnum.OrigineTitle.index();
    public static final int PROVIDER = AttributesEnum.Provider.index();
    public static final int PUBLISHER = AttributesEnum.Publisher.index();
    public static final int SUBJECT = AttributesEnum.Subject.index();
    public static final int MESSAGEVO1 = AttributesEnum.MessageVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VirtualBookImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("org.parsisys.tehranuniversity.library.model.eo.VirtualBook");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Labcol, using the alias name Labcol.
     * @return the Labcol
     */
    public Number getLabcol() {
        return (Number)getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Labcol.
     * @param value value to set the Labcol
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for ArtId, using the alias name ArtId.
     * @return the ArtId
     */
    public Number getArtId() {
        return (Number)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArtId.
     * @param value value to set the ArtId
     */
    public void setArtId(Number value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for CallNo, using the alias name CallNo.
     * @return the CallNo
     */
    public String getCallNo() {
        return (String)getAttributeInternal(CALLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CallNo.
     * @param value value to set the CallNo
     */
    public void setCallNo(String value) {
        setAttributeInternal(CALLNO, value);
    }

    /**
     * Gets the attribute value for Title, using the alias name Title.
     * @return the Title
     */
    public String getTitle() {
        return (String)getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Title.
     * @param value value to set the Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for RepAuthor, using the alias name RepAuthor.
     * @return the RepAuthor
     */
    public String getRepAuthor() {
        return (String)getAttributeInternal(REPAUTHOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for RepAuthor.
     * @param value value to set the RepAuthor
     */
    public void setRepAuthor(String value) {
        setAttributeInternal(REPAUTHOR, value);
    }

    /**
     * Gets the attribute value for Edition, using the alias name Edition.
     * @return the Edition
     */
    public String getEdition() {
        return (String)getAttributeInternal(EDITION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Edition.
     * @param value value to set the Edition
     */
    public void setEdition(String value) {
        setAttributeInternal(EDITION, value);
    }

    /**
     * Gets the attribute value for PhysicalDesc, using the alias name PhysicalDesc.
     * @return the PhysicalDesc
     */
    public String getPhysicalDesc() {
        return (String)getAttributeInternal(PHYSICALDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for PhysicalDesc.
     * @param value value to set the PhysicalDesc
     */
    public void setPhysicalDesc(String value) {
        setAttributeInternal(PHYSICALDESC, value);
    }

    /**
     * Gets the attribute value for Contents, using the alias name Contents.
     * @return the Contents
     */
    public String getContents() {
        return (String)getAttributeInternal(CONTENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Contents.
     * @param value value to set the Contents
     */
    public void setContents(String value) {
        setAttributeInternal(CONTENTS, value);
    }

    /**
     * Gets the attribute value for Reference, using the alias name Reference.
     * @return the Reference
     */
    public Number getReference() {
        return (Number)getAttributeInternal(REFERENCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Reference.
     * @param value value to set the Reference
     */
    public void setReference(Number value) {
        setAttributeInternal(REFERENCE, value);
    }

    /**
     * Gets the attribute value for VolumeCount, using the alias name VolumeCount.
     * @return the VolumeCount
     */
    public Number getVolumeCount() {
        return (Number)getAttributeInternal(VOLUMECOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for VolumeCount.
     * @param value value to set the VolumeCount
     */
    public void setVolumeCount(Number value) {
        setAttributeInternal(VOLUMECOUNT, value);
    }

    /**
     * Gets the attribute value for PubDate, using the alias name PubDate.
     * @return the PubDate
     */
    public String getPubDate() {
        return (String)getAttributeInternal(PUBDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PubDate.
     * @param value value to set the PubDate
     */
    public void setPubDate(String value) {
        setAttributeInternal(PUBDATE, value);
    }

    /**
     * Gets the attribute value for InsertDate, using the alias name InsertDate.
     * @return the InsertDate
     */
    public Number getInsertDate() {
        return (Number)getAttributeInternal(INSERTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsertDate.
     * @param value value to set the InsertDate
     */
    public void setInsertDate(Number value) {
        setAttributeInternal(INSERTDATE, value);
    }

    /**
     * Gets the attribute value for BiblioNote, using the alias name BiblioNote.
     * @return the BiblioNote
     */
    public String getBiblioNote() {
        return (String)getAttributeInternal(BIBLIONOTE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BiblioNote.
     * @param value value to set the BiblioNote
     */
    public void setBiblioNote(String value) {
        setAttributeInternal(BIBLIONOTE, value);
    }

    /**
     * Gets the attribute value for IndexNote, using the alias name IndexNote.
     * @return the IndexNote
     */
    public String getIndexNote() {
        return (String)getAttributeInternal(INDEXNOTE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IndexNote.
     * @param value value to set the IndexNote
     */
    public void setIndexNote(String value) {
        setAttributeInternal(INDEXNOTE, value);
    }

    /**
     * Gets the attribute value for OrigTitle, using the alias name OrigTitle.
     * @return the OrigTitle
     */
    public String getOrigTitle() {
        return (String)getAttributeInternal(ORIGTITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrigTitle.
     * @param value value to set the OrigTitle
     */
    public void setOrigTitle(String value) {
        setAttributeInternal(ORIGTITLE, value);
    }

    /**
     * Gets the attribute value for Cutter, using the alias name Cutter.
     * @return the Cutter
     */
    public Number getCutter() {
        return (Number)getAttributeInternal(CUTTER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cutter.
     * @param value value to set the Cutter
     */
    public void setCutter(Number value) {
        setAttributeInternal(CUTTER, value);
    }

    /**
     * Gets the attribute value for TitlePrintable, using the alias name TitlePrintable.
     * @return the TitlePrintable
     */
    public Number getTitlePrintable() {
        return (Number)getAttributeInternal(TITLEPRINTABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TitlePrintable.
     * @param value value to set the TitlePrintable
     */
    public void setTitlePrintable(Number value) {
        setAttributeInternal(TITLEPRINTABLE, value);
    }

    /**
     * Gets the attribute value for ReadingOrder, using the alias name ReadingOrder.
     * @return the ReadingOrder
     */
    public Number getReadingOrder() {
        return (Number)getAttributeInternal(READINGORDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReadingOrder.
     * @param value value to set the ReadingOrder
     */
    public void setReadingOrder(Number value) {
        setAttributeInternal(READINGORDER, value);
    }

    /**
     * Gets the attribute value for ActiveStatus, using the alias name ActiveStatus.
     * @return the ActiveStatus
     */
    public Number getActiveStatus() {
        return (Number)getAttributeInternal(ACTIVESTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveStatus.
     * @param value value to set the ActiveStatus
     */
    public void setActiveStatus(Number value) {
        setAttributeInternal(ACTIVESTATUS, value);
    }

    /**
     * Gets the attribute value for ActiveChangeDate, using the alias name ActiveChangeDate.
     * @return the ActiveChangeDate
     */
    public Number getActiveChangeDate() {
        return (Number)getAttributeInternal(ACTIVECHANGEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveChangeDate.
     * @param value value to set the ActiveChangeDate
     */
    public void setActiveChangeDate(Number value) {
        setAttributeInternal(ACTIVECHANGEDATE, value);
    }

    /**
     * Gets the attribute value for ActiveChangeUser, using the alias name ActiveChangeUser.
     * @return the ActiveChangeUser
     */
    public String getActiveChangeUser() {
        return (String)getAttributeInternal(ACTIVECHANGEUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveChangeUser.
     * @param value value to set the ActiveChangeUser
     */
    public void setActiveChangeUser(String value) {
        setAttributeInternal(ACTIVECHANGEUSER, value);
    }

    /**
     * Gets the attribute value for UniformTitle, using the alias name UniformTitle.
     * @return the UniformTitle
     */
    public Number getUniformTitle() {
        return (Number)getAttributeInternal(UNIFORMTITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UniformTitle.
     * @param value value to set the UniformTitle
     */
    public void setUniformTitle(Number value) {
        setAttributeInternal(UNIFORMTITLE, value);
    }

    /**
     * Gets the attribute value for UserName, using the alias name UserName.
     * @return the UserName
     */
    public String getUserName() {
        return (String)getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserName.
     * @param value value to set the UserName
     */
    public void setUserName(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for UniformTitlePrintable, using the alias name UniformTitlePrintable.
     * @return the UniformTitlePrintable
     */
    public Number getUniformTitlePrintable() {
        return (Number)getAttributeInternal(UNIFORMTITLEPRINTABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UniformTitlePrintable.
     * @param value value to set the UniformTitlePrintable
     */
    public void setUniformTitlePrintable(Number value) {
        setAttributeInternal(UNIFORMTITLEPRINTABLE, value);
    }

    /**
     * Gets the attribute value for Abstract1, using the alias name Abstract1.
     * @return the Abstract1
     */
    public String getAbstract1() {
        return (String)getAttributeInternal(ABSTRACT1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Abstract1.
     * @param value value to set the Abstract1
     */
    public void setAbstract1(String value) {
        setAttributeInternal(ABSTRACT1, value);
    }

    /**
     * Gets the attribute value for CallNoType, using the alias name CallNoType.
     * @return the CallNoType
     */
    public Number getCallNoType() {
        return (Number)getAttributeInternal(CALLNOTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CallNoType.
     * @param value value to set the CallNoType
     */
    public void setCallNoType(Number value) {
        setAttributeInternal(CALLNOTYPE, value);
    }

    /**
     * Gets the attribute value for CatalogSource, using the alias name CatalogSource.
     * @return the CatalogSource
     */
    public String getCatalogSource() {
        return (String)getAttributeInternal(CATALOGSOURCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CatalogSource.
     * @param value value to set the CatalogSource
     */
    public void setCatalogSource(String value) {
        setAttributeInternal(CATALOGSOURCE, value);
    }

    /**
     * Gets the attribute value for GeoAreaCode, using the alias name GeoAreaCode.
     * @return the GeoAreaCode
     */
    public String getGeoAreaCode() {
        return (String)getAttributeInternal(GEOAREACODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for GeoAreaCode.
     * @param value value to set the GeoAreaCode
     */
    public void setGeoAreaCode(String value) {
        setAttributeInternal(GEOAREACODE, value);
    }

    /**
     * Gets the attribute value for NbibNo, using the alias name NbibNo.
     * @return the NbibNo
     */
    public String getNbibNo() {
        return (String)getAttributeInternal(NBIBNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for NbibNo.
     * @param value value to set the NbibNo
     */
    public void setNbibNo(String value) {
        setAttributeInternal(NBIBNO, value);
    }

    /**
     * Gets the attribute value for Manufacturer, using the alias name Manufacturer.
     * @return the Manufacturer
     */
    public String getManufacturer() {
        return (String)getAttributeInternal(MANUFACTURER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Manufacturer.
     * @param value value to set the Manufacturer
     */
    public void setManufacturer(String value) {
        setAttributeInternal(MANUFACTURER, value);
    }

    /**
     * Gets the attribute value for IsoLog, using the alias name IsoLog.
     * @return the IsoLog
     */
    public String getIsoLog() {
        return (String)getAttributeInternal(ISOLOG);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsoLog.
     * @param value value to set the IsoLog
     */
    public void setIsoLog(String value) {
        setAttributeInternal(ISOLOG, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date)getAttributeInternal(MODIFIEDDATE);
    }


    /**
     * Gets the attribute value for MainPrv, using the alias name MainPrv.
     * @return the MainPrv
     */
    public Number getMainPrv() {
        return (Number)getAttributeInternal(MAINPRV);
    }

    /**
     * Sets <code>value</code> as the attribute value for MainPrv.
     * @param value value to set the MainPrv
     */
    public void setMainPrv(Number value) {
        setAttributeInternal(MAINPRV, value);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPhysicalBook() {
        return (RowIterator)getAttributeInternal(PHYSICALBOOK);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getVbookSubject() {
        return (RowIterator)getAttributeInternal(VBOOKSUBJECT);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getOtherTitle() {
        return (RowIterator)getAttributeInternal(OTHERTITLE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getVbookPublisher() {
        return (RowIterator)getAttributeInternal(VBOOKPUBLISHER);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSeries() {
        return (RowIterator)getAttributeInternal(SERIES);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getVbookUniformTitle() {
        return (RowIterator)getAttributeInternal(VBOOKUNIFORMTITLE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getBookIsbn() {
        return (RowIterator)getAttributeInternal(BOOKISBN);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getNote() {
        return (RowIterator)getAttributeInternal(NOTE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getVbookLanguage() {
        return (RowIterator)getAttributeInternal(VBOOKLANGUAGE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getVbookProvider() {
        return (RowIterator)getAttributeInternal(VBOOKPROVIDER);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getCard() {
        return (RowIterator)getAttributeInternal(CARD);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getReserve() {
        return (RowIterator)getAttributeInternal(RESERVE);
    }

    /**
     * @return the associated entity VbookProviderImpl.
     */
    public VbookProviderImpl getVbookProvider1() {
        return (VbookProviderImpl)getAttributeInternal(VBOOKPROVIDER1);
    }

    /**
     * Sets <code>value</code> as the associated entity VbookProviderImpl.
     */
    public void setVbookProvider1(VbookProviderImpl value) {
        setAttributeInternal(VBOOKPROVIDER1, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPhysicalBook1() {
        return (RowIterator)getAttributeInternal(PHYSICALBOOK1);
    }

    /**
     * @return the associated entity UniformTitleImpl.
     */
    public UniformTitleImpl getUniformTitle2() {
        return (UniformTitleImpl)getAttributeInternal(UNIFORMTITLE2);
    }

    /**
     * Sets <code>value</code> as the associated entity UniformTitleImpl.
     */
    public void setUniformTitle2(UniformTitleImpl value) {
        setAttributeInternal(UNIFORMTITLE2, value);
    }

    /**
     * @return the associated entity UniformTitleImpl.
     */
    public UniformTitleImpl getUniformTitle1() {
        return (UniformTitleImpl)getAttributeInternal(UNIFORMTITLE1);
    }

    /**
     * Sets <code>value</code> as the associated entity UniformTitleImpl.
     */
    public void setUniformTitle1(UniformTitleImpl value) {
        setAttributeInternal(UNIFORMTITLE1, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */


    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getOrigineTitle() {
        return (EntityImpl)getAttributeInternal(ORIGINETITLE);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setOrigineTitle(EntityImpl value) {
        setAttributeInternal(ORIGINETITLE, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getProvider() {
        return (RowIterator)getAttributeInternal(PROVIDER);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPublisher() {
        return (RowIterator)getAttributeInternal(PUBLISHER);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSubject() {
        return (RowIterator)getAttributeInternal(SUBJECT);
    }


    /**
     * Gets the view accessor <code>RowSet</code> MessageVO1.
     */
    public RowSet getMessageVO1() {
        return (RowSet)getAttributeInternal(MESSAGEVO1);
    }


    /**
     * @param artId key constituent
     * @param labcol key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number artId, Number labcol) {
        return new Key(new Object[]{artId, labcol});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
       setArtId(new Number(-1));
        setLabcol((Number)getDBTransaction().getSession().getUserData().get("labcolno"));
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {


        String msg = "";
        Key key = null;
        if (getPhysicalBook().hasNext()) {
            key = new Key(new Object[] { "un_del_replicated_vbook".toUpperCase() });
            msg =
(String)getMessageVO1().findByKey(key, 1)[0].getAttribute("Message");
            throw new JboException(msg);
        }

        if (getVbookSubject().hasNext()) {
            key = new Key(new Object[] { "un_del_subjected_vbook".toUpperCase() });
            msg =
(String)getMessageVO1().findByKey(key, 1)[0].getAttribute("Message");
            throw new JboException(msg);
        }

        RowIterator vbookProvider = getVbookProvider();
        boolean hasMainProvider = false;
        VbookProviderImpl vbookPrv = null;
        while (vbookProvider.hasNext()) {
            vbookPrv = (VbookProviderImpl)vbookProvider.next();
            if (new Number(2).equals(vbookPrv.getEntryKind())) {
                key = new Key(new Object[] { "un_del_adprv_vbook".toUpperCase() });
                msg =
(String)getMessageVO1().findByKey(key, 1)[0].getAttribute("Message");
                throw new JboException(msg);
            } else if (new Number(1).equals(vbookPrv.getEntryKind())) {
                hasMainProvider = true;
            }
        }
        
        if(hasMainProvider) {
          key = new Key(new Object[] { "un_del_providered_vbook".toUpperCase() });
          msg =
          (String)getMessageVO1().findByKey(key, 1)[0].getAttribute("Message");
          throw new JboException(msg);
        }

if(getVbookPublisher().hasNext()) {
  key = new Key(new Object[] { "un_del_published_vbook".toUpperCase() });
          msg =
          (String)getMessageVO1().findByKey(key, 1)[0].getAttribute("Message");
          throw new JboException(msg);
}

if(getSeries().hasNext()) {
   key = new Key(new Object[] { "un_del_seriesed_vbook".toUpperCase() });
          msg =
          (String)getMessageVO1().findByKey(key, 1)[0].getAttribute("Message");
          throw new JboException(msg);
}

      if(getNote().hasNext()) {
         key = new Key(new Object[] { "un_del_noted_vbook".toUpperCase() });
                msg =
                (String)getMessageVO1().findByKey(key, 1)[0].getAttribute("Message");
                throw new JboException(msg);
      }
       if(getVbookLanguage().hasNext()) {
         key = new Key(new Object[] { "un_del_languaged_vbook".toUpperCase() });
                msg =
                (String)getMessageVO1().findByKey(key, 1)[0].getAttribute("Message");
                throw new JboException(msg);
      }
        if(getOtherTitle().hasNext()) {
         key = new Key(new Object[] { "un_del_adtitled_vbook".toUpperCase() });
                msg =
                (String)getMessageVO1().findByKey(key, 1)[0].getAttribute("Message");
                throw new JboException(msg);
      }
        if(getVbookUniformTitle().hasNext()) {
         
                throw new JboException("Cannot delete master record when matching detail records exist.");
      }
        if(getBookIsbn().hasNext()) {
         key = new Key(new Object[] { "un_del_isbn".toUpperCase() });
                msg =
                (String)getMessageVO1().findByKey(key, 1)[0].getAttribute("Message");
                throw new JboException(msg);
      }
        
        
        RowIterator cardRI = getCard();
        while (cardRI.hasNext())
            ((CardImpl)cardRI.next()).remove();


        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_INSERT || operation == DML_UPDATE) {
            setActiveChangeDate(ParsiUtil.DateToNumber());
            setActiveChangeUser((String)getDBTransaction().getSession().getUserData().get("username"));
        }
        if(operation==DML_INSERT) {
          SequenceImpl si =
              new SequenceImpl("BOOK.SEQ_VIRTUAL_BOOK_ART_ID", getDBTransaction());
          setArtId(si.getSequenceNumber());
        }
        super.doDML(operation, e);
    }
}
