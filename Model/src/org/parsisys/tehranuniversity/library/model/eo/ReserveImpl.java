package org.parsisys.tehranuniversity.library.model.eo;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat May 12 14:10:40 GMT+04:00 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ReserveImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Labcol {
            public Object get(ReserveImpl obj) {
                return obj.getLabcol();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        ArtId {
            public Object get(ReserveImpl obj) {
                return obj.getArtId();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setArtId((DBSequence)value);
            }
        }
        ,
        RetDate {
            public Object get(ReserveImpl obj) {
                return obj.getRetDate();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setRetDate((Number)value);
            }
        }
        ,
        Active {
            public Object get(ReserveImpl obj) {
                return obj.getActive();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setActive((Number)value);
            }
        }
        ,
        VolNo {
            public Object get(ReserveImpl obj) {
                return obj.getVolNo();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setVolNo((String)value);
            }
        }
        ,
        DayDate {
            public Object get(ReserveImpl obj) {
                return obj.getDayDate();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setDayDate((Number)value);
            }
        }
        ,
        MemArtId {
            public Object get(ReserveImpl obj) {
                return obj.getMemArtId();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setMemArtId((Number)value);
            }
        }
        ,
        VbookArtId {
            public Object get(ReserveImpl obj) {
                return obj.getVbookArtId();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setVbookArtId((Number)value);
            }
        }
        ,
        UserName {
            public Object get(ReserveImpl obj) {
                return obj.getUserName();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setUserName((String)value);
            }
        }
        ,
        PartNo {
            public Object get(ReserveImpl obj) {
                return obj.getPartNo();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setPartNo((String)value);
            }
        }
        ,
        Member {
            public Object get(ReserveImpl obj) {
                return obj.getMember();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setMember((MemberImpl)value);
            }
        }
        ,
        Member1 {
            public Object get(ReserveImpl obj) {
                return obj.getMember1();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setMember1((MemberImpl)value);
            }
        }
        ,
        VirtualBook {
            public Object get(ReserveImpl obj) {
                return obj.getVirtualBook();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setVirtualBook((VirtualBookImpl)value);
            }
        }
        ,
        InitMember {
            public Object get(ReserveImpl obj) {
                return obj.getInitMember();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setInitMember((InitMemberImpl)value);
            }
        }
        ,
        InitMember1 {
            public Object get(ReserveImpl obj) {
                return obj.getInitMember1();
            }

            public void put(ReserveImpl obj, Object value) {
                obj.setInitMember1((InitMemberImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ReserveImpl object);

        public abstract void put(ReserveImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


  

    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int RETDATE = AttributesEnum.RetDate.index();
    public static final int ACTIVE = AttributesEnum.Active.index();
    public static final int VOLNO = AttributesEnum.VolNo.index();
    public static final int DAYDATE = AttributesEnum.DayDate.index();
    public static final int MEMARTID = AttributesEnum.MemArtId.index();
    public static final int VBOOKARTID = AttributesEnum.VbookArtId.index();
    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int PARTNO = AttributesEnum.PartNo.index();
    public static final int MEMBER = AttributesEnum.Member.index();
    public static final int MEMBER1 = AttributesEnum.Member1.index();
    public static final int VIRTUALBOOK = AttributesEnum.VirtualBook.index();
    public static final int INITMEMBER = AttributesEnum.InitMember.index();
    public static final int INITMEMBER1 = AttributesEnum.InitMember1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ReserveImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("org.parsisys.tehranuniversity.library.model.eo.Reserve");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Labcol, using the alias name Labcol.
     * @return the Labcol
     */
    public Number getLabcol() {
        return (Number)getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Labcol.
     * @param value value to set the Labcol
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for ArtId, using the alias name ArtId.
     * @return the ArtId
     */
    public DBSequence getArtId() {
        return (DBSequence)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArtId.
     * @param value value to set the ArtId
     */
    public void setArtId(DBSequence value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for RetDate, using the alias name RetDate.
     * @return the RetDate
     */
    public Number getRetDate() {
        return (Number)getAttributeInternal(RETDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RetDate.
     * @param value value to set the RetDate
     */
    public void setRetDate(Number value) {
        setAttributeInternal(RETDATE, value);
    }

    /**
     * Gets the attribute value for Active, using the alias name Active.
     * @return the Active
     */
    public Number getActive() {
        return (Number)getAttributeInternal(ACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Active.
     * @param value value to set the Active
     */
    public void setActive(Number value) {
        setAttributeInternal(ACTIVE, value);
    }

    /**
     * Gets the attribute value for VolNo, using the alias name VolNo.
     * @return the VolNo
     */
    public String getVolNo() {
        return (String)getAttributeInternal(VOLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for VolNo.
     * @param value value to set the VolNo
     */
    public void setVolNo(String value) {
        setAttributeInternal(VOLNO, value);
    }

    /**
     * Gets the attribute value for DayDate, using the alias name DayDate.
     * @return the DayDate
     */
    public Number getDayDate() {
        return (Number)getAttributeInternal(DAYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DayDate.
     * @param value value to set the DayDate
     */
    public void setDayDate(Number value) {
        setAttributeInternal(DAYDATE, value);
    }

    /**
     * Gets the attribute value for MemArtId, using the alias name MemArtId.
     * @return the MemArtId
     */
    public Number getMemArtId() {
        return (Number)getAttributeInternal(MEMARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MemArtId.
     * @param value value to set the MemArtId
     */
    public void setMemArtId(Number value) {
        setAttributeInternal(MEMARTID, value);
    }

    /**
     * Gets the attribute value for VbookArtId, using the alias name VbookArtId.
     * @return the VbookArtId
     */
    public Number getVbookArtId() {
        return (Number)getAttributeInternal(VBOOKARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for VbookArtId.
     * @param value value to set the VbookArtId
     */
    public void setVbookArtId(Number value) {
        setAttributeInternal(VBOOKARTID, value);
    }

    /**
     * Gets the attribute value for UserName, using the alias name UserName.
     * @return the UserName
     */
    public String getUserName() {
        return (String)getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserName.
     * @param value value to set the UserName
     */
    public void setUserName(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for PartNo, using the alias name PartNo.
     * @return the PartNo
     */
    public String getPartNo() {
        return (String)getAttributeInternal(PARTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PartNo.
     * @param value value to set the PartNo
     */
    public void setPartNo(String value) {
        setAttributeInternal(PARTNO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MemberImpl.
     */
    public MemberImpl getMember() {
        return (MemberImpl)getAttributeInternal(MEMBER);
    }

    /**
     * Sets <code>value</code> as the associated entity MemberImpl.
     */
    public void setMember(MemberImpl value) {
        setAttributeInternal(MEMBER, value);
    }

    /**
     * @return the associated entity MemberImpl.
     */
    public MemberImpl getMember1() {
        return (MemberImpl)getAttributeInternal(MEMBER1);
    }

    /**
     * Sets <code>value</code> as the associated entity MemberImpl.
     */
    public void setMember1(MemberImpl value) {
        setAttributeInternal(MEMBER1, value);
    }

    /**
     * @return the associated entity VirtualBookImpl.
     */
    public VirtualBookImpl getVirtualBook() {
        return (VirtualBookImpl)getAttributeInternal(VIRTUALBOOK);
    }

    /**
     * Sets <code>value</code> as the associated entity VirtualBookImpl.
     */
    public void setVirtualBook(VirtualBookImpl value) {
        setAttributeInternal(VIRTUALBOOK, value);
    }

    /**
     * @return the associated entity InitMemberImpl.
     */
    public InitMemberImpl getInitMember() {
        return (InitMemberImpl)getAttributeInternal(INITMEMBER);
    }

    /**
     * Sets <code>value</code> as the associated entity InitMemberImpl.
     */
    public void setInitMember(InitMemberImpl value) {
        setAttributeInternal(INITMEMBER, value);
    }

    /**
     * @return the associated entity InitMemberImpl.
     */
    public InitMemberImpl getInitMember1() {
        return (InitMemberImpl)getAttributeInternal(INITMEMBER1);
    }

    /**
     * Sets <code>value</code> as the associated entity InitMemberImpl.
     */
    public void setInitMember1(InitMemberImpl value) {
        setAttributeInternal(INITMEMBER1, value);
    }


    /**
     * @param labcol key constituent
     * @param artId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number labcol, DBSequence artId) {
        return new Key(new Object[]{labcol, artId});
    }

    /**
     * @return the associated entity PhysicalBookImpl.
     */
  

    /**
     * Sets <code>value</code> as the associated entity PhysicalBookImpl.
     */
  


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        System.out.println(getDBTransaction().getSession().getUserData().get("labcolno"));
        setLabcol((Number)getDBTransaction().getSession().getUserData().get("labcolno"));
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_INSERT) {
          SequenceImpl si=new SequenceImpl("SEQ_RESERVE_ART_ID",getDBTransaction());
          setArtId(new DBSequence( si.getSequenceNumber()));
        }
        super.doDML(operation, e);
    }
    public Object getPostedAttribute2(int attr) {
     return getPostedAttribute(attr);
    }
}
