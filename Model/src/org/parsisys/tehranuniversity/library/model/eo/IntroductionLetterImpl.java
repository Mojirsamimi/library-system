package org.parsisys.tehranuniversity.library.model.eo;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Mar 09 11:48:00 GMT+04:00 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class IntroductionLetterImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    @Override
    protected void doDML(int i, TransactionEvent transactionEvent) {
        if(i==DML_INSERT){
          SequenceImpl si = new SequenceImpl("SEQ_INTRODUCTION_LETTER_ART_ID",getDBTransaction());
          setArtId(new DBSequence( si.getSequenceNumber()));
        }
        super.doDML(i, transactionEvent);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Labcol {
            public Object get(IntroductionLetterImpl obj) {
                return obj.getLabcol();
            }

            public void put(IntroductionLetterImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        ArtId {
            public Object get(IntroductionLetterImpl obj) {
                return obj.getArtId();
            }

            public void put(IntroductionLetterImpl obj, Object value) {
                obj.setArtId((DBSequence)value);
            }
        }
        ,
        MemArtId {
            public Object get(IntroductionLetterImpl obj) {
                return obj.getMemArtId();
            }

            public void put(IntroductionLetterImpl obj, Object value) {
                obj.setMemArtId((Number)value);
            }
        }
        ,
        IntroduceDate {
            public Object get(IntroductionLetterImpl obj) {
                return obj.getIntroduceDate();
            }

            public void put(IntroductionLetterImpl obj, Object value) {
                obj.setIntroduceDate((Number)value);
            }
        }
        ,
        GoalLibrary {
            public Object get(IntroductionLetterImpl obj) {
                return obj.getGoalLibrary();
            }

            public void put(IntroductionLetterImpl obj, Object value) {
                obj.setGoalLibrary((String)value);
            }
        }
        ,
        Description {
            public Object get(IntroductionLetterImpl obj) {
                return obj.getDescription();
            }

            public void put(IntroductionLetterImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        IssuanceUser {
            public Object get(IntroductionLetterImpl obj) {
                return obj.getIssuanceUser();
            }

            public void put(IntroductionLetterImpl obj, Object value) {
                obj.setIssuanceUser((String)value);
            }
        }
        ,
        CancellationUser {
            public Object get(IntroductionLetterImpl obj) {
                return obj.getCancellationUser();
            }

            public void put(IntroductionLetterImpl obj, Object value) {
                obj.setCancellationUser((String)value);
            }
        }
        ,
        CancelDate {
            public Object get(IntroductionLetterImpl obj) {
                return obj.getCancelDate();
            }

            public void put(IntroductionLetterImpl obj, Object value) {
                obj.setCancelDate((Number)value);
            }
        }
        ,
        InitMember {
            public Object get(IntroductionLetterImpl obj) {
                return obj.getInitMember();
            }

            public void put(IntroductionLetterImpl obj, Object value) {
                obj.setInitMember((InitMemberImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(IntroductionLetterImpl object);

        public abstract void put(IntroductionLetterImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int MEMARTID = AttributesEnum.MemArtId.index();
    public static final int INTRODUCEDATE = AttributesEnum.IntroduceDate.index();
    public static final int GOALLIBRARY = AttributesEnum.GoalLibrary.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int ISSUANCEUSER = AttributesEnum.IssuanceUser.index();
    public static final int CANCELLATIONUSER = AttributesEnum.CancellationUser.index();
    public static final int CANCELDATE = AttributesEnum.CancelDate.index();
    public static final int INITMEMBER = AttributesEnum.InitMember.index();

    /**
     * This is the default constructor (do not remove).
     */
    public IntroductionLetterImpl() {
    }

    /**
     * Gets the attribute value for Labcol, using the alias name Labcol.
     * @return the Labcol
     */
    public Number getLabcol() {
        return (Number)getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Labcol.
     * @param value value to set the Labcol
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for ArtId, using the alias name ArtId.
     * @return the ArtId
     */
    public DBSequence getArtId() {
        return (DBSequence)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArtId.
     * @param value value to set the ArtId
     */
    public void setArtId(DBSequence value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for MemArtId, using the alias name MemArtId.
     * @return the MemArtId
     */
    public Number getMemArtId() {
        return (Number)getAttributeInternal(MEMARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MemArtId.
     * @param value value to set the MemArtId
     */
    public void setMemArtId(Number value) {
        setAttributeInternal(MEMARTID, value);
    }

    /**
     * Gets the attribute value for IntroduceDate, using the alias name IntroduceDate.
     * @return the IntroduceDate
     */
    public Number getIntroduceDate() {
        return (Number)getAttributeInternal(INTRODUCEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IntroduceDate.
     * @param value value to set the IntroduceDate
     */
    public void setIntroduceDate(Number value) {
        setAttributeInternal(INTRODUCEDATE, value);
    }

    /**
     * Gets the attribute value for GoalLibrary, using the alias name GoalLibrary.
     * @return the GoalLibrary
     */
    public String getGoalLibrary() {
        return (String)getAttributeInternal(GOALLIBRARY);
    }

    /**
     * Sets <code>value</code> as the attribute value for GoalLibrary.
     * @param value value to set the GoalLibrary
     */
    public void setGoalLibrary(String value) {
        setAttributeInternal(GOALLIBRARY, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for IssuanceUser, using the alias name IssuanceUser.
     * @return the IssuanceUser
     */
    public String getIssuanceUser() {
        return (String)getAttributeInternal(ISSUANCEUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for IssuanceUser.
     * @param value value to set the IssuanceUser
     */
    public void setIssuanceUser(String value) {
        setAttributeInternal(ISSUANCEUSER, value);
    }

    /**
     * Gets the attribute value for CancellationUser, using the alias name CancellationUser.
     * @return the CancellationUser
     */
    public String getCancellationUser() {
        return (String)getAttributeInternal(CANCELLATIONUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for CancellationUser.
     * @param value value to set the CancellationUser
     */
    public void setCancellationUser(String value) {
        setAttributeInternal(CANCELLATIONUSER, value);
    }

    /**
     * Gets the attribute value for CancelDate, using the alias name CancelDate.
     * @return the CancelDate
     */
    public Number getCancelDate() {
        return (Number)getAttributeInternal(CANCELDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CancelDate.
     * @param value value to set the CancelDate
     */
    public void setCancelDate(Number value) {
        setAttributeInternal(CANCELDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity InitMemberImpl.
     */
    public InitMemberImpl getInitMember() {
        return (InitMemberImpl)getAttributeInternal(INITMEMBER);
    }

    /**
     * Sets <code>value</code> as the associated entity InitMemberImpl.
     */
    public void setInitMember(InitMemberImpl value) {
        setAttributeInternal(INITMEMBER, value);
    }

    /**
     * @param labcol key constituent
     * @param artId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number labcol, DBSequence artId) {
        return new Key(new Object[]{labcol, artId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("org.parsisys.tehranuniversity.library.model.eo.IntroductionLetter");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    
    }
}
