package org.parsisys.tehranuniversity.library.model.eo;

import oracle.jbo.Key;
import oracle.jbo.domain.ClobDomain;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 11 12:40:49 GMT+03:30 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BookStatusHistoryImpl
  extends EntityImpl
{
  private static EntityDefImpl mDefinitionObject;

  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
   */
  public enum AttributesEnum
  {
    Labcol
    {
      public Object get(BookStatusHistoryImpl obj)
      {
        return obj.getLabcol();
      }

      public void put(BookStatusHistoryImpl obj, Object value)
      {
        obj.setLabcol((Number)value);
      }
    }
    ,
    ArtId
    {
      public Object get(BookStatusHistoryImpl obj)
      {
        return obj.getArtId();
      }

      public void put(BookStatusHistoryImpl obj, Object value)
      {
        obj.setArtId((DBSequence) value);
      }
    }
    ,
    DayDate
    {
      public Object get(BookStatusHistoryImpl obj)
      {
        return obj.getDayDate();
      }

      public void put(BookStatusHistoryImpl obj, Object value)
      {
        obj.setDayDate((Number)value);
      }
    }
    ,
    LoanStatus
    {
      public Object get(BookStatusHistoryImpl obj)
      {
        return obj.getLoanStatus();
      }

      public void put(BookStatusHistoryImpl obj, Object value)
      {
        obj.setLoanStatus((Number)value);
      }
    }
    ,
    SafetyStatus
    {
      public Object get(BookStatusHistoryImpl obj)
      {
        return obj.getSafetyStatus();
      }

      public void put(BookStatusHistoryImpl obj, Object value)
      {
        obj.setSafetyStatus((Number)value);
      }
    }
    ,
    ExistenceStatus
    {
      public Object get(BookStatusHistoryImpl obj)
      {
        return obj.getExistenceStatus();
      }

      public void put(BookStatusHistoryImpl obj, Object value)
      {
        obj.setExistenceStatus((Number)value);
      }
    }
    ,
    Place
    {
      public Object get(BookStatusHistoryImpl obj)
      {
        return obj.getPlace();
      }

      public void put(BookStatusHistoryImpl obj, Object value)
      {
        obj.setPlace((Number)value);
      }
    }
    ,
    PhbookArtId
    {
      public Object get(BookStatusHistoryImpl obj)
      {
        return obj.getPhbookArtId();
      }

      public void put(BookStatusHistoryImpl obj, Object value)
      {
        obj.setPhbookArtId((Number)value);
      }
    }
    ,
    UserName
    {
      public Object get(BookStatusHistoryImpl obj)
      {
        return obj.getUserName();
      }

      public void put(BookStatusHistoryImpl obj, Object value)
      {
        obj.setUserName((String)value);
      }
    }
    ,
    PhysicalBook
    {
      public Object get(BookStatusHistoryImpl obj)
      {
        return obj.getPhysicalBook();
      }

      public void put(BookStatusHistoryImpl obj, Object value)
      {
        obj.setPhysicalBook((PhysicalBookImpl)value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static int firstIndex = 0;

    public abstract Object get(BookStatusHistoryImpl object);

    public abstract void put(BookStatusHistoryImpl object, Object value);

    public int index()
    {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static int firstIndex()
    {
      return firstIndex;
    }

    public static int count()
    {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static AttributesEnum[] staticValues()
    {
      if (vals == null)
      {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }

  public static final int LABCOL = AttributesEnum.Labcol.index();
  public static final int ARTID = AttributesEnum.ArtId.index();
  public static final int DAYDATE = AttributesEnum.DayDate.index();
  public static final int LOANSTATUS = AttributesEnum.LoanStatus.index();
  public static final int SAFETYSTATUS = AttributesEnum.SafetyStatus.index();
  public static final int EXISTENCESTATUS = AttributesEnum.ExistenceStatus.index();
  public static final int PLACE = AttributesEnum.Place.index();
  public static final int PHBOOKARTID = AttributesEnum.PhbookArtId.index();
  public static final int USERNAME = AttributesEnum.UserName.index();
  public static final int PHYSICALBOOK = AttributesEnum.PhysicalBook.index();

  /**
   * This is the default constructor (do not remove).
   */
  public BookStatusHistoryImpl()
  {
  }

  /**
   * @return the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = EntityDefImpl.findDefObject("org.parsisys.tehranuniversity.library.model.eo.BookStatusHistory");
    }
    return mDefinitionObject;
  }

  /**
   * Gets the attribute value for Labcol, using the alias name Labcol.
   * @return the Labcol
   */
  public Number getLabcol()
  {
    return (Number)getAttributeInternal(LABCOL);
  }

  /**
   * Sets <code>value</code> as the attribute value for Labcol.
   * @param value value to set the Labcol
   */
  public void setLabcol(Number value)
  {
    setAttributeInternal(LABCOL, value);
  }

  /**
   * Gets the attribute value for ArtId, using the alias name ArtId.
   * @return the ArtId
   */
  public DBSequence getArtId()
  {
    return (DBSequence) getAttributeInternal(ARTID);
  }

  /**
   * Sets <code>value</code> as the attribute value for ArtId.
   * @param value value to set the ArtId
   */
  public void setArtId(DBSequence value)
  {
    setAttributeInternal(ARTID, value);
  }

  /**
   * Gets the attribute value for DayDate, using the alias name DayDate.
   * @return the DayDate
   */
  public Number getDayDate()
  {
    return (Number)getAttributeInternal(DAYDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for DayDate.
   * @param value value to set the DayDate
   */
  public void setDayDate(Number value)
  {
    setAttributeInternal(DAYDATE, value);
  }

  /**
   * Gets the attribute value for LoanStatus, using the alias name LoanStatus.
   * @return the LoanStatus
   */
  public Number getLoanStatus()
  {
    return (Number)getAttributeInternal(LOANSTATUS);
  }

  /**
   * Sets <code>value</code> as the attribute value for LoanStatus.
   * @param value value to set the LoanStatus
   */
  public void setLoanStatus(Number value)
  {
    setAttributeInternal(LOANSTATUS, value);
  }

  /**
   * Gets the attribute value for SafetyStatus, using the alias name SafetyStatus.
   * @return the SafetyStatus
   */
  public Number getSafetyStatus()
  {
    return (Number)getAttributeInternal(SAFETYSTATUS);
  }

  /**
   * Sets <code>value</code> as the attribute value for SafetyStatus.
   * @param value value to set the SafetyStatus
   */
  public void setSafetyStatus(Number value)
  {
    setAttributeInternal(SAFETYSTATUS, value);
  }

  /**
   * Gets the attribute value for ExistenceStatus, using the alias name ExistenceStatus.
   * @return the ExistenceStatus
   */
  public Number getExistenceStatus()
  {
    return (Number)getAttributeInternal(EXISTENCESTATUS);
  }

  /**
   * Sets <code>value</code> as the attribute value for ExistenceStatus.
   * @param value value to set the ExistenceStatus
   */
  public void setExistenceStatus(Number value)
  {
    setAttributeInternal(EXISTENCESTATUS, value);
  }

  /**
   * Gets the attribute value for Place, using the alias name Place.
   * @return the Place
   */
  public Number getPlace()
  {
    return (Number)getAttributeInternal(PLACE);
  }

  /**
   * Sets <code>value</code> as the attribute value for Place.
   * @param value value to set the Place
   */
  public void setPlace(Number value)
  {
    setAttributeInternal(PLACE, value);
  }

  /**
   * Gets the attribute value for PhbookArtId, using the alias name PhbookArtId.
   * @return the PhbookArtId
   */
  public Number getPhbookArtId()
  {
    return (Number)getAttributeInternal(PHBOOKARTID);
  }

  /**
   * Sets <code>value</code> as the attribute value for PhbookArtId.
   * @param value value to set the PhbookArtId
   */
  public void setPhbookArtId(Number value)
  {
    setAttributeInternal(PHBOOKARTID, value);
  }

  /**
   * Gets the attribute value for UserName, using the alias name UserName.
   * @return the UserName
   */
  public String getUserName()
  {
    return (String)getAttributeInternal(USERNAME);
  }

  /**
   * Sets <code>value</code> as the attribute value for UserName.
   * @param value value to set the UserName
   */
  public void setUserName(String value)
  {
    setAttributeInternal(USERNAME, value);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
  protected Object getAttrInvokeAccessor(int index,
                                         AttributeDefImpl attrDef)
    throws Exception
  {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count()))
    {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  /**
   * setAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param value the value to assign to the attribute
   * @param attrDef the attribute

   * @throws Exception
   */
  protected void setAttrInvokeAccessor(int index, Object value,
                                       AttributeDefImpl attrDef)
    throws Exception
  {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count()))
    {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }

  /**
   * @return the associated entity PhysicalBookImpl.
   */
  public PhysicalBookImpl getPhysicalBook()
  {
    return (PhysicalBookImpl)getAttributeInternal(PHYSICALBOOK);
  }

  /**
   * Sets <code>value</code> as the associated entity PhysicalBookImpl.
   */
  public void setPhysicalBook(PhysicalBookImpl value)
  {
    setAttributeInternal(PHYSICALBOOK, value);
  }


  /**
   * @param labcol key constituent
   * @param artId key constituent

   * @return a Key object based on given key constituents.
   */
  public static Key createPrimaryKey(Number labcol, DBSequence artId)
  {
    return new Key(new Object[]{labcol, artId});
  }

  /**
   * Add locking logic here.
   */
  public void lock()
  {
    super.lock();
  }

  /**
   * Custom DML update/insert/delete logic here.
   * @param operation the operation type
   * @param e the transaction event
   */
  protected void doDML(int operation, TransactionEvent e)
  {
    
    if(operation==DML_INSERT){
      SequenceImpl si = new SequenceImpl("SEQ_BK_ST_HIS_ART_ID",getDBTransaction());
      setArtId(new DBSequence( si.getSequenceNumber()));
    }
    super.doDML(operation, e);
  }
}
