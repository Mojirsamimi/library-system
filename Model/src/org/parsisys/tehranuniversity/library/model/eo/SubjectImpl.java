package org.parsisys.tehranuniversity.library.model.eo;

import fadak.base.TemplateEntityObject;

import java.sql.SQLException;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;

import org.parsisys.tehranuniversity.library.model.vo.RO.DummyVOImpl;
import org.parsisys.tehranuniversity.library.util.ParsiException;
import org.parsisys.tehranuniversity.library.util.ParsiUtil;

import util.JSFUtils;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 15 02:31:22 GMT+03:30 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SubjectImpl extends TemplateEntityObject {
    private static EntityDefImpl mDefinitionObject;

    @Override
    public void beforeCommit(TransactionEvent transactionEvent) {
       
        super.beforeCommit(transactionEvent);
    }


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Labcol {
            public Object get(SubjectImpl obj) {
                return obj.getLabcol();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        ArtId {
            public Object get(SubjectImpl obj) {
                return obj.getArtId();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setArtId((DBSequence)value);
            }
        }
        ,
        Subject {
            public Object get(SubjectImpl obj) {
                return obj.getSubject();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setSubject((String)value);
            }
        }
        ,
        ReadingOrder {
            public Object get(SubjectImpl obj) {
                return obj.getReadingOrder();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setReadingOrder((Number)value);
            }
        }
        ,
        ReferenceType {
            public Object get(SubjectImpl obj) {
                return obj.getReferenceType();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setReferenceType((Number)value);
            }
        }
        ,
        VbookSubject {
            public Object get(SubjectImpl obj) {
                return obj.getVbookSubject();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SeeAlsoSubject1 {
            public Object get(SubjectImpl obj) {
                return obj.getSeeAlsoSubject1();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setSeeAlsoSubject1((SeeAlsoSubjectImpl)value);
            }
        }
        ,
        SeeSubject {
            public Object get(SubjectImpl obj) {
                return obj.getSeeSubject();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setSeeSubject((SeeSubjectImpl)value);
            }
        }
        ,
        SeeAlsoSubject2 {
            public Object get(SubjectImpl obj) {
                return obj.getSeeAlsoSubject2();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SeeAlsoSubject3 {
            public Object get(SubjectImpl obj) {
                return obj.getSeeAlsoSubject3();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setSeeAlsoSubject3((SeeAlsoSubjectImpl)value);
            }
        }
        ,
        VbookSubject1 {
            public Object get(SubjectImpl obj) {
                return obj.getVbookSubject1();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VirtualBook {
            public Object get(SubjectImpl obj) {
                return obj.getVirtualBook();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SeeSubject1 {
            public Object get(SubjectImpl obj) {
                return obj.getSeeSubject1();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setSeeSubject1((SeeSubjectImpl)value);
            }
        }
        ,
        SeeAlsoSubject {
            public Object get(SubjectImpl obj) {
                return obj.getSeeAlsoSubject();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DummyVO1 {
            public Object get(SubjectImpl obj) {
                return obj.getDummyVO1();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MessageVO1 {
            public Object get(SubjectImpl obj) {
                return obj.getMessageVO1();
            }

            public void put(SubjectImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SubjectImpl object);

        public abstract void put(SubjectImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int SUBJECT = AttributesEnum.Subject.index();
    public static final int READINGORDER = AttributesEnum.ReadingOrder.index();
    public static final int REFERENCETYPE = AttributesEnum.ReferenceType.index();
    public static final int VBOOKSUBJECT = AttributesEnum.VbookSubject.index();
    public static final int SEEALSOSUBJECT1 = AttributesEnum.SeeAlsoSubject1.index();
    public static final int SEESUBJECT = AttributesEnum.SeeSubject.index();
    public static final int SEEALSOSUBJECT2 = AttributesEnum.SeeAlsoSubject2.index();
    public static final int SEEALSOSUBJECT3 = AttributesEnum.SeeAlsoSubject3.index();
    public static final int VBOOKSUBJECT1 = AttributesEnum.VbookSubject1.index();
    public static final int VIRTUALBOOK = AttributesEnum.VirtualBook.index();
    public static final int SEESUBJECT1 = AttributesEnum.SeeSubject1.index();
    public static final int SEEALSOSUBJECT = AttributesEnum.SeeAlsoSubject.index();
    public static final int DUMMYVO1 = AttributesEnum.DummyVO1.index();
    public static final int MESSAGEVO1 = AttributesEnum.MessageVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SubjectImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("org.parsisys.tehranuniversity.library.model.eo.Subject");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Labcol, using the alias name Labcol.
     * @return the Labcol
     */
    public Number getLabcol() {
        return (Number)getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Labcol.
     * @param value value to set the Labcol
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for ArtId, using the alias name ArtId.
     * @return the ArtId
     */
    public DBSequence getArtId() {
        return (DBSequence)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArtId.
     * @param value value to set the ArtId
     */
    public void setArtId(DBSequence value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for Subject, using the alias name Subject.
     * @return the Subject
     */
    public String getSubject() {
        return (String)getAttributeInternal(SUBJECT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Subject.
     * @param value value to set the Subject
     */
    public void setSubject(String value) {
        setAttributeInternal(SUBJECT, value);
    }

    /**
     * Gets the attribute value for ReadingOrder, using the alias name ReadingOrder.
     * @return the ReadingOrder
     */
    public Number getReadingOrder() {
        return (Number)getAttributeInternal(READINGORDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReadingOrder.
     * @param value value to set the ReadingOrder
     */
    public void setReadingOrder(Number value) {
        setAttributeInternal(READINGORDER, value);
    }

    /**
     * Gets the attribute value for ReferenceType, using the alias name ReferenceType.
     * @return the ReferenceType
     */
    public Number getReferenceType() {
        return (Number)getAttributeInternal(REFERENCETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReferenceType.
     * @param value value to set the ReferenceType
     */
    public void setReferenceType(Number value) {
        setAttributeInternal(REFERENCETYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getVbookSubject() {
        return (RowIterator)getAttributeInternal(VBOOKSUBJECT);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSeeAlsoSubject() {
        return (RowIterator)getAttributeInternal(SEEALSOSUBJECT);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getVbookSubject1() {
        return (RowIterator)getAttributeInternal(VBOOKSUBJECT1);
    }


    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public SeeAlsoSubjectImpl getSeeAlsoSubject1() {
        return (SeeAlsoSubjectImpl)getAttributeInternal(SEEALSOSUBJECT1);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setSeeAlsoSubject1(SeeAlsoSubjectImpl value) {
        setAttributeInternal(SEEALSOSUBJECT1, value);
    }


    /**
     * @return the associated entity SeeSubjectImpl.
     */
    public SeeSubjectImpl getSeeSubject() {
        return (SeeSubjectImpl)getAttributeInternal(SEESUBJECT);
    }

    /**
     * Sets <code>value</code> as the associated entity SeeSubjectImpl.
     */
    public void setSeeSubject(SeeSubjectImpl value) {
        setAttributeInternal(SEESUBJECT, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSeeSubject1() {
        return (RowIterator)getAttributeInternal(SEESUBJECT1);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getVirtualBook() {
        return (RowIterator)getAttributeInternal(VIRTUALBOOK);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DummyVO1.
     */
    public RowSet getDummyVO1() {
        return (RowSet)getAttributeInternal(DUMMYVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MessageVO1.
     */
    public RowSet getMessageVO1() {
        return (RowSet)getAttributeInternal(MESSAGEVO1);
    }


    /**
     * @param labcol key constituent
     * @param artId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number labcol, DBSequence artId) {
        return new Key(new Object[]{labcol, artId});
    }

    /**
     * Sets <code>value</code> as the associated entity SeeSubjectImpl.
     */
    public void setSeeSubject1(SeeSubjectImpl value) {
        setAttributeInternal(SEESUBJECT1, value);
    }


    /**
     * @return the associated entity SeeAlsoSubjectImpl.
     */
    public SeeAlsoSubjectImpl getSeeAlsoSubject3() {
        return (SeeAlsoSubjectImpl)getAttributeInternal(SEEALSOSUBJECT3);
    }

    /**
     * Sets <code>value</code> as the associated entity SeeAlsoSubjectImpl.
     */
    public void setSeeAlsoSubject3(SeeAlsoSubjectImpl value) {
        setAttributeInternal(SEEALSOSUBJECT3, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSeeAlsoSubject2() {
        return (RowIterator)getAttributeInternal(SEEALSOSUBJECT2);
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
      
         super.create(attributeList);
        
       setLabcol((Number)getDBTransaction().getSession().getUserData().get("labcolno"));
     }
  @Override
  protected void doDML(int i, TransactionEvent transactionEvent) {
    try{
 if(i==DML_INSERT || i==DML_UPDATE) {
   setSubject(ParsiUtil.clearString(getSubject()));
   if(getSubject()==null) {
     throw new ParsiException((String)getMessageVO1().findByKey(new Key(new Object[] { "ent_subj".toUpperCase() }),
                              -1)[0].getAttribute("Message"));
   }
 }
   
      if(i==DML_INSERT) {
          if(chkDup()) {
            throw new ParsiException((String)getMessageVO1().findByKey(new Key(new Object[] { "dup_subj".toUpperCase() }),
                                     -1)[0].getAttribute("Message"));
          }
        SequenceImpl si = new SequenceImpl("LIBRARY.SEQ_SUBJECT_ART_ID",getDBTransaction());   
        setArtId(new DBSequence( si.getSequenceNumber()));
       
      }else if(i==DML_UPDATE) {
          if(!ParsiUtil.StNVL(getSubject(), "").equalsIgnoreCase(ParsiUtil.StNVL((String)getPostedAttribute(SUBJECT),"")))
          {
        if(chkDup()) {
          throw new ParsiException((String)getMessageVO1().findByKey(new Key(new Object[] { "dup_subj".toUpperCase() }),
                                   -1)[0].getAttribute("Message"));
        }
          }
      }
      super.doDML(i, transactionEvent);
    } catch (Exception e) {
      if(e instanceof ParsiException)
          throw new JboException(((ParsiException)e).getMessage());
      else
      throw new JboException("خطا در ذخیره کردن رکورد موضوع");
    }
  }
public boolean chkDup() {
  DummyVOImpl dummy = (DummyVOImpl)getDummyVO1().getViewObject();
  dummy.setQuery("SELECT art_id  FROM SUBJECT WHERE UPPER(SUBJECT)='"+ParsiUtil.StNVL(getSubject(), "").toUpperCase()+"' and labcol="+getDBTransaction().getSession().getUserData().get("labcolno"));
  dummy.executeQuery();
  return dummy.hasNext();
}
    
}
