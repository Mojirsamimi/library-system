package org.parsisys.tehranuniversity.library.model.eo;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 23 16:41:27 GMT+03:30 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MemberImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Labcol {
            public Object get(MemberImpl obj) {
                return obj.getLabcol();
            }

            public void put(MemberImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        ArtId {
            public Object get(MemberImpl obj) {
                return obj.getArtId();
            }

            public void put(MemberImpl obj, Object value) {
                obj.setArtId((Number)value);
            }
        }
        ,
        Description {
            public Object get(MemberImpl obj) {
                return obj.getDescription();
            }

            public void put(MemberImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        MemberExtentionHistory {
            public Object get(MemberImpl obj) {
                return obj.getMemberExtentionHistory();
            }

            public void put(MemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Loan {
            public Object get(MemberImpl obj) {
                return obj.getLoan();
            }

            public void put(MemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        InitMember {
            public Object get(MemberImpl obj) {
                return obj.getInitMember();
            }

            public void put(MemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PublicCashPenalty {
            public Object get(MemberImpl obj) {
                return obj.getPublicCashPenalty();
            }

            public void put(MemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PublicNonCashPenalty {
            public Object get(MemberImpl obj) {
                return obj.getPublicNonCashPenalty();
            }

            public void put(MemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PenaltyPayment {
            public Object get(MemberImpl obj) {
                return obj.getPenaltyPayment();
            }

            public void put(MemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        BookThesis {
            public Object get(MemberImpl obj) {
                return obj.getBookThesis();
            }

            public void put(MemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Reserve {
            public Object get(MemberImpl obj) {
                return obj.getReserve();
            }

            public void put(MemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Cashier {
            public Object get(MemberImpl obj) {
                return obj.getCashier();
            }

            public void put(MemberImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MemberImpl object);

        public abstract void put(MemberImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int MEMBEREXTENTIONHISTORY = AttributesEnum.MemberExtentionHistory.index();
    public static final int LOAN = AttributesEnum.Loan.index();
    public static final int INITMEMBER = AttributesEnum.InitMember.index();
    public static final int PUBLICCASHPENALTY = AttributesEnum.PublicCashPenalty.index();
    public static final int PUBLICNONCASHPENALTY = AttributesEnum.PublicNonCashPenalty.index();
    public static final int PENALTYPAYMENT = AttributesEnum.PenaltyPayment.index();
    public static final int BOOKTHESIS = AttributesEnum.BookThesis.index();
    public static final int RESERVE = AttributesEnum.Reserve.index();
    public static final int CASHIER = AttributesEnum.Cashier.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MemberImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("org.parsisys.tehranuniversity.library.model.eo.Member");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Labcol, using the alias name Labcol.
     * @return the Labcol
     */
    public Number getLabcol() {
        return (Number)getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Labcol.
     * @param value value to set the Labcol
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for ArtId, using the alias name ArtId.
     * @return the ArtId
     */
    public Number getArtId() {
        return (Number)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArtId.
     * @param value value to set the ArtId
     */
    public void setArtId(Number value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMemberExtentionHistory() {
        return (RowIterator)getAttributeInternal(MEMBEREXTENTIONHISTORY);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getLoan() {
        return (RowIterator)getAttributeInternal(LOAN);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getInitMember() {
        return (RowIterator)getAttributeInternal(INITMEMBER);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPublicCashPenalty() {
        return (RowIterator)getAttributeInternal(PUBLICCASHPENALTY);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPublicNonCashPenalty() {
        return (RowIterator)getAttributeInternal(PUBLICNONCASHPENALTY);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPenaltyPayment() {
        return (RowIterator)getAttributeInternal(PENALTYPAYMENT);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getBookThesis() {
        return (RowIterator)getAttributeInternal(BOOKTHESIS);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getReserve() {
        return (RowIterator)getAttributeInternal(RESERVE);
    }

    /**
     * @param labcol key constituent
     * @param artId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number labcol, Number artId) {
        return new Key(new Object[]{labcol, artId});
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getCashier() {
        return (RowIterator)getAttributeInternal(CASHIER);
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
