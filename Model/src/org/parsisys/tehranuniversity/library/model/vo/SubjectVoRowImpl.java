package org.parsisys.tehranuniversity.library.model.vo;

import fadak.base.TemplateViewRow;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import org.parsisys.tehranuniversity.library.model.eo.SubjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jan 05 00:32:37 GMT+03:30 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SubjectVoRowImpl extends TemplateViewRow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ArtId {
            public Object get(SubjectVoRowImpl obj) {
                return obj.getArtId();
            }

            public void put(SubjectVoRowImpl obj, Object value) {
                obj.setArtId((DBSequence)value);
            }
        }
        ,
        Labcol {
            public Object get(SubjectVoRowImpl obj) {
                return obj.getLabcol();
            }

            public void put(SubjectVoRowImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        ReadingOrder {
            public Object get(SubjectVoRowImpl obj) {
                return obj.getReadingOrder();
            }

            public void put(SubjectVoRowImpl obj, Object value) {
                obj.setReadingOrder((Number)value);
            }
        }
        ,
        ReferenceType {
            public Object get(SubjectVoRowImpl obj) {
                return obj.getReferenceType();
            }

            public void put(SubjectVoRowImpl obj, Object value) {
                obj.setReferenceType((Number)value);
            }
        }
        ,
        Subject1 {
            public Object get(SubjectVoRowImpl obj) {
                return obj.getSubject1();
            }

            public void put(SubjectVoRowImpl obj, Object value) {
                obj.setSubject1((String)value);
            }
        }
        ,
        SeeSubjectVo {
            public Object get(SubjectVoRowImpl obj) {
                return obj.getSeeSubjectVo();
            }

            public void put(SubjectVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SeeAlsoSubjectVO {
            public Object get(SubjectVoRowImpl obj) {
                return obj.getSeeAlsoSubjectVO();
            }

            public void put(SubjectVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VbookSubjectVO {
            public Object get(SubjectVoRowImpl obj) {
                return obj.getVbookSubjectVO();
            }

            public void put(SubjectVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        readingOrder1 {
            public Object get(SubjectVoRowImpl obj) {
                return obj.getreadingOrder1();
            }

            public void put(SubjectVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SubjectVoRowImpl object);

        public abstract void put(SubjectVoRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int READINGORDER = AttributesEnum.ReadingOrder.index();
    public static final int REFERENCETYPE = AttributesEnum.ReferenceType.index();
    public static final int SUBJECT1 = AttributesEnum.Subject1.index();
    public static final int SEESUBJECTVO = AttributesEnum.SeeSubjectVo.index();
    public static final int SEEALSOSUBJECTVO = AttributesEnum.SeeAlsoSubjectVO.index();
    public static final int VBOOKSUBJECTVO = AttributesEnum.VbookSubjectVO.index();
    public static final int READINGORDER1 = AttributesEnum.readingOrder1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SubjectVoRowImpl() {
    }

    /**
     * Gets Subject entity object.
     * @return the Subject
     */
    public SubjectImpl getSubject() {
        return (SubjectImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ART_ID using the alias name ArtId.
     * @return the ART_ID
     */
    public DBSequence getArtId() {
        return (DBSequence)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ART_ID using the alias name ArtId.
     * @param value value to set the ART_ID
     */
    public void setArtId(DBSequence value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for LABCOL using the alias name Labcol.
     * @return the LABCOL
     */
    public Number getLabcol() {
        return (Number) getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as attribute value for LABCOL using the alias name Labcol.
     * @param value value to set the LABCOL
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for READING_ORDER using the alias name ReadingOrder.
     * @return the READING_ORDER
     */
    public Number getReadingOrder() {
        return (Number) getAttributeInternal(READINGORDER);
    }

    /**
     * Sets <code>value</code> as attribute value for READING_ORDER using the alias name ReadingOrder.
     * @param value value to set the READING_ORDER
     */
    public void setReadingOrder(Number value) {
        setAttributeInternal(READINGORDER, value);
    }

    /**
     * Gets the attribute value for REFERENCE_TYPE using the alias name ReferenceType.
     * @return the REFERENCE_TYPE
     */
    public Number getReferenceType() {
        return (Number) getAttributeInternal(REFERENCETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for REFERENCE_TYPE using the alias name ReferenceType.
     * @param value value to set the REFERENCE_TYPE
     */
    public void setReferenceType(Number value) {
        setAttributeInternal(REFERENCETYPE, value);
    }

    /**
     * Gets the attribute value for SUBJECT using the alias name Subject1.
     * @return the SUBJECT
     */
    public String getSubject1() {
        return (String) getAttributeInternal(SUBJECT1);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBJECT using the alias name Subject1.
     * @param value value to set the SUBJECT
     */
    public void setSubject1(String value) {
        setAttributeInternal(SUBJECT1, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link SeeSubjectVo.
     */
    public oracle.jbo.Row getSeeSubjectVo() {
        return (oracle.jbo.Row) getAttributeInternal(SEESUBJECTVO);
    }

    /**
     * Sets the master-detail link SeeSubjectVo between this object and <code>value</code>.
     */
    public void setSeeSubjectVo(oracle.jbo.Row value) {
        setAttributeInternal(SEESUBJECTVO, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link SeeAlsoSubjectVO.
     */
    public oracle.jbo.Row getSeeAlsoSubjectVO() {
        return (oracle.jbo.Row) getAttributeInternal(SEEALSOSUBJECTVO);
    }

    /**
     * Sets the master-detail link SeeAlsoSubjectVO between this object and <code>value</code>.
     */
    public void setSeeAlsoSubjectVO(oracle.jbo.Row value) {
        setAttributeInternal(SEEALSOSUBJECTVO, value);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link VbookSubjectVO.
     */
    public RowIterator getVbookSubjectVO() {
        return (RowIterator)getAttributeInternal(VBOOKSUBJECTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> readingOrder1.
     */
    public RowSet getreadingOrder1() {
        return (RowSet)getAttributeInternal(READINGORDER1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
