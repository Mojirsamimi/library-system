package org.parsisys.tehranuniversity.library.model.vo;

import fadak.base.TemplateViewRow;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;

import org.parsisys.tehranuniversity.library.model.eo.OtherTitleImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 16 16:53:25 GST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OtherTitleVORowImpl extends TemplateViewRow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        OtherTitle1 {
            public Object get(OtherTitleVORowImpl obj) {
                return obj.getOtherTitle1();
            }

            public void put(OtherTitleVORowImpl obj, Object value) {
                obj.setOtherTitle1((String)value);
            }
        }
        ,
        Printable {
            public Object get(OtherTitleVORowImpl obj) {
                return obj.getPrintable();
            }

            public void put(OtherTitleVORowImpl obj, Object value) {
                obj.setPrintable((Number)value);
            }
        }
        ,
        TitleKind {
            public Object get(OtherTitleVORowImpl obj) {
                return obj.getTitleKind();
            }

            public void put(OtherTitleVORowImpl obj, Object value) {
                obj.setTitleKind((Number)value);
            }
        }
        ,
        Labcol {
            public Object get(OtherTitleVORowImpl obj) {
                return obj.getLabcol();
            }

            public void put(OtherTitleVORowImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        VbookArtId {
            public Object get(OtherTitleVORowImpl obj) {
                return obj.getVbookArtId();
            }

            public void put(OtherTitleVORowImpl obj, Object value) {
                obj.setVbookArtId((Number)value);
            }
        }
        ,
        OrderNo {
            public Object get(OtherTitleVORowImpl obj) {
                return obj.getOrderNo();
            }

            public void put(OtherTitleVORowImpl obj, Object value) {
                obj.setOrderNo((Number)value);
            }
        }
        ,
        printBoolean {
            public Object get(OtherTitleVORowImpl obj) {
                return obj.getprintBoolean();
            }

            public void put(OtherTitleVORowImpl obj, Object value) {
                obj.setprintBoolean((Boolean)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(OtherTitleVORowImpl object);

        public abstract void put(OtherTitleVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int OTHERTITLE1 = AttributesEnum.OtherTitle1.index();
    public static final int PRINTABLE = AttributesEnum.Printable.index();
    public static final int TITLEKIND = AttributesEnum.TitleKind.index();
    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int VBOOKARTID = AttributesEnum.VbookArtId.index();
    public static final int ORDERNO = AttributesEnum.OrderNo.index();
    public static final int PRINTBOOLEAN = AttributesEnum.printBoolean.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OtherTitleVORowImpl() {
    }

    /**
     * Gets OtherTitle entity object.
     * @return the OtherTitle
     */
    public OtherTitleImpl getOtherTitle() {
        return (OtherTitleImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for OTHER_TITLE using the alias name OtherTitle1.
     * @return the OTHER_TITLE
     */
    public String getOtherTitle1() {
        return (String) getAttributeInternal(OTHERTITLE1);
    }

    /**
     * Sets <code>value</code> as attribute value for OTHER_TITLE using the alias name OtherTitle1.
     * @param value value to set the OTHER_TITLE
     */
    public void setOtherTitle1(String value) {
        setAttributeInternal(OTHERTITLE1, value);
    }

    /**
     * Gets the attribute value for PRINTABLE using the alias name Printable.
     * @return the PRINTABLE
     */
    public Number getPrintable() {
        return (Number) getAttributeInternal(PRINTABLE);
    }

    /**
     * Sets <code>value</code> as attribute value for PRINTABLE using the alias name Printable.
     * @param value value to set the PRINTABLE
     */
    public void setPrintable(Number value) {
        setAttributeInternal(PRINTABLE, value);
    }

    /**
     * Gets the attribute value for TITLE_KIND using the alias name TitleKind.
     * @return the TITLE_KIND
     */
    public Number getTitleKind() {
        return (Number) getAttributeInternal(TITLEKIND);
    }

    /**
     * Sets <code>value</code> as attribute value for TITLE_KIND using the alias name TitleKind.
     * @param value value to set the TITLE_KIND
     */
    public void setTitleKind(Number value) {
        setAttributeInternal(TITLEKIND, value);
    }

    /**
     * Gets the attribute value for LABCOL using the alias name Labcol.
     * @return the LABCOL
     */
    public Number getLabcol() {
        return (Number) getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as attribute value for LABCOL using the alias name Labcol.
     * @param value value to set the LABCOL
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for VBOOK_ART_ID using the alias name VbookArtId.
     * @return the VBOOK_ART_ID
     */
    public Number getVbookArtId() {
        return (Number) getAttributeInternal(VBOOKARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for VBOOK_ART_ID using the alias name VbookArtId.
     * @param value value to set the VBOOK_ART_ID
     */
    public void setVbookArtId(Number value) {
        setAttributeInternal(VBOOKARTID, value);
    }

    /**
     * Gets the attribute value for ORDER_NO using the alias name OrderNo.
     * @return the ORDER_NO
     */
    public Number getOrderNo() {
        return (Number) getAttributeInternal(ORDERNO);
    }

    /**
     * Sets <code>value</code> as attribute value for ORDER_NO using the alias name OrderNo.
     * @param value value to set the ORDER_NO
     */
    public void setOrderNo(Number value) {
        setAttributeInternal(ORDERNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute printBoolean.
     * @return the printBoolean
     */
    public Boolean getprintBoolean() {
      if(getPrintable()==null  || getPrintable().equals(new Number(0))){
        return Boolean.FALSE;
      }
      return Boolean.TRUE;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute printBoolean.
     * @param value value to set the  printBoolean
     */
    public void setprintBoolean(Boolean value) {
      setAttributeInternal(PRINTBOOLEAN, value);
      if(value==null || value.equals(Boolean.FALSE))
      setPrintable(new Number(0));
      else
      setPrintable(new Number(1));
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
