package org.parsisys.tehranuniversity.library.model.vo;

import oracle.jbo.Row;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 07 10:26:54 GMT+04:00 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class IntroductionLetterVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ArtId {
            public Object get(IntroductionLetterVORowImpl obj) {
                return obj.getArtId();
            }

            public void put(IntroductionLetterVORowImpl obj, Object value) {
                obj.setArtId((DBSequence)value);
            }
        }
        ,
        CancelDate {
            public Object get(IntroductionLetterVORowImpl obj) {
                return obj.getCancelDate();
            }

            public void put(IntroductionLetterVORowImpl obj, Object value) {
                obj.setCancelDate((Number)value);
            }
        }
        ,
        CancellationUser {
            public Object get(IntroductionLetterVORowImpl obj) {
                return obj.getCancellationUser();
            }

            public void put(IntroductionLetterVORowImpl obj, Object value) {
                obj.setCancellationUser((String)value);
            }
        }
        ,
        Description {
            public Object get(IntroductionLetterVORowImpl obj) {
                return obj.getDescription();
            }

            public void put(IntroductionLetterVORowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        GoalLibrary {
            public Object get(IntroductionLetterVORowImpl obj) {
                return obj.getGoalLibrary();
            }

            public void put(IntroductionLetterVORowImpl obj, Object value) {
                obj.setGoalLibrary((String)value);
            }
        }
        ,
        IntroduceDate {
            public Object get(IntroductionLetterVORowImpl obj) {
                return obj.getIntroduceDate();
            }

            public void put(IntroductionLetterVORowImpl obj, Object value) {
                obj.setIntroduceDate((Number)value);
            }
        }
        ,
        IssuanceUser {
            public Object get(IntroductionLetterVORowImpl obj) {
                return obj.getIssuanceUser();
            }

            public void put(IntroductionLetterVORowImpl obj, Object value) {
                obj.setIssuanceUser((String)value);
            }
        }
        ,
        Labcol {
            public Object get(IntroductionLetterVORowImpl obj) {
                return obj.getLabcol();
            }

            public void put(IntroductionLetterVORowImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        MemArtId {
            public Object get(IntroductionLetterVORowImpl obj) {
                return obj.getMemArtId();
            }

            public void put(IntroductionLetterVORowImpl obj, Object value) {
                obj.setMemArtId((Number)value);
            }
        }
        ,
        Status {
            public Object get(IntroductionLetterVORowImpl obj) {
                return obj.getStatus();
            }

            public void put(IntroductionLetterVORowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        InitMemberVO {
            public Object get(IntroductionLetterVORowImpl obj) {
                return obj.getInitMemberVO();
            }

            public void put(IntroductionLetterVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(IntroductionLetterVORowImpl object);

        public abstract void put(IntroductionLetterVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int CANCELDATE = AttributesEnum.CancelDate.index();
    public static final int CANCELLATIONUSER = AttributesEnum.CancellationUser.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int GOALLIBRARY = AttributesEnum.GoalLibrary.index();
    public static final int INTRODUCEDATE = AttributesEnum.IntroduceDate.index();
    public static final int ISSUANCEUSER = AttributesEnum.IssuanceUser.index();
    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int MEMARTID = AttributesEnum.MemArtId.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int INITMEMBERVO = AttributesEnum.InitMemberVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public IntroductionLetterVORowImpl() {
    }

    /**
     * Gets IntroductionLetter entity object.
     * @return the IntroductionLetter
     */
    public EntityImpl getIntroductionLetter() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ART_ID using the alias name ArtId.
     * @return the ART_ID
     */
    public DBSequence getArtId() {
        return (DBSequence)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ART_ID using the alias name ArtId.
     * @param value value to set the ART_ID
     */
    public void setArtId(DBSequence value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for CANCEL_DATE using the alias name CancelDate.
     * @return the CANCEL_DATE
     */
    public Number getCancelDate() {
        return (Number) getAttributeInternal(CANCELDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CANCEL_DATE using the alias name CancelDate.
     * @param value value to set the CANCEL_DATE
     */
    public void setCancelDate(Number value) {
        setAttributeInternal(CANCELDATE, value);
    }

    /**
     * Gets the attribute value for CANCELLATION_USER using the alias name CancellationUser.
     * @return the CANCELLATION_USER
     */
    public String getCancellationUser() {
        return (String) getAttributeInternal(CANCELLATIONUSER);
    }

    /**
     * Sets <code>value</code> as attribute value for CANCELLATION_USER using the alias name CancellationUser.
     * @param value value to set the CANCELLATION_USER
     */
    public void setCancellationUser(String value) {
        setAttributeInternal(CANCELLATIONUSER, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for GOAL_LIBRARY using the alias name GoalLibrary.
     * @return the GOAL_LIBRARY
     */
    public String getGoalLibrary() {
        return (String) getAttributeInternal(GOALLIBRARY);
    }

    /**
     * Sets <code>value</code> as attribute value for GOAL_LIBRARY using the alias name GoalLibrary.
     * @param value value to set the GOAL_LIBRARY
     */
    public void setGoalLibrary(String value) {
        setAttributeInternal(GOALLIBRARY, value);
    }

    /**
     * Gets the attribute value for INTRODUCE_DATE using the alias name IntroduceDate.
     * @return the INTRODUCE_DATE
     */
    public Number getIntroduceDate() {
        return (Number) getAttributeInternal(INTRODUCEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for INTRODUCE_DATE using the alias name IntroduceDate.
     * @param value value to set the INTRODUCE_DATE
     */
    public void setIntroduceDate(Number value) {
        setAttributeInternal(INTRODUCEDATE, value);
    }

    /**
     * Gets the attribute value for ISSUANCE_USER using the alias name IssuanceUser.
     * @return the ISSUANCE_USER
     */
    public String getIssuanceUser() {
        return (String) getAttributeInternal(ISSUANCEUSER);
    }

    /**
     * Sets <code>value</code> as attribute value for ISSUANCE_USER using the alias name IssuanceUser.
     * @param value value to set the ISSUANCE_USER
     */
    public void setIssuanceUser(String value) {
        setAttributeInternal(ISSUANCEUSER, value);
    }

    /**
     * Gets the attribute value for LABCOL using the alias name Labcol.
     * @return the LABCOL
     */
    public Number getLabcol() {
        return (Number) getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as attribute value for LABCOL using the alias name Labcol.
     * @param value value to set the LABCOL
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for MEM_ART_ID using the alias name MemArtId.
     * @return the MEM_ART_ID
     */
    public Number getMemArtId() {
        return (Number) getAttributeInternal(MEMARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for MEM_ART_ID using the alias name MemArtId.
     * @param value value to set the MEM_ART_ID
     */
    public void setMemArtId(Number value) {
        setAttributeInternal(MEMARTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
     public String getStatus() {
          String status=(String) getAttributeInternal(STATUS);
        
          if(status==null)
          {
          if(getCancellationUser()!=null && getCancelDate()!=null)
          {
              status="تسویه";
              setStatus(status);
          }
          else {
            status="فعال";
            setStatus(status);
          }
          }
              System.out.println(status);
         return status;
         }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link InitMemberVO.
     */
    public Row getInitMemberVO() {
        return (Row)getAttributeInternal(INITMEMBERVO);
    }

    /**
     * Sets the master-detail link InitMemberVO between this object and <code>value</code>.
     */
    public void setInitMemberVO(Row value) {
        setAttributeInternal(INITMEMBERVO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
