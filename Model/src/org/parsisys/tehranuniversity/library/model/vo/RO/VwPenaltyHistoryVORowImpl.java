package org.parsisys.tehranuniversity.library.model.vo.RO;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Feb 20 15:45:10 GMT+04:00 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VwPenaltyHistoryVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        MemArtId {
            public Object get(VwPenaltyHistoryVORowImpl obj) {
                return obj.getMemArtId();
            }

            public void put(VwPenaltyHistoryVORowImpl obj, Object value) {
                obj.setMemArtId((Number)value);
            }
        }
        ,
        RecType {
            public Object get(VwPenaltyHistoryVORowImpl obj) {
                return obj.getRecType();
            }

            public void put(VwPenaltyHistoryVORowImpl obj, Object value) {
                obj.setRecType((Number)value);
            }
        }
        ,
        DayDate {
            public Object get(VwPenaltyHistoryVORowImpl obj) {
                return obj.getDayDate();
            }

            public void put(VwPenaltyHistoryVORowImpl obj, Object value) {
                obj.setDayDate((Number)value);
            }
        }
        ,
        Value {
            public Object get(VwPenaltyHistoryVORowImpl obj) {
                return obj.getValue();
            }

            public void put(VwPenaltyHistoryVORowImpl obj, Object value) {
                obj.setValue((Number)value);
            }
        }
        ,
        Description {
            public Object get(VwPenaltyHistoryVORowImpl obj) {
                return obj.getDescription();
            }

            public void put(VwPenaltyHistoryVORowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        UserName {
            public Object get(VwPenaltyHistoryVORowImpl obj) {
                return obj.getUserName();
            }

            public void put(VwPenaltyHistoryVORowImpl obj, Object value) {
                obj.setUserName((String)value);
            }
        }
        ,
        RecTypeText {
            public Object get(VwPenaltyHistoryVORowImpl obj) {
                return obj.getRecTypeText();
            }

            public void put(VwPenaltyHistoryVORowImpl obj, Object value) {
                obj.setRecTypeText((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(VwPenaltyHistoryVORowImpl object);

        public abstract void put(VwPenaltyHistoryVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int MEMARTID = AttributesEnum.MemArtId.index();
    public static final int RECTYPE = AttributesEnum.RecType.index();
    public static final int DAYDATE = AttributesEnum.DayDate.index();
    public static final int VALUE = AttributesEnum.Value.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int RECTYPETEXT = AttributesEnum.RecTypeText.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VwPenaltyHistoryVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute MemArtId.
     * @return the MemArtId
     */
    public Number getMemArtId() {
        return (Number) getAttributeInternal(MEMARTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MemArtId.
     * @param value value to set the  MemArtId
     */
    public void setMemArtId(Number value) {
        setAttributeInternal(MEMARTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RecType.
     * @return the RecType
     */
    public Number getRecType() {
        return (Number) getAttributeInternal(RECTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RecType.
     * @param value value to set the  RecType
     */
    public void setRecType(Number value) {
        setAttributeInternal(RECTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DayDate.
     * @return the DayDate
     */
    public Number getDayDate() {
        return (Number) getAttributeInternal(DAYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DayDate.
     * @param value value to set the  DayDate
     */
    public void setDayDate(Number value) {
        setAttributeInternal(DAYDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Value.
     * @return the Value
     */
    public Number getValue() {
        return (Number) getAttributeInternal(VALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Value.
     * @param value value to set the  Value
     */
    public void setValue(Number value) {
        setAttributeInternal(VALUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Description.
     * @return the Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Description.
     * @param value value to set the  Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UserName.
     * @return the UserName
     */
    public String getUserName() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UserName.
     * @param value value to set the  UserName
     */
    public void setUserName(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RecTypeText.
     * @return the RecTypeText
     */
    public String getRecTypeText() {
         String recTypeText=(String) getAttributeInternal(RECTYPETEXT);
         if(recTypeText==null){
             
             int recType=getRecType().intValue();
               if (recType==1 )
                   recTypeText=("جریمه تاخیر");
               if (recType==2)
                 recTypeText=("جریمه گمشده");

                 if (recType==3 )
                   recTypeText=("جریمه عام");

               if (recType==4 )
                 recTypeText=("پرداخت");
               
             
             }
         
         //setRecTypeText(recTypeText);
      return recTypeText;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RecTypeText.
     * @param value value to set the  RecTypeText
     */
    public void setRecTypeText(String value) {
        setAttributeInternal(RECTYPETEXT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
