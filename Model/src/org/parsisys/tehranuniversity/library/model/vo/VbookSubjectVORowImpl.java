package org.parsisys.tehranuniversity.library.model.vo;

import fadak.base.TemplateViewRow;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;

import org.parsisys.tehranuniversity.library.model.eo.FloatSubjectImpl;
import org.parsisys.tehranuniversity.library.model.eo.SubjectImpl;
import org.parsisys.tehranuniversity.library.model.eo.VbookSubjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 16 16:32:46 GST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VbookSubjectVORowImpl extends TemplateViewRow {


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SubjArtId {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getSubjArtId();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setSubjArtId((Number)value);
            }
        }
        ,
        Labcol {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getLabcol();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        VbookArtId {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getVbookArtId();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setVbookArtId((Number)value);
            }
        }
        ,
        FloatSubjArtId {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getFloatSubjArtId();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setFloatSubjArtId((Number)value);
            }
        }
        ,
        OrderNo {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getOrderNo();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setOrderNo((Number)value);
            }
        }
        ,
        Printable {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getPrintable();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setPrintable((Number)value);
            }
        }
        ,
        Subject1 {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getSubject1();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setSubject1((String)value);
            }
        }
        ,
        Labcol1 {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getLabcol1();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setLabcol1((Number)value);
            }
        }
        ,
        ArtId {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getArtId();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setArtId((DBSequence)value);
            }
        }
        ,
        FloatSubject2 {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getFloatSubject2();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setFloatSubject2((String)value);
            }
        }
        ,
        ArtId1 {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getArtId1();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setArtId1((Number)value);
            }
        }
        ,
        Labcol2 {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getLabcol2();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setLabcol2((Number)value);
            }
        }
        ,
        printableBoolean {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getprintableBoolean();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setprintableBoolean((Boolean)value);
            }
        }
        ,
        SubjectText {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getSubjectText();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setSubjectText((String)value);
            }
        }
        ,
        SubjectVo {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getSubjectVo();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Reading_OrderVO {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getReading_OrderVO();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VbookSubjectVO_VirtualBookVOLookup {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getVbookSubjectVO_VirtualBookVOLookup();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CheckBox01View1 {
            public Object get(VbookSubjectVORowImpl obj) {
                return obj.getCheckBox01View1();
            }

            public void put(VbookSubjectVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(VbookSubjectVORowImpl object);

        public abstract void put(VbookSubjectVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SUBJARTID = AttributesEnum.SubjArtId.index();
    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int VBOOKARTID = AttributesEnum.VbookArtId.index();
    public static final int FLOATSUBJARTID = AttributesEnum.FloatSubjArtId.index();
    public static final int ORDERNO = AttributesEnum.OrderNo.index();
    public static final int PRINTABLE = AttributesEnum.Printable.index();
    public static final int SUBJECT1 = AttributesEnum.Subject1.index();
    public static final int LABCOL1 = AttributesEnum.Labcol1.index();
    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int FLOATSUBJECT2 = AttributesEnum.FloatSubject2.index();
    public static final int ARTID1 = AttributesEnum.ArtId1.index();
    public static final int LABCOL2 = AttributesEnum.Labcol2.index();
    public static final int PRINTABLEBOOLEAN = AttributesEnum.printableBoolean.index();
    public static final int SUBJECTTEXT = AttributesEnum.SubjectText.index();
    public static final int SUBJECTVO = AttributesEnum.SubjectVo.index();
    public static final int READING_ORDERVO = AttributesEnum.Reading_OrderVO.index();
    public static final int VBOOKSUBJECTVO_VIRTUALBOOKVOLOOKUP = AttributesEnum.VbookSubjectVO_VirtualBookVOLookup.index();
    public static final int CHECKBOX01VIEW1 = AttributesEnum.CheckBox01View1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VbookSubjectVORowImpl() {
    }

    /**
     * Gets VbookSubject entity object.
     * @return the VbookSubject
     */
    public VbookSubjectImpl getVbookSubject() {
        return (VbookSubjectImpl)getEntity(0);
    }

    /**
     * Gets Subject entity object.
     * @return the Subject
     */
    public SubjectImpl getSubject() {
        return (SubjectImpl)getEntity(1);
    }

    /**
     * Gets FloatSubject entity object.
     * @return the FloatSubject
     */
    public FloatSubjectImpl getFloatSubject() {
        return (FloatSubjectImpl)getEntity(2);
    }

    /**
     * Gets the attribute value for SUBJ_ART_ID using the alias name SubjArtId.
     * @return the SUBJ_ART_ID
     */
    public Number getSubjArtId() {
        return (Number) getAttributeInternal(SUBJARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBJ_ART_ID using the alias name SubjArtId.
     * @param value value to set the SUBJ_ART_ID
     */
    public void setSubjArtId(Number value) {
        setAttributeInternal(SUBJARTID, value);
    }

    /**
     * Gets the attribute value for LABCOL using the alias name Labcol.
     * @return the LABCOL
     */
    public Number getLabcol() {
        return (Number) getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as attribute value for LABCOL using the alias name Labcol.
     * @param value value to set the LABCOL
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for VBOOK_ART_ID using the alias name VbookArtId.
     * @return the VBOOK_ART_ID
     */
    public Number getVbookArtId() {
        return (Number) getAttributeInternal(VBOOKARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for VBOOK_ART_ID using the alias name VbookArtId.
     * @param value value to set the VBOOK_ART_ID
     */
    public void setVbookArtId(Number value) {
        setAttributeInternal(VBOOKARTID, value);
    }

    /**
     * Gets the attribute value for PRINTABLE using the alias name Printable.
     * @return the PRINTABLE
     */
    public Number getPrintable() {
        return (Number) getAttributeInternal(PRINTABLE);
    }

    /**
     * Sets <code>value</code> as attribute value for PRINTABLE using the alias name Printable.
     * @param value value to set the PRINTABLE
     */
    public void setPrintable(Number value) {
        setAttributeInternal(PRINTABLE, value);
    }

    /**
     * Gets the attribute value for SUBJECT using the alias name Subject1.
     * @return the SUBJECT
     */
    public String getSubject1() {
        return (String) getAttributeInternal(SUBJECT1);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBJECT using the alias name Subject1.
     * @param value value to set the SUBJECT
     */
    public void setSubject1(String value) {
        setAttributeInternal(SUBJECT1, value);
    }

    /**
     * Gets the attribute value for LABCOL using the alias name Labcol1.
     * @return the LABCOL
     */
    public Number getLabcol1() {
        return (Number) getAttributeInternal(LABCOL1);
    }

    /**
     * Sets <code>value</code> as attribute value for LABCOL using the alias name Labcol1.
     * @param value value to set the LABCOL
     */
    public void setLabcol1(Number value) {
        setAttributeInternal(LABCOL1, value);
    }

    /**
     * Gets the attribute value for ART_ID using the alias name ArtId.
     * @return the ART_ID
     */
    public DBSequence getArtId() {
        return (DBSequence)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ART_ID using the alias name ArtId.
     * @param value value to set the ART_ID
     */
    public void setArtId(DBSequence value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for SUBJECT using the alias name FloatSubject2.
     * @return the SUBJECT
     */
    public String getFloatSubject2() {
        return (String) getAttributeInternal(FLOATSUBJECT2);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBJECT using the alias name FloatSubject2.
     * @param value value to set the SUBJECT
     */
    public void setFloatSubject2(String value) {
        setAttributeInternal(FLOATSUBJECT2, value);
    }

    /**
     * Gets the attribute value for ART_ID using the alias name ArtId1.
     * @return the ART_ID
     */
    public Number getArtId1() {
        return (Number) getAttributeInternal(ARTID1);
    }

    /**
     * Sets <code>value</code> as attribute value for ART_ID using the alias name ArtId1.
     * @param value value to set the ART_ID
     */
    public void setArtId1(Number value) {
        setAttributeInternal(ARTID1, value);
    }

    /**
     * Gets the attribute value for FLOAT_SUBJ_ART_ID using the alias name FloatSubjArtId.
     * @return the FLOAT_SUBJ_ART_ID
     */
    public Number getFloatSubjArtId() {
        return (Number) getAttributeInternal(FLOATSUBJARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for FLOAT_SUBJ_ART_ID using the alias name FloatSubjArtId.
     * @param value value to set the FLOAT_SUBJ_ART_ID
     */
    public void setFloatSubjArtId(Number value) {
        setAttributeInternal(FLOATSUBJARTID, value);
    }

    /**
     * Gets the attribute value for LABCOL using the alias name Labcol2.
     * @return the LABCOL
     */
    public Number getLabcol2() {
        return (Number) getAttributeInternal(LABCOL2);
    }

    /**
     * Sets <code>value</code> as attribute value for LABCOL using the alias name Labcol2.
     * @param value value to set the LABCOL
     */
    public void setLabcol2(Number value) {
        setAttributeInternal(LABCOL2, value);
    }

    /**
     * Gets the attribute value for ORDER_NO using the alias name OrderNo.
     * @return the ORDER_NO
     */
    public Number getOrderNo() {
        return (Number) getAttributeInternal(ORDERNO);
    }

    /**
     * Sets <code>value</code> as attribute value for ORDER_NO using the alias name OrderNo.
     * @param value value to set the ORDER_NO
     */
    public void setOrderNo(Number value) {
        setAttributeInternal(ORDERNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute printableBoolean.
     * @return the printableBoolean
     */
    public Boolean getprintableBoolean() {
        //return (Boolean) getAttributeInternal(PRINTABLEBOOLEAN);
        if(getPrintable()==null  || getPrintable().equals(new Number(0))){
          return Boolean.FALSE;
        }
        return Boolean.TRUE;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute printableBoolean.
     * @param value value to set the  printableBoolean
     */
    public void setprintableBoolean(Boolean value) {
      setAttributeInternal(PRINTABLEBOOLEAN, value);
      if(value==null || value.equals(Boolean.FALSE))
      setPrintable(new Number(0));
      else
      setPrintable(new Number(1));
    }

    /**
     * Gets the attribute value for the calculated attribute SubjectText.
     * @return the SubjectText
     */
    public String getSubjectText() {
       // return (String) getAttributeInternal(SUBJECTTEXT);
        Row r= getSubjectVo();
        if(r==null || r.getAttribute("Subject1")==null)
            return null;
            return  (String)r.getAttribute("Subject1");
        
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SubjectText.
     * @param value value to set the  SubjectText
     */
    public void setSubjectText(String value) {
        setAttributeInternal(SUBJECTTEXT, value);
    }


    /**
     * Gets the associated <code>Row</code> using master-detail link SubjectVo.
     */
    public oracle.jbo.Row getSubjectVo() {
        return (oracle.jbo.Row) getAttributeInternal(SUBJECTVO);
    }

    /**
     * Sets the master-detail link SubjectVo between this object and <code>value</code>.
     */
    public void setSubjectVo(oracle.jbo.Row value) {
        setAttributeInternal(SUBJECTVO, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Reading_OrderVO.
     */
    public RowSet getReading_OrderVO() {
        return (RowSet)getAttributeInternal(READING_ORDERVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> VbookSubjectVO_VirtualBookVOLookup.
     */
    public RowSet getVbookSubjectVO_VirtualBookVOLookup() {
        return (RowSet)getAttributeInternal(VBOOKSUBJECTVO_VIRTUALBOOKVOLOOKUP);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CheckBox01View1.
     */
    public RowSet getCheckBox01View1() {
        return (RowSet)getAttributeInternal(CHECKBOX01VIEW1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


}
