package org.parsisys.tehranuniversity.library.model.vo.CommonVOs;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;

import org.parsisys.tehranuniversity.library.model.eo.CommonEOs.MenuListImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat May 19 17:57:17 GMT+04:00 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MenuListVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ArtId {
            public Object get(MenuListVORowImpl obj) {
                return obj.getArtId();
            }

            public void put(MenuListVORowImpl obj, Object value) {
                obj.setArtId((Number)value);
            }
        }
        ,
        IsLeaf {
            public Object get(MenuListVORowImpl obj) {
                return obj.getIsLeaf();
            }

            public void put(MenuListVORowImpl obj, Object value) {
                obj.setIsLeaf((Boolean)value);
            }
        }
        ,
        Name {
            public Object get(MenuListVORowImpl obj) {
                return obj.getName();
            }

            public void put(MenuListVORowImpl obj, Object value) {
                obj.setName((String)value);
            }
        }
        ,
        Page {
            public Object get(MenuListVORowImpl obj) {
                return obj.getPage();
            }

            public void put(MenuListVORowImpl obj, Object value) {
                obj.setPage((String)value);
            }
        }
        ,
        ParentId {
            public Object get(MenuListVORowImpl obj) {
                return obj.getParentId();
            }

            public void put(MenuListVORowImpl obj, Object value) {
                obj.setParentId((Number)value);
            }
        }
        ,
        SecCodePosition {
            public Object get(MenuListVORowImpl obj) {
                return obj.getSecCodePosition();
            }

            public void put(MenuListVORowImpl obj, Object value) {
                obj.setSecCodePosition((Number)value);
            }
        }
        ,
        Slct {
            public Object get(MenuListVORowImpl obj) {
                return obj.getSlct();
            }

            public void put(MenuListVORowImpl obj, Object value) {
                obj.setSlct((Boolean)value);
            }
        }
        ,
        OrderNo {
            public Object get(MenuListVORowImpl obj) {
                return obj.getOrderNo();
            }

            public void put(MenuListVORowImpl obj, Object value) {
                obj.setOrderNo((Number)value);
            }
        }
        ,
        ItemType {
            public Object get(MenuListVORowImpl obj) {
                return obj.getItemType();
            }

            public void put(MenuListVORowImpl obj, Object value) {
                obj.setItemType((String)value);
            }
        }
        ,
        MenuListVO_Parent {
            public Object get(MenuListVORowImpl obj) {
                return obj.getMenuListVO_Parent();
            }

            public void put(MenuListVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MenuListVO_Children {
            public Object get(MenuListVORowImpl obj) {
                return obj.getMenuListVO_Children();
            }

            public void put(MenuListVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CheckBox01View1 {
            public Object get(MenuListVORowImpl obj) {
                return obj.getCheckBox01View1();
            }

            public void put(MenuListVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MenuListVORowImpl object);

        public abstract void put(MenuListVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int ISLEAF = AttributesEnum.IsLeaf.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int PAGE = AttributesEnum.Page.index();
    public static final int PARENTID = AttributesEnum.ParentId.index();
    public static final int SECCODEPOSITION = AttributesEnum.SecCodePosition.index();
    public static final int SLCT = AttributesEnum.Slct.index();
    public static final int ORDERNO = AttributesEnum.OrderNo.index();
    public static final int ITEMTYPE = AttributesEnum.ItemType.index();
    public static final int MENULISTVO_PARENT = AttributesEnum.MenuListVO_Parent.index();
    public static final int MENULISTVO_CHILDREN = AttributesEnum.MenuListVO_Children.index();
    public static final int CHECKBOX01VIEW1 = AttributesEnum.CheckBox01View1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MenuListVORowImpl() {
    }

    /**
     * Gets MenuList entity object.
     * @return the MenuList
     */
    public MenuListImpl getMenuList() {
        return (MenuListImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ART_ID using the alias name ArtId.
     * @return the ART_ID
     */
    public Number getArtId() {
        return (Number) getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ART_ID using the alias name ArtId.
     * @param value value to set the ART_ID
     */
    public void setArtId(Number value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for IS_LEAF using the alias name IsLeaf.
     * @return the IS_LEAF
     */
    public Boolean getIsLeaf() {
        return (Boolean) getAttributeInternal(ISLEAF);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_LEAF using the alias name IsLeaf.
     * @param value value to set the IS_LEAF
     */
    public void setIsLeaf(Boolean value) {
        setAttributeInternal(ISLEAF, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for PAGE using the alias name Page.
     * @return the PAGE
     */
    public String getPage() {
        return (String) getAttributeInternal(PAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for PAGE using the alias name Page.
     * @param value value to set the PAGE
     */
    public void setPage(String value) {
        setAttributeInternal(PAGE, value);
    }

    /**
     * Gets the attribute value for PARENT_ID using the alias name ParentId.
     * @return the PARENT_ID
     */
    public Number getParentId() {
        return (Number) getAttributeInternal(PARENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARENT_ID using the alias name ParentId.
     * @param value value to set the PARENT_ID
     */
    public void setParentId(Number value) {
        setAttributeInternal(PARENTID, value);
    }

    /**
     * Gets the attribute value for SEC_CODE_POSITION using the alias name SecCodePosition.
     * @return the SEC_CODE_POSITION
     */
    public Number getSecCodePosition() {
        return (Number) getAttributeInternal(SECCODEPOSITION);
    }

    /**
     * Sets <code>value</code> as attribute value for SEC_CODE_POSITION using the alias name SecCodePosition.
     * @param value value to set the SEC_CODE_POSITION
     */
    public void setSecCodePosition(Number value) {
        setAttributeInternal(SECCODEPOSITION, value);
    }

    /**
     * Gets the attribute value for SLCT using the alias name Slct.
     * @return the SLCT
     */
    public Boolean getSlct() {
        return (Boolean) getAttributeInternal(SLCT);
    }

    /**
     * Sets <code>value</code> as attribute value for SLCT using the alias name Slct.
     * @param value value to set the SLCT
     */
    public void setSlct(Boolean value) {
        setAttributeInternal(SLCT, value);
    }

    /**
     * Gets the attribute value for ORDER_NO using the alias name OrderNo.
     * @return the ORDER_NO
     */
    public Number getOrderNo() {
        return (Number) getAttributeInternal(ORDERNO);
    }

    /**
     * Sets <code>value</code> as attribute value for ORDER_NO using the alias name OrderNo.
     * @param value value to set the ORDER_NO
     */
    public void setOrderNo(Number value) {
        setAttributeInternal(ORDERNO, value);
    }

    /**
     * Gets the attribute value for ITEM_TYPE using the alias name ItemType.
     * @return the ITEM_TYPE
     */
    public String getItemType() {
        return (String) getAttributeInternal(ITEMTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM_TYPE using the alias name ItemType.
     * @param value value to set the ITEM_TYPE
     */
    public void setItemType(String value) {
        setAttributeInternal(ITEMTYPE, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link MenuListVO_Parent.
     */
    public Row getMenuListVO_Parent() {
        return (Row)getAttributeInternal(MENULISTVO_PARENT);
    }

    /**
     * Sets the master-detail link MenuListVO_Parent between this object and <code>value</code>.
     */
    public void setMenuListVO_Parent(Row value) {
        setAttributeInternal(MENULISTVO_PARENT, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MenuListVO_Children.
     */
    public RowIterator getMenuListVO_Children() {
        return (RowIterator)getAttributeInternal(MENULISTVO_CHILDREN);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CheckBox01View1.
     */
    public RowSet getCheckBox01View1() {
        return (RowSet)getAttributeInternal(CHECKBOX01VIEW1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
