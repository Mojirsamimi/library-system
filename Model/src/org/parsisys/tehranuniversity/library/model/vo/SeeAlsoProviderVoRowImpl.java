package org.parsisys.tehranuniversity.library.model.vo;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;

import org.parsisys.tehranuniversity.library.model.eo.ProviderImpl;
import org.parsisys.tehranuniversity.library.model.eo.SeeAlsoProviderImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 13 11:43:08 GMT+03:30 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SeeAlsoProviderVoRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Labcol {
            public Object get(SeeAlsoProviderVoRowImpl obj) {
                return obj.getLabcol();
            }

            public void put(SeeAlsoProviderVoRowImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        PrvArtId {
            public Object get(SeeAlsoProviderVoRowImpl obj) {
                return obj.getPrvArtId();
            }

            public void put(SeeAlsoProviderVoRowImpl obj, Object value) {
                obj.setPrvArtId((Number)value);
            }
        }
        ,
        PrvArtIdRelatedTo {
            public Object get(SeeAlsoProviderVoRowImpl obj) {
                return obj.getPrvArtIdRelatedTo();
            }

            public void put(SeeAlsoProviderVoRowImpl obj, Object value) {
                obj.setPrvArtIdRelatedTo((Number)value);
            }
        }
        ,
        ProviderText {
            public Object get(SeeAlsoProviderVoRowImpl obj) {
                return obj.getProviderText();
            }

            public void put(SeeAlsoProviderVoRowImpl obj, Object value) {
                obj.setProviderText((String)value);
            }
        }
        ,
        BDDateText {
            public Object get(SeeAlsoProviderVoRowImpl obj) {
                return obj.getBDDateText();
            }

            public void put(SeeAlsoProviderVoRowImpl obj, Object value) {
                obj.setBDDateText((String)value);
            }
        }
        ,
        ProviderKind {
            public Object get(SeeAlsoProviderVoRowImpl obj) {
                return obj.getProviderKind();
            }

            public void put(SeeAlsoProviderVoRowImpl obj, Object value) {
                obj.setProviderKind((Number)value);
            }
        }
        ,
        ForeignNameText {
            public Object get(SeeAlsoProviderVoRowImpl obj) {
                return obj.getForeignNameText();
            }

            public void put(SeeAlsoProviderVoRowImpl obj, Object value) {
                obj.setForeignNameText((String)value);
            }
        }
        ,
        MainSeeAlsoProvider {
            public Object get(SeeAlsoProviderVoRowImpl obj) {
                return obj.getMainSeeAlsoProvider();
            }

            public void put(SeeAlsoProviderVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProviderVO {
            public Object get(SeeAlsoProviderVoRowImpl obj) {
                return obj.getProviderVO();
            }

            public void put(SeeAlsoProviderVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProviderKindLov {
            public Object get(SeeAlsoProviderVoRowImpl obj) {
                return obj.getProviderKindLov();
            }

            public void put(SeeAlsoProviderVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SeeAlsoProviderVoRowImpl object);

        public abstract void put(SeeAlsoProviderVoRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int PRVARTID = AttributesEnum.PrvArtId.index();
    public static final int PRVARTIDRELATEDTO = AttributesEnum.PrvArtIdRelatedTo.index();
    public static final int PROVIDERTEXT = AttributesEnum.ProviderText.index();
    public static final int BDDATETEXT = AttributesEnum.BDDateText.index();
    public static final int PROVIDERKIND = AttributesEnum.ProviderKind.index();
    public static final int FOREIGNNAMETEXT = AttributesEnum.ForeignNameText.index();
    public static final int MAINSEEALSOPROVIDER = AttributesEnum.MainSeeAlsoProvider.index();
    public static final int PROVIDERVO = AttributesEnum.ProviderVO.index();
    public static final int PROVIDERKINDLOV = AttributesEnum.ProviderKindLov.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SeeAlsoProviderVoRowImpl() {
    }

    /**
     * Gets SeeAlsoProvider entity object.
     * @return the SeeAlsoProvider
     */
    public SeeAlsoProviderImpl getSeeAlsoProvider() {
        return (SeeAlsoProviderImpl)getEntity(0);
    }


    /**
     * Gets the attribute value for LABCOL using the alias name Labcol.
     * @return the LABCOL
     */
    public Number getLabcol() {
        return (Number) getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as attribute value for LABCOL using the alias name Labcol.
     * @param value value to set the LABCOL
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for PRV_ART_ID using the alias name PrvArtId.
     * @return the PRV_ART_ID
     */
    public Number getPrvArtId() {
        return (Number) getAttributeInternal(PRVARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PRV_ART_ID using the alias name PrvArtId.
     * @param value value to set the PRV_ART_ID
     */
    public void setPrvArtId(Number value) {
        setAttributeInternal(PRVARTID, value);
    }

    /**
     * Gets the attribute value for PRV_ART_ID_RELATED_TO using the alias name PrvArtIdRelatedTo.
     * @return the PRV_ART_ID_RELATED_TO
     */
    public Number getPrvArtIdRelatedTo() {
        return (Number) getAttributeInternal(PRVARTIDRELATEDTO);
    }

    /**
     * Sets <code>value</code> as attribute value for PRV_ART_ID_RELATED_TO using the alias name PrvArtIdRelatedTo.
     * @param value value to set the PRV_ART_ID_RELATED_TO
     */
    public void setPrvArtIdRelatedTo(Number value) {
        setAttributeInternal(PRVARTIDRELATEDTO, value);
    }


    /**
     * Gets the attribute value for the calculated attribute ProviderText.
     * @return the ProviderText
     */
    public String getProviderText() {
       // return (String) getAttributeInternal(PROVIDERTEXT);
        Row row= getProviderVO();
        if(row==null || row.getAttribute("Provider1")==null)
            return null;
        return (String)row.getAttribute("Provider1");
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProviderText.
     * @param value value to set the  ProviderText
     */
    public void setProviderText(String value) {
        setAttributeInternal(PROVIDERTEXT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BDDateText.
     * @return the BDDateText
     */
    public String getBDDateText() {
       // return (String) getAttributeInternal(BDDATETEXT);
       Row row= getProviderVO();
       if(row==null || row.getAttribute("BDDate")==null)
           return null;
       return (String)row.getAttribute("BDDate");
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BDDateText.
     * @param value value to set the  BDDateText
     */
    public void setBDDateText(String value) {
        setAttributeInternal(BDDATETEXT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProviderKind.
     * @return the ProviderKind
     */
    public Number getProviderKind() {
      //  return (Number) getAttributeInternal(PROVIDERKIND);
      Row row= getProviderVO();
      if(row==null || row.getAttribute("ProviderKind")==null)
          return null;
      return (Number)row.getAttribute("ProviderKind");
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProviderKind.
     * @param value value to set the  ProviderKind
     */
    public void setProviderKind(Number value) {
        setAttributeInternal(PROVIDERKIND, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ForeignNameText.
     * @return the ForeignNameText
     */
    public String getForeignNameText() {
        //return (String) getAttributeInternal(FOREIGNNAMETEXT);
        Row row= getProviderVO();
        if(row==null || row.getAttribute("ForeignName")==null)
            return null;
        return (String)row.getAttribute("ForeignName");
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ForeignNameText.
     * @param value value to set the  ForeignNameText
     */
    public void setForeignNameText(String value) {
        setAttributeInternal(FOREIGNNAMETEXT, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link MainSeeAlsoProvider.
     */
    public Row getMainSeeAlsoProvider() {
        return (Row)getAttributeInternal(MAINSEEALSOPROVIDER);
    }

    /**
     * Sets the master-detail link MainSeeAlsoProvider between this object and <code>value</code>.
     */
    public void setMainSeeAlsoProvider(Row value) {
        setAttributeInternal(MAINSEEALSOPROVIDER, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link ProviderVO.
     */
    public Row getProviderVO() {
        return (Row)getAttributeInternal(PROVIDERVO);
    }

    /**
     * Sets the master-detail link ProviderVO between this object and <code>value</code>.
     */
    public void setProviderVO(Row value) {
        setAttributeInternal(PROVIDERVO, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ProviderKindLov.
     */
    public RowSet getProviderKindLov() {
        return (RowSet)getAttributeInternal(PROVIDERKINDLOV);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
