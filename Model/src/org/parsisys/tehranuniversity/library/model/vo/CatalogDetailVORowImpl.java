package org.parsisys.tehranuniversity.library.model.vo;

import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;

import oracle.jheadstart.util.DatabaseProcedure;

import org.parsisys.tehranuniversity.library.model.am.AppModuleImpl;
import org.parsisys.tehranuniversity.library.model.eo.CatalogDetailImpl;
import org.parsisys.tehranuniversity.library.util.ParsiUtil;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 05 12:09:02 GMT+03:30 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CatalogDetailVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Active {
            public Object get(CatalogDetailVORowImpl obj) {
                return obj.getActive();
            }

            public void put(CatalogDetailVORowImpl obj, Object value) {
                obj.setActive((Number)value);
            }
        }
        ,
        CatArtId {
            public Object get(CatalogDetailVORowImpl obj) {
                return obj.getCatArtId();
            }

            public void put(CatalogDetailVORowImpl obj, Object value) {
                obj.setCatArtId((Number)value);
            }
        }
        ,
        EnglishText {
            public Object get(CatalogDetailVORowImpl obj) {
                return obj.getEnglishText();
            }

            public void put(CatalogDetailVORowImpl obj, Object value) {
                obj.setEnglishText((String)value);
            }
        }
        ,
        Labcol {
            public Object get(CatalogDetailVORowImpl obj) {
                return obj.getLabcol();
            }

            public void put(CatalogDetailVORowImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        Text {
            public Object get(CatalogDetailVORowImpl obj) {
                return obj.getText();
            }

            public void put(CatalogDetailVORowImpl obj, Object value) {
                obj.setText((String)value);
            }
        }
        ,
        Value {
            public Object get(CatalogDetailVORowImpl obj) {
                return obj.getValue();
            }

            public void put(CatalogDetailVORowImpl obj, Object value) {
                obj.setValue((Number)value);
            }
        }
        ,
        MakhzanType {
            public Object get(CatalogDetailVORowImpl obj) {
                return obj.getMakhzanType();
            }

            public void put(CatalogDetailVORowImpl obj, Object value) {
                obj.setMakhzanType((Number)value);
            }
        }
        ,
        LoanableMakhzanString {
            public Object get(CatalogDetailVORowImpl obj) {
                return obj.getLoanableMakhzanString();
            }

            public void put(CatalogDetailVORowImpl obj, Object value) {
                obj.setLoanableMakhzanString((String)value);
            }
        }
        ,
        MemberSetUpVo {
            public Object get(CatalogDetailVORowImpl obj) {
                return obj.getMemberSetUpVo();
            }

            public void put(CatalogDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CatalogDetailVORowImpl object);

        public abstract void put(CatalogDetailVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ACTIVE = AttributesEnum.Active.index();
    public static final int CATARTID = AttributesEnum.CatArtId.index();
    public static final int ENGLISHTEXT = AttributesEnum.EnglishText.index();
    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int TEXT = AttributesEnum.Text.index();
    public static final int VALUE = AttributesEnum.Value.index();
    public static final int MAKHZANTYPE = AttributesEnum.MakhzanType.index();
    public static final int LOANABLEMAKHZANSTRING = AttributesEnum.LoanableMakhzanString.index();
    public static final int MEMBERSETUPVO = AttributesEnum.MemberSetUpVo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CatalogDetailVORowImpl() {
    }

    /**
     * Gets CatalogDetail entity object.
     * @return the CatalogDetail
     */
    public CatalogDetailImpl getCatalogDetail() {
        return (CatalogDetailImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ACTIVE using the alias name Active.
     * @return the ACTIVE
     */
    public Number getActive() {
        return (Number) getAttributeInternal(ACTIVE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVE using the alias name Active.
     * @param value value to set the ACTIVE
     */
    public void setActive(Number value) {
        setAttributeInternal(ACTIVE, value);
    }

    /**
     * Gets the attribute value for CAT_ART_ID using the alias name CatArtId.
     * @return the CAT_ART_ID
     */
    public Number getCatArtId() {
        return (Number) getAttributeInternal(CATARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for CAT_ART_ID using the alias name CatArtId.
     * @param value value to set the CAT_ART_ID
     */
    public void setCatArtId(Number value) {
        setAttributeInternal(CATARTID, value);
    }

    /**
     * Gets the attribute value for ENGLISH_TEXT using the alias name EnglishText.
     * @return the ENGLISH_TEXT
     */
    public String getEnglishText() {
        return (String) getAttributeInternal(ENGLISHTEXT);
    }

    /**
     * Sets <code>value</code> as attribute value for ENGLISH_TEXT using the alias name EnglishText.
     * @param value value to set the ENGLISH_TEXT
     */
    public void setEnglishText(String value) {
        setAttributeInternal(ENGLISHTEXT, value);
    }

    /**
     * Gets the attribute value for LABCOL using the alias name Labcol.
     * @return the LABCOL
     */
    public Number getLabcol() {
        return (Number) getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as attribute value for LABCOL using the alias name Labcol.
     * @param value value to set the LABCOL
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for TEXT using the alias name Text.
     * @return the TEXT
     */
    public String getText() {
        return (String) getAttributeInternal(TEXT);
    }

    /**
     * Sets <code>value</code> as attribute value for TEXT using the alias name Text.
     * @param value value to set the TEXT
     */
    public void setText(String value) {
        setAttributeInternal(TEXT, value);
    }

    /**
     * Gets the attribute value for VALUE using the alias name Value.
     * @return the VALUE
     */
    public Number getValue() {
        return (Number) getAttributeInternal(VALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for VALUE using the alias name Value.
     * @param value value to set the VALUE
     */
    public void setValue(Number value) {
        setAttributeInternal(VALUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MakhzanType.
     * @return the MakhzanType
     */
    public Number getMakhzanType() {
     Number makhzanType = null;
         //(Number)getAttributeInternal(MAKHZANTYPE);
      if(getValue()==null)
          return new Number(0);
      
      DatabaseProcedure item_text =
        DatabaseProcedure.define("FUNCTION parsi_pkg_catalog.ITEM_TEXT(CAT_NAME VARCHAR2,ITEM_VAL NUMBER,labcol_no number) RETURN VARCHAR2;");
      
      String  list_of_loanable_makhzan = (String) item_text.call(((AppModuleImpl)getApplicationModule()).getDBTransaction(), "LOANABLE_BOOK_PLACE",1,((AppModuleImpl)getApplicationModule()).getDBTransaction().getSession().getUserData().get("labcolno")).getReturnValue();
     if(list_of_loanable_makhzan==null)
         return new Number(0);
       if(ParsiUtil.contains(list_of_loanable_makhzan, ",", getValue().toString()) )
         makhzanType=new Number(1);
       else
         makhzanType=new Number(0);
           
        return makhzanType;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MakhzanType.
     * @param value value to set the  MakhzanType
     */
    public void setMakhzanType(Number value) {
        setAttributeInternal(MAKHZANTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LoanableMakhzanString.
     * @return the LoanableMakhzanString
     */
    public String getLoanableMakhzanString() {
        return (String) getAttributeInternal(LOANABLEMAKHZANSTRING);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LoanableMakhzanString.
     * @param value value to set the  LoanableMakhzanString
     */
    public void setLoanableMakhzanString(String value) {
        setAttributeInternal(LOANABLEMAKHZANSTRING, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MemberSetUpVo.
     */
    public RowIterator getMemberSetUpVo() {
        return (RowIterator)getAttributeInternal(MEMBERSETUPVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
