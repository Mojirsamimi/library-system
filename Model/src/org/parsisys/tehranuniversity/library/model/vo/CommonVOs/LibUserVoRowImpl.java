package org.parsisys.tehranuniversity.library.model.vo.CommonVOs;

import fadak.base.TemplateViewRow;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 22 13:05:30 GMT+04:00 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LibUserVoRowImpl extends TemplateViewRow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Enable {
            public Object get(LibUserVoRowImpl obj) {
                return obj.getEnable();
            }

            public void put(LibUserVoRowImpl obj, Object value) {
                obj.setEnable((Number)value);
            }
        }
        ,
        Labcol {
            public Object get(LibUserVoRowImpl obj) {
                return obj.getLabcol();
            }

            public void put(LibUserVoRowImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        Name {
            public Object get(LibUserVoRowImpl obj) {
                return obj.getName();
            }

            public void put(LibUserVoRowImpl obj, Object value) {
                obj.setName((String)value);
            }
        }
        ,
        Password {
            public Object get(LibUserVoRowImpl obj) {
                return obj.getPassword();
            }

            public void put(LibUserVoRowImpl obj, Object value) {
                obj.setPassword((String)value);
            }
        }
        ,
        UserName {
            public Object get(LibUserVoRowImpl obj) {
                return obj.getUserName();
            }

            public void put(LibUserVoRowImpl obj, Object value) {
                obj.setUserName((String)value);
            }
        }
        ,
        LibUserRoleVo {
            public Object get(LibUserVoRowImpl obj) {
                return obj.getLibUserRoleVo();
            }

            public void put(LibUserVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Library {
            public Object get(LibUserVoRowImpl obj) {
                return obj.getLibrary();
            }

            public void put(LibUserVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LibRoleVO1 {
            public Object get(LibUserVoRowImpl obj) {
                return obj.getLibRoleVO1();
            }

            public void put(LibUserVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LibRoleVO {
            public Object get(LibUserVoRowImpl obj) {
                return obj.getLibRoleVO();
            }

            public void put(LibUserVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Library1 {
            public Object get(LibUserVoRowImpl obj) {
                return obj.getLibrary1();
            }

            public void put(LibUserVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(LibUserVoRowImpl object);

        public abstract void put(LibUserVoRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ENABLE = AttributesEnum.Enable.index();
    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int PASSWORD = AttributesEnum.Password.index();
    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int LIBUSERROLEVO = AttributesEnum.LibUserRoleVo.index();
    public static final int LIBRARY = AttributesEnum.Library.index();
    public static final int LIBROLEVO1 = AttributesEnum.LibRoleVO1.index();
    public static final int LIBROLEVO = AttributesEnum.LibRoleVO.index();
    public static final int LIBRARY1 = AttributesEnum.Library1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LibUserVoRowImpl() {
    }


    /**
     * Gets LibUser entity object.
     * @return the LibUser
     */
    public EntityImpl getLibUser() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ENABLE using the alias name Enable.
     * @return the ENABLE
     */
    public Number getEnable() {
        return (Number) getAttributeInternal(ENABLE);
    }

    /**
     * Sets <code>value</code> as attribute value for ENABLE using the alias name Enable.
     * @param value value to set the ENABLE
     */
    public void setEnable(Number value) {
        setAttributeInternal(ENABLE, value);
    }

    /**
     * Gets the attribute value for LABCOL using the alias name Labcol.
     * @return the LABCOL
     */
    public Number getLabcol() {
        return (Number) getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as attribute value for LABCOL using the alias name Labcol.
     * @param value value to set the LABCOL
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for PASSWORD using the alias name Password.
     * @return the PASSWORD
     */
    public String getPassword() {
        return (String) getAttributeInternal(PASSWORD);
    }

    /**
     * Sets <code>value</code> as attribute value for PASSWORD using the alias name Password.
     * @param value value to set the PASSWORD
     */
    public void setPassword(String value) {
        setAttributeInternal(PASSWORD, value);
    }

    /**
     * Gets the attribute value for USER_NAME using the alias name UserName.
     * @return the USER_NAME
     */
    public String getUserName() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_NAME using the alias name UserName.
     * @param value value to set the USER_NAME
     */
    public void setUserName(String value) {
        setAttributeInternal(USERNAME, value);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link LibUserRoleVo.
     */
    public RowIterator getLibUserRoleVo() {
        return (RowIterator)getAttributeInternal(LIBUSERROLEVO);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link Library.
     */
    public RowIterator getLibrary() {
        return (RowIterator)getAttributeInternal(LIBRARY);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link LibRoleVO1.
     */
    public RowIterator getLibRoleVO1() {
        return (RowIterator)getAttributeInternal(LIBROLEVO1);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link LibRoleVO.
     */
    public RowIterator getLibRoleVO() {
        return (RowIterator)getAttributeInternal(LIBROLEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Library1.
     */
    public RowSet getLibrary1() {
        return (RowSet)getAttributeInternal(LIBRARY1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
