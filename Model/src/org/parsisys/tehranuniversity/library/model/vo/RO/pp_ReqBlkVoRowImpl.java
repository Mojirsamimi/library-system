package org.parsisys.tehranuniversity.library.model.vo.RO;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 02 11:22:38 GMT+03:30 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class pp_ReqBlkVoRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DiRecLoad {
            public Object get(pp_ReqBlkVoRowImpl obj) {
                return obj.getDiRecLoad();
            }

            public void put(pp_ReqBlkVoRowImpl obj, Object value) {
                obj.setDiRecLoad((Number)value);
            }
        }
        ,
        DiRecLoan {
            public Object get(pp_ReqBlkVoRowImpl obj) {
                return obj.getDiRecLoan();
            }

            public void put(pp_ReqBlkVoRowImpl obj, Object value) {
                obj.setDiRecLoan((Number)value);
            }
        }
        ,
        DiReqKol {
            public Object get(pp_ReqBlkVoRowImpl obj) {
                return obj.getDiReqKol();
            }

            public void put(pp_ReqBlkVoRowImpl obj, Object value) {
                obj.setDiReqKol((Number)value);
            }
        }
        ,
        DiReqTime {
            public Object get(pp_ReqBlkVoRowImpl obj) {
                return obj.getDiReqTime();
            }

            public void put(pp_ReqBlkVoRowImpl obj, Object value) {
                obj.setDiReqTime((Number)value);
            }
        }
        ,
        ReqCount {
            public Object get(pp_ReqBlkVoRowImpl obj) {
                return obj.getReqCount();
            }

            public void put(pp_ReqBlkVoRowImpl obj, Object value) {
                obj.setReqCount((Number)value);
            }
        }
        ,
        ReqNum {
            public Object get(pp_ReqBlkVoRowImpl obj) {
                return obj.getReqNum();
            }

            public void put(pp_ReqBlkVoRowImpl obj, Object value) {
                obj.setReqNum((String)value);
            }
        }
        ,
        ReqTime {
            public Object get(pp_ReqBlkVoRowImpl obj) {
                return obj.getReqTime();
            }

            public void put(pp_ReqBlkVoRowImpl obj, Object value) {
                obj.setReqTime((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(pp_ReqBlkVoRowImpl object);

        public abstract void put(pp_ReqBlkVoRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DIRECLOAD = AttributesEnum.DiRecLoad.index();
    public static final int DIRECLOAN = AttributesEnum.DiRecLoan.index();
    public static final int DIREQKOL = AttributesEnum.DiReqKol.index();
    public static final int DIREQTIME = AttributesEnum.DiReqTime.index();
    public static final int REQCOUNT = AttributesEnum.ReqCount.index();
    public static final int REQNUM = AttributesEnum.ReqNum.index();
    public static final int REQTIME = AttributesEnum.ReqTime.index();

    /**
     * This is the default constructor (do not remove).
     */
    public pp_ReqBlkVoRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute DiRecLoad.
     * @return the DiRecLoad
     */
    public Number getDiRecLoad() {
        return (Number) getAttributeInternal(DIRECLOAD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DiRecLoad.
     * @param value value to set the  DiRecLoad
     */
    public void setDiRecLoad(Number value) {
        setAttributeInternal(DIRECLOAD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DiRecLoan.
     * @return the DiRecLoan
     */
    public Number getDiRecLoan() {
        return (Number) getAttributeInternal(DIRECLOAN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DiRecLoan.
     * @param value value to set the  DiRecLoan
     */
    public void setDiRecLoan(Number value) {
        setAttributeInternal(DIRECLOAN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DiReqKol.
     * @return the DiReqKol
     */
    public Number getDiReqKol() {
        return (Number) getAttributeInternal(DIREQKOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DiReqKol.
     * @param value value to set the  DiReqKol
     */
    public void setDiReqKol(Number value) {
        setAttributeInternal(DIREQKOL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DiReqTime.
     * @return the DiReqTime
     */
    public Number getDiReqTime() {
        return (Number) getAttributeInternal(DIREQTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DiReqTime.
     * @param value value to set the  DiReqTime
     */
    public void setDiReqTime(Number value) {
        setAttributeInternal(DIREQTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReqCount.
     * @return the ReqCount
     */
    public Number getReqCount() {
        return (Number) getAttributeInternal(REQCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReqCount.
     * @param value value to set the  ReqCount
     */
    public void setReqCount(Number value) {
        setAttributeInternal(REQCOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReqNum.
     * @return the ReqNum
     */
    public String getReqNum() {
        return (String) getAttributeInternal(REQNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReqNum.
     * @param value value to set the  ReqNum
     */
    public void setReqNum(String value) {
        setAttributeInternal(REQNUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReqTime.
     * @return the ReqTime
     */
    public String getReqTime() {
        return (String) getAttributeInternal(REQTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReqTime.
     * @param value value to set the  ReqTime
     */
    public void setReqTime(String value) {
        setAttributeInternal(REQTIME, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
