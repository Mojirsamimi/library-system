package org.parsisys.tehranuniversity.library.model.vo;

import oracle.jbo.Row;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 13 14:52:07 GMT+03:30 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PublicNonCashPenaltyVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Labcol {
            public Object get(PublicNonCashPenaltyVORowImpl obj) {
                return obj.getLabcol();
            }

            public void put(PublicNonCashPenaltyVORowImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        PenaltyDesc {
            public Object get(PublicNonCashPenaltyVORowImpl obj) {
                return obj.getPenaltyDesc();
            }

            public void put(PublicNonCashPenaltyVORowImpl obj, Object value) {
                obj.setPenaltyDesc((String)value);
            }
        }
        ,
        PenaltyDate {
            public Object get(PublicNonCashPenaltyVORowImpl obj) {
                return obj.getPenaltyDate();
            }

            public void put(PublicNonCashPenaltyVORowImpl obj, Object value) {
                obj.setPenaltyDate((Number)value);
            }
        }
        ,
        ActionDesc {
            public Object get(PublicNonCashPenaltyVORowImpl obj) {
                return obj.getActionDesc();
            }

            public void put(PublicNonCashPenaltyVORowImpl obj, Object value) {
                obj.setActionDesc((String)value);
            }
        }
        ,
        ActionDate {
            public Object get(PublicNonCashPenaltyVORowImpl obj) {
                return obj.getActionDate();
            }

            public void put(PublicNonCashPenaltyVORowImpl obj, Object value) {
                obj.setActionDate((Number)value);
            }
        }
        ,
        Active {
            public Object get(PublicNonCashPenaltyVORowImpl obj) {
                return obj.getActive();
            }

            public void put(PublicNonCashPenaltyVORowImpl obj, Object value) {
                obj.setActive((Number)value);
            }
        }
        ,
        ArtId {
            public Object get(PublicNonCashPenaltyVORowImpl obj) {
                return obj.getArtId();
            }

            public void put(PublicNonCashPenaltyVORowImpl obj, Object value) {
                obj.setArtId((DBSequence)value);
            }
        }
        ,
        MemArtId {
            public Object get(PublicNonCashPenaltyVORowImpl obj) {
                return obj.getMemArtId();
            }

            public void put(PublicNonCashPenaltyVORowImpl obj, Object value) {
                obj.setMemArtId((Number)value);
            }
        }
        ,
        RegisterUser {
            public Object get(PublicNonCashPenaltyVORowImpl obj) {
                return obj.getRegisterUser();
            }

            public void put(PublicNonCashPenaltyVORowImpl obj, Object value) {
                obj.setRegisterUser((String)value);
            }
        }
        ,
        ActionUser {
            public Object get(PublicNonCashPenaltyVORowImpl obj) {
                return obj.getActionUser();
            }

            public void put(PublicNonCashPenaltyVORowImpl obj, Object value) {
                obj.setActionUser((String)value);
            }
        }
        ,
        InitMemberVO {
            public Object get(PublicNonCashPenaltyVORowImpl obj) {
                return obj.getInitMemberVO();
            }

            public void put(PublicNonCashPenaltyVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PublicNonCashPenaltyVORowImpl object);

        public abstract void put(PublicNonCashPenaltyVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int PENALTYDESC = AttributesEnum.PenaltyDesc.index();
    public static final int PENALTYDATE = AttributesEnum.PenaltyDate.index();
    public static final int ACTIONDESC = AttributesEnum.ActionDesc.index();
    public static final int ACTIONDATE = AttributesEnum.ActionDate.index();
    public static final int ACTIVE = AttributesEnum.Active.index();
    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int MEMARTID = AttributesEnum.MemArtId.index();
    public static final int REGISTERUSER = AttributesEnum.RegisterUser.index();
    public static final int ACTIONUSER = AttributesEnum.ActionUser.index();
    public static final int INITMEMBERVO = AttributesEnum.InitMemberVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PublicNonCashPenaltyVORowImpl() {
    }

    /**
     * Gets PublicNonCashPenalty entity object.
     * @return the PublicNonCashPenalty
     */
    public EntityImpl getPublicNonCashPenalty() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for LABCOL using the alias name Labcol.
     * @return the LABCOL
     */
    public Number getLabcol() {
        return (Number) getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as attribute value for LABCOL using the alias name Labcol.
     * @param value value to set the LABCOL
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for PENALTY_DESC using the alias name PenaltyDesc.
     * @return the PENALTY_DESC
     */
    public String getPenaltyDesc() {
        return (String) getAttributeInternal(PENALTYDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for PENALTY_DESC using the alias name PenaltyDesc.
     * @param value value to set the PENALTY_DESC
     */
    public void setPenaltyDesc(String value) {
        setAttributeInternal(PENALTYDESC, value);
    }

    /**
     * Gets the attribute value for PENALTY_DATE using the alias name PenaltyDate.
     * @return the PENALTY_DATE
     */
    public Number getPenaltyDate() {
        return (Number) getAttributeInternal(PENALTYDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for PENALTY_DATE using the alias name PenaltyDate.
     * @param value value to set the PENALTY_DATE
     */
    public void setPenaltyDate(Number value) {
        setAttributeInternal(PENALTYDATE, value);
    }

    /**
     * Gets the attribute value for ACTION_DESC using the alias name ActionDesc.
     * @return the ACTION_DESC
     */
    public String getActionDesc() {
        return (String) getAttributeInternal(ACTIONDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTION_DESC using the alias name ActionDesc.
     * @param value value to set the ACTION_DESC
     */
    public void setActionDesc(String value) {
        setAttributeInternal(ACTIONDESC, value);
    }

    /**
     * Gets the attribute value for ACTION_DATE using the alias name ActionDate.
     * @return the ACTION_DATE
     */
    public Number getActionDate() {
        return (Number) getAttributeInternal(ACTIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTION_DATE using the alias name ActionDate.
     * @param value value to set the ACTION_DATE
     */
    public void setActionDate(Number value) {
        setAttributeInternal(ACTIONDATE, value);
    }

    /**
     * Gets the attribute value for ACTIVE using the alias name Active.
     * @return the ACTIVE
     */
    public Number getActive() {
        return (Number) getAttributeInternal(ACTIVE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVE using the alias name Active.
     * @param value value to set the ACTIVE
     */
    public void setActive(Number value) {
        setAttributeInternal(ACTIVE, value);
    }

    /**
     * Gets the attribute value for ART_ID using the alias name ArtId.
     * @return the ART_ID
     */
    public DBSequence getArtId() {
        return (DBSequence)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ART_ID using the alias name ArtId.
     * @param value value to set the ART_ID
     */
    public void setArtId(DBSequence value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for MEM_ART_ID using the alias name MemArtId.
     * @return the MEM_ART_ID
     */
    public Number getMemArtId() {
        return (Number) getAttributeInternal(MEMARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for MEM_ART_ID using the alias name MemArtId.
     * @param value value to set the MEM_ART_ID
     */
    public void setMemArtId(Number value) {
        setAttributeInternal(MEMARTID, value);
    }

    /**
     * Gets the attribute value for REGISTER_USER using the alias name RegisterUser.
     * @return the REGISTER_USER
     */
    public String getRegisterUser() {
        return (String) getAttributeInternal(REGISTERUSER);
    }

    /**
     * Sets <code>value</code> as attribute value for REGISTER_USER using the alias name RegisterUser.
     * @param value value to set the REGISTER_USER
     */
    public void setRegisterUser(String value) {
        setAttributeInternal(REGISTERUSER, value);
    }

    /**
     * Gets the attribute value for ACTION_USER using the alias name ActionUser.
     * @return the ACTION_USER
     */
    public String getActionUser() {
        return (String) getAttributeInternal(ACTIONUSER);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTION_USER using the alias name ActionUser.
     * @param value value to set the ACTION_USER
     */
    public void setActionUser(String value) {
        setAttributeInternal(ACTIONUSER, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link InitMemberVO.
     */
    public Row getInitMemberVO() {
        return (Row)getAttributeInternal(INITMEMBERVO);
    }

    /**
     * Sets the master-detail link InitMemberVO between this object and <code>value</code>.
     */
    public void setInitMemberVO(Row value) {
        setAttributeInternal(INITMEMBERVO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
