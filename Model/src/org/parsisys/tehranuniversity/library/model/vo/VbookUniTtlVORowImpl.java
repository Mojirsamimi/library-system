package org.parsisys.tehranuniversity.library.model.vo;

import fadak.base.TemplateViewRow;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;

import org.parsisys.tehranuniversity.library.model.eo.UniformTitleImpl;
import org.parsisys.tehranuniversity.library.model.eo.VbookUniformTitleImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 16 16:47:28 GST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VbookUniTtlVORowImpl extends TemplateViewRow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Printable {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getPrintable();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setPrintable((Number)value);
            }
        }
        ,
        Labcol {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getLabcol();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setLabcol((Number)value);
            }
        }
        ,
        VbookArtId {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getVbookArtId();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setVbookArtId((Number)value);
            }
        }
        ,
        UniTitleArtId {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getUniTitleArtId();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setUniTitleArtId((Number)value);
            }
        }
        ,
        Uniform_Title {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getUniform_Title();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setUniform_Title((String)value);
            }
        }
        ,
        Labcol1 {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getLabcol1();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setLabcol1((Number)value);
            }
        }
        ,
        ArtId {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getArtId();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setArtId((DBSequence)value);
            }
        }
        ,
        ReferenceType {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getReferenceType();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setReferenceType((Number)value);
            }
        }
        ,
        ReadingOrder {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getReadingOrder();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setReadingOrder((Number)value);
            }
        }
        ,
        OrderNo {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getOrderNo();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setOrderNo((Number)value);
            }
        }
        ,
        printableBoolean {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getprintableBoolean();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setprintableBoolean((Boolean)value);
            }
        }
        ,
        UniformTitleText {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getUniformTitleText();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setUniformTitleText((String)value);
            }
        }
        ,
        UniformTitleVO {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getUniformTitleVO();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Reading_OrderVO {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getReading_OrderVO();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VbookUniTtlVO_VirtualBookVOLookup {
            public Object get(VbookUniTtlVORowImpl obj) {
                return obj.getVbookUniTtlVO_VirtualBookVOLookup();
            }

            public void put(VbookUniTtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(VbookUniTtlVORowImpl object);

        public abstract void put(VbookUniTtlVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PRINTABLE = AttributesEnum.Printable.index();
    public static final int LABCOL = AttributesEnum.Labcol.index();
    public static final int VBOOKARTID = AttributesEnum.VbookArtId.index();
    public static final int UNITITLEARTID = AttributesEnum.UniTitleArtId.index();
    public static final int UNIFORM_TITLE = AttributesEnum.Uniform_Title.index();
    public static final int LABCOL1 = AttributesEnum.Labcol1.index();
    public static final int ARTID = AttributesEnum.ArtId.index();
    public static final int REFERENCETYPE = AttributesEnum.ReferenceType.index();
    public static final int READINGORDER = AttributesEnum.ReadingOrder.index();
    public static final int ORDERNO = AttributesEnum.OrderNo.index();
    public static final int PRINTABLEBOOLEAN = AttributesEnum.printableBoolean.index();
    public static final int UNIFORMTITLETEXT = AttributesEnum.UniformTitleText.index();
    public static final int UNIFORMTITLEVO = AttributesEnum.UniformTitleVO.index();
    public static final int READING_ORDERVO = AttributesEnum.Reading_OrderVO.index();
    public static final int VBOOKUNITTLVO_VIRTUALBOOKVOLOOKUP = AttributesEnum.VbookUniTtlVO_VirtualBookVOLookup.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VbookUniTtlVORowImpl() {
    }

    /**
     * Gets VbookUniformTitle entity object.
     * @return the VbookUniformTitle
     */
    public VbookUniformTitleImpl getVbookUniformTitle() {
        return (VbookUniformTitleImpl)getEntity(0);
    }

    /**
     * Gets UniformTitle entity object.
     * @return the UniformTitle
     */
    public UniformTitleImpl getUniformTitle() {
        return (UniformTitleImpl)getEntity(1);
    }

    /**
     * Gets the attribute value for PRINTABLE using the alias name Printable.
     * @return the PRINTABLE
     */
    public Number getPrintable() {
        return (Number) getAttributeInternal(PRINTABLE);
    }

    /**
     * Sets <code>value</code> as attribute value for PRINTABLE using the alias name Printable.
     * @param value value to set the PRINTABLE
     */
    public void setPrintable(Number value) {
        setAttributeInternal(PRINTABLE, value);
    }

    /**
     * Gets the attribute value for LABCOL using the alias name Labcol.
     * @return the LABCOL
     */
    public Number getLabcol() {
        return (Number) getAttributeInternal(LABCOL);
    }

    /**
     * Sets <code>value</code> as attribute value for LABCOL using the alias name Labcol.
     * @param value value to set the LABCOL
     */
    public void setLabcol(Number value) {
        setAttributeInternal(LABCOL, value);
    }

    /**
     * Gets the attribute value for VBOOK_ART_ID using the alias name VbookArtId.
     * @return the VBOOK_ART_ID
     */
    public Number getVbookArtId() {
        return (Number) getAttributeInternal(VBOOKARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for VBOOK_ART_ID using the alias name VbookArtId.
     * @param value value to set the VBOOK_ART_ID
     */
    public void setVbookArtId(Number value) {
        setAttributeInternal(VBOOKARTID, value);
    }

    /**
     * Gets the attribute value for UNI_TITLE_ART_ID using the alias name UniTitleArtId.
     * @return the UNI_TITLE_ART_ID
     */
    public Number getUniTitleArtId() {
        return (Number) getAttributeInternal(UNITITLEARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for UNI_TITLE_ART_ID using the alias name UniTitleArtId.
     * @param value value to set the UNI_TITLE_ART_ID
     */
    public void setUniTitleArtId(Number value) {
        setAttributeInternal(UNITITLEARTID, value);
    }

    /**
     * Gets the attribute value for TITLE using the alias name Uniform_Title.
     * @return the TITLE
     */
    public String getUniform_Title() {
        return (String) getAttributeInternal(UNIFORM_TITLE);
    }

    /**
     * Sets <code>value</code> as attribute value for TITLE using the alias name Uniform_Title.
     * @param value value to set the TITLE
     */
    public void setUniform_Title(String value) {
        setAttributeInternal(UNIFORM_TITLE, value);
    }

    /**
     * Gets the attribute value for LABCOL using the alias name Labcol1.
     * @return the LABCOL
     */
    public Number getLabcol1() {
        return (Number) getAttributeInternal(LABCOL1);
    }

    /**
     * Sets <code>value</code> as attribute value for LABCOL using the alias name Labcol1.
     * @param value value to set the LABCOL
     */
    public void setLabcol1(Number value) {
        setAttributeInternal(LABCOL1, value);
    }

    /**
     * Gets the attribute value for ART_ID using the alias name ArtId.
     * @return the ART_ID
     */
    public DBSequence getArtId() {
        return (DBSequence)getAttributeInternal(ARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ART_ID using the alias name ArtId.
     * @param value value to set the ART_ID
     */
    public void setArtId(DBSequence value) {
        setAttributeInternal(ARTID, value);
    }

    /**
     * Gets the attribute value for REFERENCE_TYPE using the alias name ReferenceType.
     * @return the REFERENCE_TYPE
     */
    public Number getReferenceType() {
        return (Number) getAttributeInternal(REFERENCETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for REFERENCE_TYPE using the alias name ReferenceType.
     * @param value value to set the REFERENCE_TYPE
     */
    public void setReferenceType(Number value) {
        setAttributeInternal(REFERENCETYPE, value);
    }

    /**
     * Gets the attribute value for READING_ORDER using the alias name ReadingOrder.
     * @return the READING_ORDER
     */
    public Number getReadingOrder() {
        return (Number) getAttributeInternal(READINGORDER);
    }

    /**
     * Sets <code>value</code> as attribute value for READING_ORDER using the alias name ReadingOrder.
     * @param value value to set the READING_ORDER
     */
    public void setReadingOrder(Number value) {
        setAttributeInternal(READINGORDER, value);
    }

    /**
     * Gets the attribute value for ORDER_NO using the alias name OrderNo.
     * @return the ORDER_NO
     */
    public Number getOrderNo() {
        return (Number) getAttributeInternal(ORDERNO);
    }

    /**
     * Sets <code>value</code> as attribute value for ORDER_NO using the alias name OrderNo.
     * @param value value to set the ORDER_NO
     */
    public void setOrderNo(Number value) {
        setAttributeInternal(ORDERNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute printableBoolean.
     * @return the printableBoolean
     */
    public Boolean getprintableBoolean() {
      //  return (Boolean) getAttributeInternal(PRINTABLEBOOLEAN);
      if(getPrintable()==null  || getPrintable().equals(new Number(0))){
        return Boolean.FALSE;
      }
      return Boolean.TRUE;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute printableBoolean.
     * @param value value to set the  printableBoolean
     */
    public void setprintableBoolean(Boolean value) {
      setAttributeInternal(PRINTABLEBOOLEAN, value);
      if(value==null || value.equals(Boolean.FALSE))
      setPrintable(new Number(0));
      else
      setPrintable(new Number(1));
    }

    /**
     * Gets the attribute value for the calculated attribute UniformTitleText.
     * @return the UniformTitleText
     */
    public String getUniformTitleText() {
        //return (String) getAttributeInternal(UNIFORMTITLETEXT);
        Row r = getUniformTitleVO();
        if(r==null || r.getAttribute("Title")==null)
            return null;
        
        return (String)r.getAttribute("Title");
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UniformTitleText.
     * @param value value to set the  UniformTitleText
     */
    public void setUniformTitleText(String value) {
        setAttributeInternal(UNIFORMTITLETEXT, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link UniformTitleVO.
     */
    public Row getUniformTitleVO() {
        return (Row)getAttributeInternal(UNIFORMTITLEVO);
    }

    /**
     * Sets the master-detail link UniformTitleVO between this object and <code>value</code>.
     */
    public void setUniformTitleVO(Row value) {
        setAttributeInternal(UNIFORMTITLEVO, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Reading_OrderVO.
     */
    public RowSet getReading_OrderVO() {
        return (RowSet)getAttributeInternal(READING_ORDERVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> VbookUniTtlVO_VirtualBookVOLookup.
     */
    public RowSet getVbookUniTtlVO_VirtualBookVOLookup() {
        return (RowSet)getAttributeInternal(VBOOKUNITTLVO_VIRTUALBOOKVOLOOKUP);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
